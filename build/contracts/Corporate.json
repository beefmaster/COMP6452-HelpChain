{
  "contractName": "Corporate",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
<<<<<<< HEAD
=======
          "internalType": "contract Admin",
          "name": "admin_",
          "type": "address"
        },
        {
>>>>>>> main
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
<<<<<<< HEAD
=======
      "name": "admin",
      "outputs": [
        {
          "internalType": "contract Admin",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
>>>>>>> main
      "name": "corporate_id",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "corporate_name_",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creator_",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "subs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "subsidiaries",
      "outputs": [
        {
          "internalType": "address",
          "name": "subAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "whitelist",
      "outputs": [
        {
          "internalType": "contract Whitelist",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "createSub",
      "outputs": [
        {
<<<<<<< HEAD
          "internalType": "bool",
          "name": "",
          "type": "bool"
=======
          "internalType": "address",
          "name": "",
          "type": "address"
>>>>>>> main
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getSubContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "toCheck",
          "type": "address"
        }
      ],
      "name": "checkIfSubsidiaryValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Whitelist",
          "name": "whitelist_",
          "type": "address"
        }
      ],
      "name": "updateWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableCorporate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
<<<<<<< HEAD
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toCheck\",\"type\":\"address\"}],\"name\":\"checkIfSubsidiaryValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"corporate_id\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"corporate_name_\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"createSub\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableCorporate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getSubContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"subs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"subsidiaries\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"subAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Whitelist\",\"name\":\"whitelist_\",\"type\":\"address\"}],\"name\":\"updateWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"contract Whitelist\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CorporateFactory.sol\":\"Corporate\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/CorporateFactory.sol\":{\"keccak256\":\"0x7dee83257bd9f0137db6acb4c638a2bbafafef70a37755130fa6f717a2f08b08\",\"urls\":[\"bzz-raw://8d13a47611cd65485871a0237b45449d2aaf74330bd30aa1637fafb21804750d\",\"dweb:/ipfs/QmQexnmJYwJK23Rkgj6QAXztP15VLu1QjrAZs1A1bCLEHN\"]},\"project:/contracts/Whitelist.sol\":{\"keccak256\":\"0xfa0d024de0f022f219cd144b478590a34ec849ff4e0806a1030c4f953cdeab1e\",\"urls\":[\"bzz-raw://e46cfbcee151b30e3d9b92a5ce06e6c8791323dedfa48749e7ef4701b2b1487a\",\"dweb:/ipfs/Qmdef9QTZbeUsPHcHygWWpNL8yz1RuUoHYKsRbS71r9tVx\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001e4938038062001e49833981810160405281019062000037919062000239565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060039080519060200190620000d0929190620000f4565b506001600660146101000a81548160ff021916908315150217905550505062000471565b828054620001029062000368565b90600052602060002090601f01602090048101928262000126576000855562000172565b82601f106200014157805160ff191683800117855562000172565b8280016001018555821562000172579182015b828111156200017157825182559160200191906001019062000154565b5b50905062000181919062000185565b5090565b5b80821115620001a057600081600090555060010162000186565b5090565b6000620001bb620001b584620002c8565b6200029f565b905082815260208101848484011115620001da57620001d962000437565b5b620001e784828562000332565b509392505050565b600081519050620002008162000457565b92915050565b600082601f8301126200021e576200021d62000432565b5b815162000230848260208601620001a4565b91505092915050565b6000806040838503121562000253576200025262000441565b5b60006200026385828601620001ef565b925050602083015167ffffffffffffffff8111156200028757620002866200043c565b5b620002958582860162000206565b9150509250929050565b6000620002ab620002be565b9050620002b982826200039e565b919050565b6000604051905090565b600067ffffffffffffffff821115620002e657620002e562000403565b5b620002f18262000446565b9050602081019050919050565b60006200030b8262000312565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156200035257808201518184015260208101905062000335565b8381111562000362576000848401525b50505050565b600060028204905060018216806200038157607f821691505b60208210811415620003985762000397620003d4565b5b50919050565b620003a98262000446565b810181811067ffffffffffffffff82111715620003cb57620003ca62000403565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6200046281620002fe565b81146200046e57600080fd5b50565b6119c880620004816000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638ba4d864116100715780638ba4d864146101a35780638da5cb5b146101c157806393e59dc1146101df57806398f4448a146101fd578063f41114961461021b578063f8a64f9a1461024b576100b4565b806334929e9a146100b95780633d0f963e146100d75780636fdbaf43146100f3578063805f420214610123578063869080bf1461015357806389165e4014610185575b600080fd5b6100c161027b565b6040516100ce9190610fd9565b60405180910390f35b6100f160048036038101906100ec9190610dda565b610281565b005b61010d60048036038101906101089190610d80565b610597565b60405161011a9190610f41565b60405180910390f35b61013d60048036038101906101389190610e07565b6106e2565b60405161014a9190610f41565b60405180910390f35b61016d60048036038101906101689190610d80565b610982565b60405161017c93929190610f0a565b60405180910390f35b61018d6109d9565b60405161019a9190610eef565b60405180910390f35b6101ab6109fd565b6040516101b89190610f77565b60405180910390f35b6101c9610a8b565b6040516101d69190610eef565b60405180910390f35b6101e7610ab1565b6040516101f49190610f5c565b60405180910390f35b610205610ad7565b6040516102129190610f41565b60405180910390f35b61023560048036038101906102309190610e07565b610bc7565b6040516102429190610eef565b60405180910390f35b61026560048036038101906102609190610e07565b610cdf565b6040516102729190610eef565b60405180910390f35b60025481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610328575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61033157600080fd5b60011515600660149054906101000a900460ff1615151461035157600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103d057600080fd5b505afa1580156103e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104089190610dad565b73ffffffffffffffffffffffffffffffffffffffff161480610514575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104c457600080fd5b505afa1580156104d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fc9190610dad565b73ffffffffffffffffffffffffffffffffffffffff16145b610553576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054a90610fb9565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060011515600660149054906101000a900460ff161515146105b957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561068b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068290610f99565b60405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff169050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061078b575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61079457600080fd5b60011515600660149054906101000a900460ff161515146107b457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166107d583610bc7565b73ffffffffffffffffffffffffffffffffffffffff1614156107f657600080fd5b60003060405161080590610d1e565b61080f9190610eef565b604051809103906000f08015801561082b573d6000803e3d6000fd5b5090506005819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060405180606001604052808273ffffffffffffffffffffffffffffffffffffffff16815260200184815260200160011515815250600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055509050506001915050919050565b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900460ff16905083565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60038054610a0a906110c1565b80601f0160208091040260200160405190810160405280929190818152602001828054610a36906110c1565b8015610a835780601f10610a5857610100808354040283529160200191610a83565b820191906000526020600020905b815481529060010190602001808311610a6657829003601f168201915b505050505081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610b80575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610b8957600080fd5b60011515600660149054906101000a900460ff16151514610ba957600080fd5b6000600660146101000a81548160ff02191690831515021790555090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610c70575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610c7957600080fd5b60011515600660149054906101000a900460ff16151514610c9957600080fd5b60058281548110610cad57610cac611122565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60058181548110610cef57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61076e806200122583390190565b600081359050610d3b816111df565b92915050565b600081519050610d50816111df565b92915050565b600081359050610d65816111f6565b92915050565b600081359050610d7a8161120d565b92915050565b600060208284031215610d9657610d95611151565b5b6000610da484828501610d2c565b91505092915050565b600060208284031215610dc357610dc2611151565b5b6000610dd184828501610d41565b91505092915050565b600060208284031215610df057610def611151565b5b6000610dfe84828501610d56565b91505092915050565b600060208284031215610e1d57610e1c611151565b5b6000610e2b84828501610d6b565b91505092915050565b610e3d81611010565b82525050565b610e4c81611022565b82525050565b610e5b8161106a565b82525050565b6000610e6c82610ff4565b610e768185610fff565b9350610e8681856020860161108e565b610e8f81611156565b840191505092915050565b6000610ea7601883610fff565b9150610eb282611167565b602082019050919050565b6000610eca602483610fff565b9150610ed582611190565b604082019050919050565b610ee981611060565b82525050565b6000602082019050610f046000830184610e34565b92915050565b6000606082019050610f1f6000830186610e34565b610f2c6020830185610ee0565b610f396040830184610e43565b949350505050565b6000602082019050610f566000830184610e43565b92915050565b6000602082019050610f716000830184610e52565b92915050565b60006020820190508181036000830152610f918184610e61565b905092915050565b60006020820190508181036000830152610fb281610e9a565b9050919050565b60006020820190508181036000830152610fd281610ebd565b9050919050565b6000602082019050610fee6000830184610ee0565b92915050565b600081519050919050565b600082825260208201905092915050565b600061101b82611040565b9050919050565b60008115159050919050565b600061103982611010565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006110758261107c565b9050919050565b600061108782611040565b9050919050565b60005b838110156110ac578082015181840152602081019050611091565b838111156110bb576000848401525b50505050565b600060028204905060018216806110d957607f821691505b602082108114156110ed576110ec6110f3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f742061207375627369646961727920616464726573730000000000000000600082015250565b7f57686974656c697374206e6f742063726561746564206279206b6e6f776e207060008201527f6172747900000000000000000000000000000000000000000000000000000000602082015250565b6111e881611010565b81146111f357600080fd5b50565b6111ff8161102e565b811461120a57600080fd5b50565b61121681611060565b811461122157600080fd5b5056fe608060405234801561001057600080fd5b5060405161076e38038061076e83398181016040528101906100329190610095565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060018190555050610110565b60008151905061008f816100f9565b92915050565b6000602082840312156100ab576100aa6100f4565b5b60006100b984828501610080565b91505092915050565b60006100cd826100d4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610102816100c2565b811461010d57600080fd5b50565b61064f8061011f6000396000f3fe6080604052600436106100385760003560e01c80638b7342331461007d578063b119a9d61461009b578063ef5ea07c146100c657610078565b36610078577f7e71433ddf847725166244795048ecf3e3f9f35628254ecbf736056664233493333460405161006e9291906104a2565b60405180910390a1005b600080fd5b610085610103565b60405161009291906104cb565b60405180910390f35b3480156100a757600080fd5b506100b06101c8565b6040516100bd9190610487565b60405180910390f35b3480156100d257600080fd5b506100ed60048036038101906100e891906103d5565b6101ec565b6040516100fa91906104cb565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461015e57600080fd5b60006001549050600060018190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505091505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610299575060011515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b6102a257600080fd5b6001548373ffffffffffffffffffffffffffffffffffffffff163110156102fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f5906104e6565b60405180910390fd5b60405180606001604052808581526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815250600360008681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155905050600190509392505050565b6000813590506103ba816105eb565b92915050565b6000813590506103cf81610602565b92915050565b6000806000606084860312156103ee576103ed610571565b5b60006103fc868287016103c0565b935050602061040d868287016103ab565b925050604061041e868287016103c0565b9150509250925092565b61043181610529565b82525050565b61044081610517565b82525050565b61044f8161053b565b82525050565b6000610462604b83610506565b915061046d82610576565b606082019050919050565b61048181610567565b82525050565b600060208201905061049c6000830184610428565b92915050565b60006040820190506104b76000830185610437565b6104c46020830184610478565b9392505050565b60006020820190506104e06000830184610446565b92915050565b600060208201905081810360008301526104ff81610455565b9050919050565b600082825260208201905092915050565b600061052282610547565b9050919050565b600061053482610547565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f54686520526563656976657220636f6e747261637420646f6573206e6f74206860008201527f6176652073756666696369656e742062616c616e636520666f7220746869732060208201527f7472616e73616374696f6e000000000000000000000000000000000000000000604082015250565b6105f481610517565b81146105ff57600080fd5b50565b61060b81610567565b811461061657600080fd5b5056fea26469706673582212206a7da6a8945d2457f0dff77d1f1a26e1b4efd6fc825d7588597faf3033e4b90764736f6c63430008060033a264697066735822122019739bbfd04c9248bea45cb86a2014de7cbb755e1c2908bedd6fee1f6060492764736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c80638ba4d864116100715780638ba4d864146101a35780638da5cb5b146101c157806393e59dc1146101df57806398f4448a146101fd578063f41114961461021b578063f8a64f9a1461024b576100b4565b806334929e9a146100b95780633d0f963e146100d75780636fdbaf43146100f3578063805f420214610123578063869080bf1461015357806389165e4014610185575b600080fd5b6100c161027b565b6040516100ce9190610fd9565b60405180910390f35b6100f160048036038101906100ec9190610dda565b610281565b005b61010d60048036038101906101089190610d80565b610597565b60405161011a9190610f41565b60405180910390f35b61013d60048036038101906101389190610e07565b6106e2565b60405161014a9190610f41565b60405180910390f35b61016d60048036038101906101689190610d80565b610982565b60405161017c93929190610f0a565b60405180910390f35b61018d6109d9565b60405161019a9190610eef565b60405180910390f35b6101ab6109fd565b6040516101b89190610f77565b60405180910390f35b6101c9610a8b565b6040516101d69190610eef565b60405180910390f35b6101e7610ab1565b6040516101f49190610f5c565b60405180910390f35b610205610ad7565b6040516102129190610f41565b60405180910390f35b61023560048036038101906102309190610e07565b610bc7565b6040516102429190610eef565b60405180910390f35b61026560048036038101906102609190610e07565b610cdf565b6040516102729190610eef565b60405180910390f35b60025481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610328575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61033157600080fd5b60011515600660149054906101000a900460ff1615151461035157600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103d057600080fd5b505afa1580156103e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104089190610dad565b73ffffffffffffffffffffffffffffffffffffffff161480610514575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104c457600080fd5b505afa1580156104d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fc9190610dad565b73ffffffffffffffffffffffffffffffffffffffff16145b610553576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054a90610fb9565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060011515600660149054906101000a900460ff161515146105b957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561068b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068290610f99565b60405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff169050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061078b575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61079457600080fd5b60011515600660149054906101000a900460ff161515146107b457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166107d583610bc7565b73ffffffffffffffffffffffffffffffffffffffff1614156107f657600080fd5b60003060405161080590610d1e565b61080f9190610eef565b604051809103906000f08015801561082b573d6000803e3d6000fd5b5090506005819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060405180606001604052808273ffffffffffffffffffffffffffffffffffffffff16815260200184815260200160011515815250600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055509050506001915050919050565b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900460ff16905083565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60038054610a0a906110c1565b80601f0160208091040260200160405190810160405280929190818152602001828054610a36906110c1565b8015610a835780601f10610a5857610100808354040283529160200191610a83565b820191906000526020600020905b815481529060010190602001808311610a6657829003601f168201915b505050505081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610b80575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610b8957600080fd5b60011515600660149054906101000a900460ff16151514610ba957600080fd5b6000600660146101000a81548160ff02191690831515021790555090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610c70575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610c7957600080fd5b60011515600660149054906101000a900460ff16151514610c9957600080fd5b60058281548110610cad57610cac611122565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60058181548110610cef57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61076e806200122583390190565b600081359050610d3b816111df565b92915050565b600081519050610d50816111df565b92915050565b600081359050610d65816111f6565b92915050565b600081359050610d7a8161120d565b92915050565b600060208284031215610d9657610d95611151565b5b6000610da484828501610d2c565b91505092915050565b600060208284031215610dc357610dc2611151565b5b6000610dd184828501610d41565b91505092915050565b600060208284031215610df057610def611151565b5b6000610dfe84828501610d56565b91505092915050565b600060208284031215610e1d57610e1c611151565b5b6000610e2b84828501610d6b565b91505092915050565b610e3d81611010565b82525050565b610e4c81611022565b82525050565b610e5b8161106a565b82525050565b6000610e6c82610ff4565b610e768185610fff565b9350610e8681856020860161108e565b610e8f81611156565b840191505092915050565b6000610ea7601883610fff565b9150610eb282611167565b602082019050919050565b6000610eca602483610fff565b9150610ed582611190565b604082019050919050565b610ee981611060565b82525050565b6000602082019050610f046000830184610e34565b92915050565b6000606082019050610f1f6000830186610e34565b610f2c6020830185610ee0565b610f396040830184610e43565b949350505050565b6000602082019050610f566000830184610e43565b92915050565b6000602082019050610f716000830184610e52565b92915050565b60006020820190508181036000830152610f918184610e61565b905092915050565b60006020820190508181036000830152610fb281610e9a565b9050919050565b60006020820190508181036000830152610fd281610ebd565b9050919050565b6000602082019050610fee6000830184610ee0565b92915050565b600081519050919050565b600082825260208201905092915050565b600061101b82611040565b9050919050565b60008115159050919050565b600061103982611010565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006110758261107c565b9050919050565b600061108782611040565b9050919050565b60005b838110156110ac578082015181840152602081019050611091565b838111156110bb576000848401525b50505050565b600060028204905060018216806110d957607f821691505b602082108114156110ed576110ec6110f3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f742061207375627369646961727920616464726573730000000000000000600082015250565b7f57686974656c697374206e6f742063726561746564206279206b6e6f776e207060008201527f6172747900000000000000000000000000000000000000000000000000000000602082015250565b6111e881611010565b81146111f357600080fd5b50565b6111ff8161102e565b811461120a57600080fd5b50565b61121681611060565b811461122157600080fd5b5056fe608060405234801561001057600080fd5b5060405161076e38038061076e83398181016040528101906100329190610095565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060018190555050610110565b60008151905061008f816100f9565b92915050565b6000602082840312156100ab576100aa6100f4565b5b60006100b984828501610080565b91505092915050565b60006100cd826100d4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610102816100c2565b811461010d57600080fd5b50565b61064f8061011f6000396000f3fe6080604052600436106100385760003560e01c80638b7342331461007d578063b119a9d61461009b578063ef5ea07c146100c657610078565b36610078577f7e71433ddf847725166244795048ecf3e3f9f35628254ecbf736056664233493333460405161006e9291906104a2565b60405180910390a1005b600080fd5b610085610103565b60405161009291906104cb565b60405180910390f35b3480156100a757600080fd5b506100b06101c8565b6040516100bd9190610487565b60405180910390f35b3480156100d257600080fd5b506100ed60048036038101906100e891906103d5565b6101ec565b6040516100fa91906104cb565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461015e57600080fd5b60006001549050600060018190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505091505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610299575060011515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b6102a257600080fd5b6001548373ffffffffffffffffffffffffffffffffffffffff163110156102fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f5906104e6565b60405180910390fd5b60405180606001604052808581526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815250600360008681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155905050600190509392505050565b6000813590506103ba816105eb565b92915050565b6000813590506103cf81610602565b92915050565b6000806000606084860312156103ee576103ed610571565b5b60006103fc868287016103c0565b935050602061040d868287016103ab565b925050604061041e868287016103c0565b9150509250925092565b61043181610529565b82525050565b61044081610517565b82525050565b61044f8161053b565b82525050565b6000610462604b83610506565b915061046d82610576565b606082019050919050565b61048181610567565b82525050565b600060208201905061049c6000830184610428565b92915050565b60006040820190506104b76000830185610437565b6104c46020830184610478565b9392505050565b60006020820190506104e06000830184610446565b92915050565b600060208201905081810360008301526104ff81610455565b9050919050565b600082825260208201905092915050565b600061052282610547565b9050919050565b600061053482610547565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f54686520526563656976657220636f6e747261637420646f6573206e6f74206860008201527f6176652073756666696369656e742062616c616e636520666f7220746869732060208201527f7472616e73616374696f6e000000000000000000000000000000000000000000604082015250565b6105f481610517565b81146105ff57600080fd5b50565b61060b81610567565b811461061657600080fd5b5056fea26469706673582212206a7da6a8945d2457f0dff77d1f1a26e1b4efd6fc825d7588597faf3033e4b90764736f6c63430008060033a264697066735822122019739bbfd04c9248bea45cb86a2014de7cbb755e1c2908bedd6fee1f6060492764736f6c63430008060033",
=======
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"contract Admin\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"contract Admin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toCheck\",\"type\":\"address\"}],\"name\":\"checkIfSubsidiaryValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"corporate_id\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"corporate_name_\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"createSub\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableCorporate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getSubContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"subs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"subsidiaries\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"subAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Whitelist\",\"name\":\"whitelist_\",\"type\":\"address\"}],\"name\":\"updateWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"contract Whitelist\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CorporateFactory.sol\":\"Corporate\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Admin.sol\":{\"keccak256\":\"0xb7d2d551c1fd90bd0101c7b424d76a819f03655f88d03a845d72c3863776128f\",\"urls\":[\"bzz-raw://861c063cb4c0305fd961af50d2099e0c1aef78ec347680cb17ce1b2697958926\",\"dweb:/ipfs/QmRjx5twmEnR6m4DvfKfuWZryBzQUSE71uHq8kNEfm2GcR\"]},\"project:/contracts/CorporateFactory.sol\":{\"keccak256\":\"0x85f69673a556be5da424034827fc7df5e6919a8caef9a8481c6655f673c8c387\",\"urls\":[\"bzz-raw://fbda6b9907c1d7f8eab1a2d851b513b734484c9fc609ea5a1a1697e51745eb31\",\"dweb:/ipfs/QmPZZBjwLGmpVNCUbusVzC4Yp9wTRQ5rVsvJpHxKBmLkJ6\"]},\"project:/contracts/FundsPool.sol\":{\"keccak256\":\"0xc45f2844e3751b1067a4a80523cee6e8503819a87c4685b0eaea4bd64dc32733\",\"urls\":[\"bzz-raw://fa893d4530c290b3d0d7b21f4b115d3a98aa6437075d1b51730afd81600e8985\",\"dweb:/ipfs/QmUAFzN5PQ6eaVhhPkwvGCodrbqdqg9YHbzN8kBnSxMH7w\"]},\"project:/contracts/GiverFactory.sol\":{\"keccak256\":\"0x407f3d7849b386f5a4dbf997d4563f4f6ee2d966f67dbb43769f66b32b5f063d\",\"urls\":[\"bzz-raw://e91505602a76026ab3a5faae5f786b741137f366f75b1d5af194523233bc7103\",\"dweb:/ipfs/QmTKfzcTMFmHAoBjuodu89CyCrrjGAyeMHmErnMzVhpHGW\"]},\"project:/contracts/ReceiverFactory.sol\":{\"keccak256\":\"0x6d0b15835daaef37a6f7f6418ef615294d7790ab958ca11ee36950d0a9b7ab45\",\"urls\":[\"bzz-raw://b3afe0c513b61f6ac214e58d2caa685b595804816fb19c3c1f456c2f057e7c96\",\"dweb:/ipfs/QmXx74DuVeHFWS3WpKRK3kvd4X32Yd89xuVZUP6SycHriK\"]},\"project:/contracts/Whitelist.sol\":{\"keccak256\":\"0x692bdfad1d15e852adc20980e627a0ec38b195975df8b8c1a5d15b63884f848a\",\"urls\":[\"bzz-raw://ee70e20928351b069ff828d8d5cc43bebae3e2602a24fc2673e862a10ca4872a\",\"dweb:/ipfs/QmUEAEjUKhQAsnydyr96xiQyngbGkgdmRxEFt8hymYgLSY\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000e25760003560e01c80638ba4d864116200009957806398f4448a116200006f57806398f4448a1462000255578063f41114961462000277578063f851a44014620002ad578063f8a64f9a14620002cf57620000e2565b80638ba4d86414620001ef5780638da5cb5b146200021157806393e59dc1146200023357620000e2565b806334929e9a14620000e75780633d0f963e14620001095780636fdbaf431462000129578063805f4202146200015f578063869080bf146200019557806389165e4014620001cd575b600080fd5b620000f162000305565b604051620001009190620010f0565b60405180910390f35b62000127600480360381019062000121919062000e61565b6200030b565b005b62000147600480360381019062000141919062000dfd565b62000630565b60405162000156919062001014565b60405180910390f35b6200017d600480360381019062000177919062000e93565b6200077f565b6040516200018c919062000fba565b60405180910390f35b620001b36004803603810190620001ad919062000dfd565b62000a5f565b604051620001c49392919062000fd7565b60405180910390f35b620001d762000ab6565b604051620001e6919062000fba565b60405180910390f35b620001f962000ada565b60405162000208919062001088565b60405180910390f35b6200021b62000b70565b6040516200022a919062000fba565b60405180910390f35b6200023d62000b96565b6040516200024c91906200106b565b60405180910390f35b6200025f62000bbc565b6040516200026e919062001014565b60405180910390f35b6200029560048036038101906200028f919062000e93565b62000cc1565b604051620002a4919062000fba565b60405180910390f35b620002b762000d2d565b604051620002c6919062001031565b60405180910390f35b620002ed6004803603810190620002e7919062000e93565b62000d53565b604051620002fc919062000fba565b60405180910390f35b60035481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480620003b3575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b620003bd57600080fd5b60011515600760149054906101000a900460ff16151514620003de57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200045e57600080fd5b505afa15801562000473573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000499919062000e2f565b73ffffffffffffffffffffffffffffffffffffffff161480620005aa575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200055757600080fd5b505afa1580156200056c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000592919062000e2f565b73ffffffffffffffffffffffffffffffffffffffff16145b620005ec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005e390620010ce565b60405180910390fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060011515600760149054906101000a900460ff161515146200065357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141562000728576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200071f90620010ac565b60405180910390fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff169050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148062000829575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6200083357600080fd5b60011515600760149054906101000a900460ff161515146200085457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600683815481106200088357620008826200129a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614620008cf57600080fd5b600030604051620008e09062000d93565b620008ec91906200104e565b604051809103906000f08015801562000909573d6000803e3d6000fd5b5090506006819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060405180606001604052808273ffffffffffffffffffffffffffffffffffffffff16815260200184815260200160011515815250600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff02191690831515021790555090505080915050919050565b60056020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900460ff16905083565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6004805462000ae99062001235565b80601f016020809104026020016040519081016040528092919081815260200182805462000b179062001235565b801562000b685780601f1062000b3c5761010080835404028352916020019162000b68565b820191906000526020600020905b81548152906001019060200180831162000b4a57829003601f168201915b505050505081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148062000c66575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b62000c7057600080fd5b60011515600760149054906101000a900460ff1615151462000c9157600080fd5b6000600760146101000a81548160ff021916908315150217905550600760149054906101000a900460ff16905090565b600060011515600760149054906101000a900460ff1615151462000ce457600080fd5b6006828154811062000cfb5762000cfa6200129a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6006818154811062000d6457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61079280620013a683390190565b60008135905062000db28162001357565b92915050565b60008151905062000dc98162001357565b92915050565b60008135905062000de08162001371565b92915050565b60008135905062000df7816200138b565b92915050565b60006020828403121562000e165762000e15620012c9565b5b600062000e268482850162000da1565b91505092915050565b60006020828403121562000e485762000e47620012c9565b5b600062000e588482850162000db8565b91505092915050565b60006020828403121562000e7a5762000e79620012c9565b5b600062000e8a8482850162000dcf565b91505092915050565b60006020828403121562000eac5762000eab620012c9565b5b600062000ebc8482850162000de6565b91505092915050565b62000ed08162001129565b82525050565b62000ee1816200113d565b82525050565b62000ef28162001187565b82525050565b62000f0381620011af565b82525050565b62000f1481620011d7565b82525050565b600062000f27826200110d565b62000f33818562001118565b935062000f45818560208601620011ff565b62000f5081620012ce565b840191505092915050565b600062000f6a60188362001118565b915062000f7782620012df565b602082019050919050565b600062000f9160248362001118565b915062000f9e8262001308565b604082019050919050565b62000fb4816200117d565b82525050565b600060208201905062000fd1600083018462000ec5565b92915050565b600060608201905062000fee600083018662000ec5565b62000ffd602083018562000fa9565b6200100c604083018462000ed6565b949350505050565b60006020820190506200102b600083018462000ed6565b92915050565b600060208201905062001048600083018462000ee7565b92915050565b600060208201905062001065600083018462000ef8565b92915050565b600060208201905062001082600083018462000f09565b92915050565b60006020820190508181036000830152620010a4818462000f1a565b905092915050565b60006020820190508181036000830152620010c78162000f5b565b9050919050565b60006020820190508181036000830152620010e98162000f82565b9050919050565b600060208201905062001107600083018462000fa9565b92915050565b600081519050919050565b600082825260208201905092915050565b600062001136826200115d565b9050919050565b60008115159050919050565b6000620011568262001129565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600062001194826200119b565b9050919050565b6000620011a8826200115d565b9050919050565b6000620011bc82620011c3565b9050919050565b6000620011d0826200115d565b9050919050565b6000620011e482620011eb565b9050919050565b6000620011f8826200115d565b9050919050565b60005b838110156200121f57808201518184015260208101905062001202565b838111156200122f576000848401525b50505050565b600060028204905060018216806200124e57607f821691505b602082108114156200126557620012646200126b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f742061207375627369646961727920616464726573730000000000000000600082015250565b7f57686974656c697374206e6f742063726561746564206279206b6e6f776e207060008201527f6172747900000000000000000000000000000000000000000000000000000000602082015250565b620013628162001129565b81146200136e57600080fd5b50565b6200137c8162001149565b81146200138857600080fd5b50565b62001396816200117d565b8114620013a257600080fd5b5056fe608060405234801561001057600080fd5b5060405161079238038061079283398181016040528101906100329190610095565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060018190555050610122565b60008151905061008f8161010b565b92915050565b6000602082840312156100ab576100aa610106565b5b60006100b984828501610080565b91505092915050565b60006100cd826100e6565b9050919050565b60006100df826100c2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610114816100d4565b811461011f57600080fd5b50565b610661806101316000396000f3fe6080604052600436106100385760003560e01c80638b7342331461007d578063b119a9d61461009b578063ef5ea07c146100c657610078565b36610078577f7e71433ddf847725166244795048ecf3e3f9f35628254ecbf736056664233493333460405161006e929190610487565b60405180910390a1005b600080fd5b610085610103565b60405161009291906104b0565b60405180910390f35b3480156100a757600080fd5b506100b06101c8565b6040516100bd91906104cb565b60405180910390f35b3480156100d257600080fd5b506100ed60048036038101906100e891906103d5565b6101ec565b6040516100fa91906104b0565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461015e57600080fd5b60006001549050600060018190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505091505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610299575060011515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b6102a257600080fd5b6001548373ffffffffffffffffffffffffffffffffffffffff163110156102fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f5906104e6565b60405180910390fd5b60405180606001604052808581526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815250600360008681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155905050600190509392505050565b6000813590506103ba816105fd565b92915050565b6000813590506103cf81610614565b92915050565b6000806000606084860312156103ee576103ed610583565b5b60006103fc868287016103c0565b935050602061040d868287016103ab565b925050604061041e868287016103c0565b9150509250925092565b61043181610517565b82525050565b61044081610529565b82525050565b61044f8161055f565b82525050565b6000610462604b83610506565b915061046d82610588565b606082019050919050565b61048181610555565b82525050565b600060408201905061049c6000830185610428565b6104a96020830184610478565b9392505050565b60006020820190506104c56000830184610437565b92915050565b60006020820190506104e06000830184610446565b92915050565b600060208201905081810360008301526104ff81610455565b9050919050565b600082825260208201905092915050565b600061052282610535565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061056a82610571565b9050919050565b600061057c82610535565b9050919050565b600080fd5b7f54686520526563656976657220636f6e747261637420646f6573206e6f74206860008201527f6176652073756666696369656e742062616c616e636520666f7220746869732060208201527f7472616e73616374696f6e000000000000000000000000000000000000000000604082015250565b61060681610517565b811461061157600080fd5b50565b61061d81610555565b811461062857600080fd5b5056fea26469706673582212203f2b42576879cdd5557f3dc83a92f0f8b03abc3b0f67e774f308b0a94f7dc22864736f6c63430008060033a264697066735822122064431c5cc66068f043b0084d02dd15e681c554a643b8b861f26955cc491f21c264736f6c63430008060033",
>>>>>>> main
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
<<<<<<< HEAD
        "src": "0:4431:7",
=======
        "src": "0:5057:6",
>>>>>>> main
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "102:326:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "112:75:7",
=======
              "src": "102:326:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "112:75:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "179:6:7"
=======
                            "src": "179:6:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "137:41:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "137:49:7"
=======
                          "src": "137:41:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "137:49:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "121:15:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "121:66:7"
=======
                      "src": "121:15:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "121:66:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "112:5:7"
=======
                      "src": "112:5:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "203:5:7"
=======
                        "src": "203:5:6"
>>>>>>> main
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "210:6:7"
=======
                        "src": "210:6:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "196:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "196:21:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "196:21:7"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "226:27:7",
=======
                      "src": "196:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "196:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "196:21:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "226:27:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "241:5:7"
=======
                        "src": "241:5:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "248:4:7",
=======
                        "src": "248:4:6",
>>>>>>> main
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "237:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "237:16:7"
=======
                      "src": "237:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "237:16:6"
>>>>>>> main
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
<<<<<<< HEAD
                      "src": "230:3:7",
=======
                      "src": "230:3:6",
>>>>>>> main
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "291:83:7",
=======
                    "src": "291:83:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "293:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "293:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "293:79:7"
=======
                            "src": "293:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "293:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "293:79:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "272:3:7"
=======
                            "src": "272:3:6"
>>>>>>> main
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "277:6:7"
=======
                            "src": "277:6:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "268:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "268:16:7"
=======
                          "src": "268:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "268:16:6"
>>>>>>> main
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "286:3:7"
=======
                        "src": "286:3:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "265:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "265:25:7"
                  },
                  "nodeType": "YulIf",
                  "src": "262:2:7"
=======
                      "src": "265:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "265:25:6"
                  },
                  "nodeType": "YulIf",
                  "src": "262:2:6"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "405:3:7"
=======
                        "src": "405:3:6"
>>>>>>> main
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "410:3:7"
=======
                        "src": "410:3:6"
>>>>>>> main
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "415:6:7"
=======
                        "src": "415:6:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "383:21:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "383:39:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "383:39:7"
=======
                      "src": "383:21:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "383:39:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "383:39:6"
>>>>>>> main
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "75:3:7",
=======
                "src": "75:3:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "80:6:7",
=======
                "src": "80:6:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "88:3:7",
=======
                "src": "88:3:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "96:5:7",
                "type": ""
              }
            ],
            "src": "7:421:7"
=======
                "src": "96:5:6",
                "type": ""
              }
            ],
            "src": "7:421:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "497:80:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "507:22:7",
=======
              "src": "497:80:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "507:22:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "522:6:7"
=======
                        "src": "522:6:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "516:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "516:13:7"
=======
                      "src": "516:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "516:13:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "507:5:7"
=======
                      "src": "507:5:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "565:5:7"
=======
                        "src": "565:5:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "538:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "538:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "538:33:7"
=======
                      "src": "538:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "538:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "538:33:6"
>>>>>>> main
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "475:6:7",
=======
                "src": "475:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "483:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "491:5:6",
                "type": ""
              }
            ],
            "src": "434:143:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "659:93:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "669:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "684:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "678:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "678:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "669:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "740:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_Admin_$134",
                      "nodeType": "YulIdentifier",
                      "src": "700:39:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "700:46:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "700:46:6"
                }
              ]
            },
            "name": "abi_decode_t_contract$_Admin_$134_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "637:6:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "483:3:7",
=======
                "src": "645:3:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "491:5:7",
                "type": ""
              }
            ],
            "src": "434:143:7"
=======
                "src": "653:5:6",
                "type": ""
              }
            ],
            "src": "583:169:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "670:282:7",
=======
              "src": "845:282:6",
>>>>>>> main
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "719:83:7",
=======
                    "src": "894:83:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "721:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "721:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "721:79:7"
=======
                            "src": "896:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "896:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "896:79:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "698:6:7"
=======
                                "src": "873:6:6"
>>>>>>> main
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
<<<<<<< HEAD
                                "src": "706:4:7",
=======
                                "src": "881:4:6",
>>>>>>> main
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
                              "src": "694:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "694:17:7"
=======
                              "src": "869:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "869:17:6"
>>>>>>> main
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "713:3:7"
=======
                            "src": "888:3:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "690:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "690:27:7"
=======
                          "src": "865:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "865:27:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "683:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "683:35:7"
                  },
                  "nodeType": "YulIf",
                  "src": "680:2:7"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "811:27:7",
=======
                      "src": "858:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "858:35:6"
                  },
                  "nodeType": "YulIf",
                  "src": "855:2:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "986:27:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "831:6:7"
=======
                        "src": "1006:6:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "825:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "825:13:7"
=======
                      "src": "1000:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1000:13:6"
>>>>>>> main
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
<<<<<<< HEAD
                      "src": "815:6:7",
=======
                      "src": "990:6:6",
>>>>>>> main
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
                  "src": "847:99:7",
=======
                  "src": "1022:99:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "919:6:7"
=======
                            "src": "1094:6:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "927:4:7",
=======
                            "src": "1102:4:6",
>>>>>>> main
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "915:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "915:17:7"
=======
                          "src": "1090:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1090:17:6"
>>>>>>> main
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "934:6:7"
=======
                        "src": "1109:6:6"
>>>>>>> main
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "942:3:7"
=======
                        "src": "1117:3:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "856:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "856:90:7"
=======
                      "src": "1031:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1031:90:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "847:5:7"
=======
                      "src": "1022:5:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "648:6:7",
=======
                "src": "823:6:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "656:3:7",
=======
                "src": "831:3:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "664:5:7",
                "type": ""
              }
            ],
            "src": "597:355:7"
=======
                "src": "839:5:6",
                "type": ""
              }
            ],
            "src": "772:355:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "1062:576:7",
=======
              "src": "1267:728:6",
>>>>>>> main
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "1108:83:7",
=======
                    "src": "1313:83:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1110:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1110:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1110:79:7"
=======
                            "src": "1315:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1315:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1315:79:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1083:7:7"
=======
                            "src": "1288:7:6"
>>>>>>> main
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1092:9:7"
=======
                            "src": "1297:9:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1079:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1079:23:7"
=======
                          "src": "1284:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1284:23:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "1104:2:7",
                        "type": "",
                        "value": "64"
=======
                        "src": "1309:2:6",
                        "type": "",
                        "value": "96"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "1075:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1075:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1072:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1201:128:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1216:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1230:1:7",
=======
                      "src": "1280:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1280:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1277:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1406:128:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1421:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1435:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
<<<<<<< HEAD
                          "src": "1220:6:7",
=======
                          "src": "1425:6:6",
>>>>>>> main
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
<<<<<<< HEAD
                      "src": "1245:74:7",
=======
                      "src": "1450:74:6",
>>>>>>> main
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "1291:9:7"
=======
                                "src": "1496:9:6"
>>>>>>> main
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "1302:6:7"
=======
                                "src": "1507:6:6"
>>>>>>> main
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
                              "src": "1287:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1287:22:7"
=======
                              "src": "1492:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1492:22:6"
>>>>>>> main
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1311:7:7"
=======
                            "src": "1516:7:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1255:31:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1255:64:7"
=======
                          "src": "1460:31:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1460:64:6"
>>>>>>> main
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1245:6:7"
=======
                          "src": "1450:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1544:142:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1559:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1573:2:6",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1563:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1589:87:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1648:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1659:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1644:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1644:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1668:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Admin_$134_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1599:44:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1599:77:6"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1589:6:6"
>>>>>>> main
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
<<<<<<< HEAD
                  "src": "1339:292:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1354:39:7",
=======
                  "src": "1696:292:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1711:39:6",
>>>>>>> main
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "1378:9:7"
=======
                                "src": "1735:9:6"
>>>>>>> main
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
<<<<<<< HEAD
                                "src": "1389:2:7",
                                "type": "",
                                "value": "32"
=======
                                "src": "1746:2:6",
                                "type": "",
                                "value": "64"
>>>>>>> main
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
                              "src": "1374:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1374:18:7"
=======
                              "src": "1731:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1731:18:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1368:5:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1368:25:7"
=======
                          "src": "1725:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1725:25:6"
>>>>>>> main
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
<<<<<<< HEAD
                          "src": "1358:6:7",
=======
                          "src": "1715:6:6",
>>>>>>> main
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
<<<<<<< HEAD
                        "src": "1440:83:7",
=======
                        "src": "1797:83:6",
>>>>>>> main
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "1442:77:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1442:79:7"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1442:79:7"
=======
                                "src": "1799:77:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1799:79:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1799:79:6"
>>>>>>> main
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1412:6:7"
=======
                            "src": "1769:6:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "1420:18:7",
=======
                            "src": "1777:18:6",
>>>>>>> main
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1409:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1409:30:7"
                      },
                      "nodeType": "YulIf",
                      "src": "1406:2:7"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1537:84:7",
=======
                          "src": "1766:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1766:30:6"
                      },
                      "nodeType": "YulIf",
                      "src": "1763:2:6"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1894:84:6",
>>>>>>> main
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "1593:9:7"
=======
                                "src": "1950:9:6"
>>>>>>> main
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "1604:6:7"
=======
                                "src": "1961:6:6"
>>>>>>> main
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
                              "src": "1589:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1589:22:7"
=======
                              "src": "1946:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1946:22:6"
>>>>>>> main
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1613:7:7"
=======
                            "src": "1970:7:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1547:41:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1547:74:7"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1537:6:7"
=======
                          "src": "1904:41:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1904:74:6"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1894:6:6"
>>>>>>> main
                        }
                      ]
                    }
                  ]
                }
              ]
            },
<<<<<<< HEAD
            "name": "abi_decode_tuple_t_addresst_string_memory_ptr_fromMemory",
=======
            "name": "abi_decode_tuple_t_addresst_contract$_Admin_$134t_string_memory_ptr_fromMemory",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1024:9:7",
=======
                "src": "1221:9:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1035:7:7",
=======
                "src": "1232:7:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1047:6:7",
=======
                "src": "1244:6:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1055:6:7",
                "type": ""
              }
            ],
            "src": "958:680:7"
=======
                "src": "1252:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1260:6:6",
                "type": ""
              }
            ],
            "src": "1133:862:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "1685:88:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1695:30:7",
=======
              "src": "2042:88:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2052:30:6",
>>>>>>> main
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "1705:18:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1705:20:7"
=======
                      "src": "2062:18:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2062:20:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "1695:6:7"
=======
                      "src": "2052:6:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "1754:6:7"
=======
                        "src": "2111:6:6"
>>>>>>> main
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "1762:4:7"
=======
                        "src": "2119:4:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "1734:19:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1734:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1734:33:7"
=======
                      "src": "2091:19:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2091:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2091:33:6"
>>>>>>> main
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1669:4:7",
=======
                "src": "2026:4:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1678:6:7",
                "type": ""
              }
            ],
            "src": "1644:129:7"
=======
                "src": "2035:6:6",
                "type": ""
              }
            ],
            "src": "2001:129:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "1819:35:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1829:19:7",
=======
              "src": "2176:35:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2186:19:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "1845:2:7",
=======
                        "src": "2202:2:6",
>>>>>>> main
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "1839:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1839:9:7"
=======
                      "src": "2196:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2196:9:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "1829:6:7"
=======
                      "src": "2186:6:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1812:6:7",
                "type": ""
              }
            ],
            "src": "1779:75:7"
=======
                "src": "2169:6:6",
                "type": ""
              }
            ],
            "src": "2136:75:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "1927:241:7",
=======
              "src": "2284:241:6",
>>>>>>> main
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "2032:22:7",
=======
                    "src": "2389:22:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "2034:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2034:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2034:18:7"
=======
                            "src": "2391:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2391:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2391:18:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2004:6:7"
=======
                        "src": "2361:6:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "2012:18:7",
=======
                        "src": "2369:18:6",
>>>>>>> main
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2001:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2001:30:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1998:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2064:37:7",
=======
                      "src": "2358:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2358:30:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2355:2:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2421:37:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2094:6:7"
=======
                        "src": "2451:6:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "round_up_to_mul_of_32",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2072:21:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2072:29:7"
=======
                      "src": "2429:21:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2429:29:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2064:4:7"
=======
                      "src": "2421:4:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
                  "src": "2138:23:7",
=======
                  "src": "2495:23:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2150:4:7"
=======
                        "src": "2507:4:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "2156:4:7",
=======
                        "src": "2513:4:6",
>>>>>>> main
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2146:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2146:15:7"
=======
                      "src": "2503:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2503:15:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2138:4:7"
=======
                      "src": "2495:4:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1911:6:7",
=======
                "src": "2268:6:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1922:4:7",
                "type": ""
              }
            ],
            "src": "1860:308:7"
=======
                "src": "2279:4:6",
                "type": ""
              }
            ],
            "src": "2217:308:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "2219:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2229:35:7",
=======
              "src": "2576:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2586:35:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2258:5:7"
=======
                        "src": "2615:5:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2240:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2240:24:7"
=======
                      "src": "2597:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2597:24:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2229:7:7"
=======
                      "src": "2586:7:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2201:5:7",
=======
                "src": "2558:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2568:7:6",
                "type": ""
              }
            ],
            "src": "2531:96:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2691:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2701:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2730:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2712:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2712:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2701:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_Admin_$134",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2673:5:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2211:7:7",
                "type": ""
              }
            ],
            "src": "2174:96:7"
=======
                "src": "2683:7:6",
                "type": ""
              }
            ],
            "src": "2633:109:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "2321:81:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2331:65:7",
=======
              "src": "2793:81:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2803:65:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2346:5:7"
=======
                        "src": "2818:5:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "2353:42:7",
=======
                        "src": "2825:42:6",
>>>>>>> main
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2342:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2342:54:7"
=======
                      "src": "2814:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2814:54:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2331:7:7"
=======
                      "src": "2803:7:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2303:5:7",
=======
                "src": "2775:5:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2313:7:7",
                "type": ""
              }
            ],
            "src": "2276:126:7"
=======
                "src": "2785:7:6",
                "type": ""
              }
            ],
            "src": "2748:126:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "2457:258:7",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2467:10:7",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2476:1:7",
=======
              "src": "2929:258:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2939:10:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2948:1:6",
>>>>>>> main
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
<<<<<<< HEAD
                      "src": "2471:1:7",
=======
                      "src": "2943:1:6",
>>>>>>> main
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "2536:63:7",
=======
                    "src": "3008:63:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                  "src": "2561:3:7"
=======
                                  "src": "3033:3:6"
>>>>>>> main
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                  "src": "2566:1:7"
=======
                                  "src": "3038:1:6"
>>>>>>> main
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "2557:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2557:11:7"
=======
                                "src": "3029:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3029:11:6"
>>>>>>> main
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                      "src": "2580:3:7"
=======
                                      "src": "3052:3:6"
>>>>>>> main
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                      "src": "2585:1:7"
=======
                                      "src": "3057:1:6"
>>>>>>> main
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                    "src": "2576:3:7"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2576:11:7"
=======
                                    "src": "3048:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3048:11:6"
>>>>>>> main
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "2570:5:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2570:18:7"
=======
                                "src": "3042:5:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3042:18:6"
>>>>>>> main
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "2550:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2550:39:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2550:39:7"
=======
                            "src": "3022:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3022:39:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3022:39:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2497:1:7"
=======
                        "src": "2969:1:6"
>>>>>>> main
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2500:6:7"
=======
                        "src": "2972:6:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2494:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2494:13:7"
=======
                      "src": "2966:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2966:13:6"
>>>>>>> main
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "2508:19:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2510:15:7",
=======
                    "src": "2980:19:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2982:15:6",
>>>>>>> main
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
                              "src": "2519:1:7"
=======
                              "src": "2991:1:6"
>>>>>>> main
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
                              "src": "2522:2:7",
=======
                              "src": "2994:2:6",
>>>>>>> main
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "2515:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2515:10:7"
=======
                            "src": "2987:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2987:10:6"
>>>>>>> main
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "2510:1:7"
=======
                            "src": "2982:1:6"
>>>>>>> main
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "2490:3:7",
                    "statements": []
                  },
                  "src": "2486:113:7"
=======
                    "src": "2962:3:6",
                    "statements": []
                  },
                  "src": "2958:113:6"
>>>>>>> main
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "2633:76:7",
=======
                    "src": "3105:76:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                  "src": "2683:3:7"
=======
                                  "src": "3155:3:6"
>>>>>>> main
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                  "src": "2688:6:7"
=======
                                  "src": "3160:6:6"
>>>>>>> main
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "2679:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2679:16:7"
=======
                                "src": "3151:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3151:16:6"
>>>>>>> main
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
                              "src": "2697:1:7",
=======
                              "src": "3169:1:6",
>>>>>>> main
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "2672:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2672:27:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2672:27:7"
=======
                            "src": "3144:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3144:27:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3144:27:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2614:1:7"
=======
                        "src": "3086:1:6"
>>>>>>> main
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2617:6:7"
=======
                        "src": "3089:6:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2611:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2611:13:7"
                  },
                  "nodeType": "YulIf",
                  "src": "2608:2:7"
=======
                      "src": "3083:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3083:13:6"
                  },
                  "nodeType": "YulIf",
                  "src": "3080:2:6"
>>>>>>> main
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2439:3:7",
=======
                "src": "2911:3:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2444:3:7",
=======
                "src": "2916:3:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2449:6:7",
                "type": ""
              }
            ],
            "src": "2408:307:7"
=======
                "src": "2921:6:6",
                "type": ""
              }
            ],
            "src": "2880:307:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "2772:269:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2782:22:7",
=======
              "src": "3244:269:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3254:22:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2796:4:7"
=======
                        "src": "3268:4:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "2802:1:7",
=======
                        "src": "3274:1:6",
>>>>>>> main
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2792:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2792:12:7"
=======
                      "src": "3264:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3264:12:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2782:6:7"
=======
                      "src": "3254:6:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
<<<<<<< HEAD
                  "src": "2813:38:7",
=======
                  "src": "3285:38:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2843:4:7"
=======
                        "src": "3315:4:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "2849:1:7",
=======
                        "src": "3321:1:6",
>>>>>>> main
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2839:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2839:12:7"
=======
                      "src": "3311:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3311:12:6"
>>>>>>> main
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
<<<<<<< HEAD
                      "src": "2817:18:7",
=======
                      "src": "3289:18:6",
>>>>>>> main
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "2890:51:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2904:27:7",
=======
                    "src": "3362:51:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3376:27:6",
>>>>>>> main
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
                              "src": "2918:6:7"
=======
                              "src": "3390:6:6"
>>>>>>> main
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
                              "src": "2926:4:7",
=======
                              "src": "3398:4:6",
>>>>>>> main
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "2914:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2914:17:7"
=======
                            "src": "3386:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3386:17:6"
>>>>>>> main
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "2904:6:7"
=======
                            "src": "3376:6:6"
>>>>>>> main
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2870:18:7"
=======
                        "src": "3342:18:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2863:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2863:26:7"
                  },
                  "nodeType": "YulIf",
                  "src": "2860:2:7"
=======
                      "src": "3335:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3335:26:6"
                  },
                  "nodeType": "YulIf",
                  "src": "3332:2:6"
>>>>>>> main
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "2993:42:7",
=======
                    "src": "3465:42:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "3007:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3007:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3007:18:7"
=======
                            "src": "3479:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3479:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3479:18:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2957:18:7"
=======
                        "src": "3429:18:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "2980:6:7"
=======
                            "src": "3452:6:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "2988:2:7",
=======
                            "src": "3460:2:6",
>>>>>>> main
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "2977:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2977:14:7"
=======
                          "src": "3449:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3449:14:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2954:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2954:38:7"
                  },
                  "nodeType": "YulIf",
                  "src": "2951:2:7"
=======
                      "src": "3426:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3426:38:6"
                  },
                  "nodeType": "YulIf",
                  "src": "3423:2:6"
>>>>>>> main
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2756:4:7",
=======
                "src": "3228:4:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2765:6:7",
                "type": ""
              }
            ],
            "src": "2721:320:7"
=======
                "src": "3237:6:6",
                "type": ""
              }
            ],
            "src": "3193:320:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "3090:238:7",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3100:58:7",
=======
              "src": "3562:238:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3572:58:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3122:6:7"
=======
                        "src": "3594:6:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "3152:4:7"
=======
                            "src": "3624:4:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "3130:21:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3130:27:7"
=======
                          "src": "3602:21:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3602:27:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3118:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3118:40:7"
=======
                      "src": "3590:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3590:40:6"
>>>>>>> main
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
<<<<<<< HEAD
                      "src": "3104:10:7",
=======
                      "src": "3576:10:6",
>>>>>>> main
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "3269:22:7",
=======
                    "src": "3741:22:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "3271:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3271:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3271:18:7"
=======
                            "src": "3743:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3743:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3743:18:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "3212:10:7"
=======
                            "src": "3684:10:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "3224:18:7",
=======
                            "src": "3696:18:6",
>>>>>>> main
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "3209:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3209:34:7"
=======
                          "src": "3681:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3681:34:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "3248:10:7"
=======
                            "src": "3720:10:6"
>>>>>>> main
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "3260:6:7"
=======
                            "src": "3732:6:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "3245:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3245:22:7"
=======
                          "src": "3717:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3717:22:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3206:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3206:62:7"
                  },
                  "nodeType": "YulIf",
                  "src": "3203:2:7"
=======
                      "src": "3678:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3678:62:6"
                  },
                  "nodeType": "YulIf",
                  "src": "3675:2:6"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "3307:2:7",
=======
                        "src": "3779:2:6",
>>>>>>> main
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3311:10:7"
=======
                        "src": "3783:10:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3300:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3300:22:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3300:22:7"
=======
                      "src": "3772:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3772:22:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3772:22:6"
>>>>>>> main
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3076:6:7",
=======
                "src": "3548:6:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3084:4:7",
                "type": ""
              }
            ],
            "src": "3047:281:7"
=======
                "src": "3556:4:6",
                "type": ""
              }
            ],
            "src": "3519:281:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "3362:152:7",
=======
              "src": "3834:152:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "3379:1:7",
=======
                        "src": "3851:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "3382:77:7",
=======
                        "src": "3854:77:6",
>>>>>>> main
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3372:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3372:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3372:88:7"
=======
                      "src": "3844:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3844:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3844:88:6"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "3476:1:7",
=======
                        "src": "3948:1:6",
>>>>>>> main
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "3479:4:7",
=======
                        "src": "3951:4:6",
>>>>>>> main
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3469:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3469:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3469:15:7"
=======
                      "src": "3941:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3941:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3941:15:6"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "3500:1:7",
=======
                        "src": "3972:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "3503:4:7",
=======
                        "src": "3975:4:6",
>>>>>>> main
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3493:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3493:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3493:15:7"
=======
                      "src": "3965:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3965:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3965:15:6"
>>>>>>> main
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
<<<<<<< HEAD
            "src": "3334:180:7"
=======
            "src": "3806:180:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "3548:152:7",
=======
              "src": "4020:152:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "3565:1:7",
=======
                        "src": "4037:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "3568:77:7",
=======
                        "src": "4040:77:6",
>>>>>>> main
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3558:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3558:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3558:88:7"
=======
                      "src": "4030:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4030:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4030:88:6"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "3662:1:7",
=======
                        "src": "4134:1:6",
>>>>>>> main
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "3665:4:7",
=======
                        "src": "4137:4:6",
>>>>>>> main
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3655:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3655:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3655:15:7"
=======
                      "src": "4127:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4127:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4127:15:6"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "3686:1:7",
=======
                        "src": "4158:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "3689:4:7",
=======
                        "src": "4161:4:6",
>>>>>>> main
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3679:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3679:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3679:15:7"
=======
                      "src": "4151:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4151:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4151:15:6"
>>>>>>> main
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
<<<<<<< HEAD
            "src": "3520:180:7"
=======
            "src": "3992:180:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "3795:28:7",
=======
              "src": "4267:28:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "3812:1:7",
=======
                        "src": "4284:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "3815:1:7",
=======
                        "src": "4287:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3805:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3805:12:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3805:12:7"
=======
                      "src": "4277:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4277:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4277:12:6"
>>>>>>> main
                }
              ]
            },
            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
            "nodeType": "YulFunctionDefinition",
<<<<<<< HEAD
            "src": "3706:117:7"
=======
            "src": "4178:117:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "3918:28:7",
=======
              "src": "4390:28:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "3935:1:7",
=======
                        "src": "4407:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "3938:1:7",
=======
                        "src": "4410:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3928:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3928:12:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3928:12:7"
=======
                      "src": "4400:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4400:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4400:12:6"
>>>>>>> main
                }
              ]
            },
            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
            "nodeType": "YulFunctionDefinition",
<<<<<<< HEAD
            "src": "3829:117:7"
=======
            "src": "4301:117:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "4041:28:7",
=======
              "src": "4513:28:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "4058:1:7",
=======
                        "src": "4530:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "4061:1:7",
=======
                        "src": "4533:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4051:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4051:12:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4051:12:7"
=======
                      "src": "4523:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4523:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4523:12:6"
>>>>>>> main
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
<<<<<<< HEAD
            "src": "3952:117:7"
=======
            "src": "4424:117:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "4164:28:7",
=======
              "src": "4636:28:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "4181:1:7",
=======
                        "src": "4653:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "4184:1:7",
=======
                        "src": "4656:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4174:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4174:12:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4174:12:7"
=======
                      "src": "4646:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4646:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4646:12:6"
>>>>>>> main
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
<<<<<<< HEAD
            "src": "4075:117:7"
=======
            "src": "4547:117:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "4246:54:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4256:38:7",
=======
              "src": "4718:54:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4728:38:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "4274:5:7"
=======
                            "src": "4746:5:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "4281:2:7",
=======
                            "src": "4753:2:6",
>>>>>>> main
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "4270:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4270:14:7"
=======
                          "src": "4742:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4742:14:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "4290:2:7",
=======
                            "src": "4762:2:6",
>>>>>>> main
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "4286:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4286:7:7"
=======
                          "src": "4758:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4758:7:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4266:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4266:28:7"
=======
                      "src": "4738:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4738:28:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4256:6:7"
=======
                      "src": "4728:6:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4229:5:7",
=======
                "src": "4701:5:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4239:6:7",
                "type": ""
              }
            ],
            "src": "4198:102:7"
=======
                "src": "4711:6:6",
                "type": ""
              }
            ],
            "src": "4670:102:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "4349:79:7",
=======
              "src": "4821:79:6",
>>>>>>> main
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "4406:16:7",
=======
                    "src": "4878:16:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
                              "src": "4415:1:7",
=======
                              "src": "4887:1:6",
>>>>>>> main
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
                              "src": "4418:1:7",
=======
                              "src": "4890:1:6",
>>>>>>> main
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "4408:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4408:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4408:12:7"
=======
                            "src": "4880:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4880:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4880:12:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "4372:5:7"
=======
                            "src": "4844:5:6"
>>>>>>> main
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "4397:5:7"
=======
                                "src": "4869:5:6"
>>>>>>> main
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
                              "src": "4379:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4379:24:7"
=======
                              "src": "4851:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4851:24:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "4369:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4369:35:7"
=======
                          "src": "4841:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4841:35:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4362:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4362:43:7"
                  },
                  "nodeType": "YulIf",
                  "src": "4359:2:7"
=======
                      "src": "4834:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4834:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "4831:2:6"
>>>>>>> main
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4342:5:7",
                "type": ""
              }
            ],
            "src": "4306:122:7"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:9606:7",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:7"
                      }
=======
                "src": "4814:5:6",
                "type": ""
              }
            ],
            "src": "4778:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4962:92:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5032:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5041:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5044:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5034:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5034:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5034:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4985:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5023:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_Admin_$134",
                              "nodeType": "YulIdentifier",
                              "src": "4992:30:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4992:37:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4982:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4982:48:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4975:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4975:56:6"
                  },
                  "nodeType": "YulIf",
                  "src": "4972:2:6"
                }
              ]
            },
            "name": "validator_revert_t_contract$_Admin_$134",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4955:5:6",
                "type": ""
              }
            ],
            "src": "4906:148:6"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_contract$_Admin_$134_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_Admin_$134(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_contract$_Admin_$134t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_Admin_$134_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_Admin_$134(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_Admin_$134(value) {\n        if iszero(eq(value, cleanup_t_contract$_Admin_$134(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:11048:6",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:6"
                      }
>>>>>>> main
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "107:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:7"
=======
                      "src": "107:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:6"
>>>>>>> main
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "37:6:7",
=======
                "src": "37:6:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "45:3:7",
=======
                "src": "45:3:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "53:5:7",
                "type": ""
              }
            ],
            "src": "7:139:7"
=======
                "src": "53:5:6",
                "type": ""
              }
            ],
            "src": "7:139:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "215:80:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "225:22:7",
=======
              "src": "215:80:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "225:22:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "240:6:7"
=======
                        "src": "240:6:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "234:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "234:13:7"
=======
                      "src": "234:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "234:13:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "225:5:7"
=======
                      "src": "225:5:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "283:5:7"
=======
                        "src": "283:5:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "256:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "256:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "256:33:7"
=======
                      "src": "256:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "256:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "256:33:6"
>>>>>>> main
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "193:6:7",
=======
                "src": "193:6:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "201:3:7",
=======
                "src": "201:3:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "209:5:7",
                "type": ""
              }
            ],
            "src": "152:143:7"
=======
                "src": "209:5:6",
                "type": ""
              }
            ],
            "src": "152:143:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "371:105:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "381:29:7",
=======
              "src": "371:105:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "381:29:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "403:6:7"
=======
                        "src": "403:6:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "390:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "390:20:7"
=======
                      "src": "390:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "390:20:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "381:5:7"
=======
                      "src": "381:5:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "464:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_Whitelist_$1298",
                      "nodeType": "YulIdentifier",
                      "src": "419:44:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "419:51:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "419:51:7"
                }
              ]
            },
            "name": "abi_decode_t_contract$_Whitelist_$1298",
=======
                        "src": "464:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_Whitelist_$1425",
                      "nodeType": "YulIdentifier",
                      "src": "419:44:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "419:51:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "419:51:6"
                }
              ]
            },
            "name": "abi_decode_t_contract$_Whitelist_$1425",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "349:6:7",
=======
                "src": "349:6:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "357:3:7",
=======
                "src": "357:3:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "365:5:7",
                "type": ""
              }
            ],
            "src": "301:175:7"
=======
                "src": "365:5:6",
                "type": ""
              }
            ],
            "src": "301:175:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "534:87:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "544:29:7",
=======
              "src": "534:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "544:29:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "566:6:7"
=======
                        "src": "566:6:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "553:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "553:20:7"
=======
                      "src": "553:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "553:20:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "544:5:7"
=======
                      "src": "544:5:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "609:5:7"
=======
                        "src": "609:5:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "582:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "582:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "582:33:7"
=======
                      "src": "582:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "582:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "582:33:6"
>>>>>>> main
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "512:6:7",
=======
                "src": "512:6:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "520:3:7",
=======
                "src": "520:3:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "528:5:7",
                "type": ""
              }
            ],
            "src": "482:139:7"
=======
                "src": "528:5:6",
                "type": ""
              }
            ],
            "src": "482:139:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "693:263:7",
=======
              "src": "693:263:6",
>>>>>>> main
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "739:83:7",
=======
                    "src": "739:83:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "741:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "741:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "741:79:7"
=======
                            "src": "741:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "741:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "741:79:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "714:7:7"
=======
                            "src": "714:7:6"
>>>>>>> main
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "723:9:7"
=======
                            "src": "723:9:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "710:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "710:23:7"
=======
                          "src": "710:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "710:23:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "735:2:7",
=======
                        "src": "735:2:6",
>>>>>>> main
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "706:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "706:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "703:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "832:117:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "847:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "861:1:7",
=======
                      "src": "706:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "706:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "703:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "832:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "847:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "861:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
<<<<<<< HEAD
                          "src": "851:6:7",
=======
                          "src": "851:6:6",
>>>>>>> main
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
<<<<<<< HEAD
                      "src": "876:63:7",
=======
                      "src": "876:63:6",
>>>>>>> main
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "911:9:7"
=======
                                "src": "911:9:6"
>>>>>>> main
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "922:6:7"
=======
                                "src": "922:6:6"
>>>>>>> main
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
                              "src": "907:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "907:22:7"
=======
                              "src": "907:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "907:22:6"
>>>>>>> main
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "931:7:7"
=======
                            "src": "931:7:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "886:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "886:53:7"
=======
                          "src": "886:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "886:53:6"
>>>>>>> main
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "876:6:7"
=======
                          "src": "876:6:6"
>>>>>>> main
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "663:9:7",
=======
                "src": "663:9:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "674:7:7",
=======
                "src": "674:7:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "686:6:7",
                "type": ""
              }
            ],
            "src": "627:329:7"
=======
                "src": "686:6:6",
                "type": ""
              }
            ],
            "src": "627:329:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "1039:274:7",
=======
              "src": "1039:274:6",
>>>>>>> main
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "1085:83:7",
=======
                    "src": "1085:83:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1087:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1087:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1087:79:7"
=======
                            "src": "1087:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1087:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1087:79:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1060:7:7"
=======
                            "src": "1060:7:6"
>>>>>>> main
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1069:9:7"
=======
                            "src": "1069:9:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1056:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1056:23:7"
=======
                          "src": "1056:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1056:23:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "1081:2:7",
=======
                        "src": "1081:2:6",
>>>>>>> main
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "1052:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1052:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1049:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1178:128:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1193:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1207:1:7",
=======
                      "src": "1052:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1052:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1049:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1178:128:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1193:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1207:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
<<<<<<< HEAD
                          "src": "1197:6:7",
=======
                          "src": "1197:6:6",
>>>>>>> main
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
<<<<<<< HEAD
                      "src": "1222:74:7",
=======
                      "src": "1222:74:6",
>>>>>>> main
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "1268:9:7"
=======
                                "src": "1268:9:6"
>>>>>>> main
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "1279:6:7"
=======
                                "src": "1279:6:6"
>>>>>>> main
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
                              "src": "1264:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1264:22:7"
=======
                              "src": "1264:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1264:22:6"
>>>>>>> main
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1288:7:7"
=======
                            "src": "1288:7:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1232:31:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1232:64:7"
=======
                          "src": "1232:31:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1232:64:6"
>>>>>>> main
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1222:6:7"
=======
                          "src": "1222:6:6"
>>>>>>> main
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1009:9:7",
=======
                "src": "1009:9:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1020:7:7",
=======
                "src": "1020:7:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1032:6:7",
                "type": ""
              }
            ],
            "src": "962:351:7"
=======
                "src": "1032:6:6",
                "type": ""
              }
            ],
            "src": "962:351:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "1403:281:7",
=======
              "src": "1403:281:6",
>>>>>>> main
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "1449:83:7",
=======
                    "src": "1449:83:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1451:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1451:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1451:79:7"
=======
                            "src": "1451:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1451:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1451:79:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1424:7:7"
=======
                            "src": "1424:7:6"
>>>>>>> main
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1433:9:7"
=======
                            "src": "1433:9:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1420:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1420:23:7"
=======
                          "src": "1420:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1420:23:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "1445:2:7",
=======
                        "src": "1445:2:6",
>>>>>>> main
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "1416:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1416:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1413:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1542:135:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1557:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1571:1:7",
=======
                      "src": "1416:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1416:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1413:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1542:135:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1557:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1571:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
<<<<<<< HEAD
                          "src": "1561:6:7",
=======
                          "src": "1561:6:6",
>>>>>>> main
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
<<<<<<< HEAD
                      "src": "1586:81:7",
=======
                      "src": "1586:81:6",
>>>>>>> main
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "1639:9:7"
=======
                                "src": "1639:9:6"
>>>>>>> main
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "1650:6:7"
=======
                                "src": "1650:6:6"
>>>>>>> main
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
                              "src": "1635:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1635:22:7"
=======
                              "src": "1635:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1635:22:6"
>>>>>>> main
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1659:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Whitelist_$1298",
                          "nodeType": "YulIdentifier",
                          "src": "1596:38:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1596:71:7"
=======
                            "src": "1659:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Whitelist_$1425",
                          "nodeType": "YulIdentifier",
                          "src": "1596:38:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1596:71:6"
>>>>>>> main
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1586:6:7"
=======
                          "src": "1586:6:6"
>>>>>>> main
                        }
                      ]
                    }
                  ]
                }
              ]
            },
<<<<<<< HEAD
            "name": "abi_decode_tuple_t_contract$_Whitelist_$1298",
=======
            "name": "abi_decode_tuple_t_contract$_Whitelist_$1425",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1373:9:7",
=======
                "src": "1373:9:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1384:7:7",
=======
                "src": "1384:7:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1396:6:7",
                "type": ""
              }
            ],
            "src": "1319:365:7"
=======
                "src": "1396:6:6",
                "type": ""
              }
            ],
            "src": "1319:365:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "1756:263:7",
=======
              "src": "1756:263:6",
>>>>>>> main
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "1802:83:7",
=======
                    "src": "1802:83:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1804:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1804:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1804:79:7"
=======
                            "src": "1804:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1804:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1804:79:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1777:7:7"
=======
                            "src": "1777:7:6"
>>>>>>> main
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1786:9:7"
=======
                            "src": "1786:9:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1773:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1773:23:7"
=======
                          "src": "1773:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1773:23:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "1798:2:7",
=======
                        "src": "1798:2:6",
>>>>>>> main
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "1769:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1769:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1766:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1895:117:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1910:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1924:1:7",
=======
                      "src": "1769:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1769:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1766:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1895:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1910:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1924:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
<<<<<<< HEAD
                          "src": "1914:6:7",
=======
                          "src": "1914:6:6",
>>>>>>> main
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
<<<<<<< HEAD
                      "src": "1939:63:7",
=======
                      "src": "1939:63:6",
>>>>>>> main
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "1974:9:7"
=======
                                "src": "1974:9:6"
>>>>>>> main
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "1985:6:7"
=======
                                "src": "1985:6:6"
>>>>>>> main
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
                              "src": "1970:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1970:22:7"
=======
                              "src": "1970:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1970:22:6"
>>>>>>> main
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1994:7:7"
=======
                            "src": "1994:7:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1949:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1949:53:7"
=======
                          "src": "1949:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1949:53:6"
>>>>>>> main
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1939:6:7"
=======
                          "src": "1939:6:6"
>>>>>>> main
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1726:9:7",
=======
                "src": "1726:9:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1737:7:7",
=======
                "src": "1737:7:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1749:6:7",
                "type": ""
              }
            ],
            "src": "1690:329:7"
=======
                "src": "1749:6:6",
                "type": ""
              }
            ],
            "src": "1690:329:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "2090:53:7",
=======
              "src": "2090:53:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2107:3:7"
=======
                        "src": "2107:3:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "2130:5:7"
=======
                            "src": "2130:5:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "2112:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2112:24:7"
=======
                          "src": "2112:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2112:24:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2100:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2100:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2100:37:7"
=======
                      "src": "2100:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2100:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2100:37:6"
>>>>>>> main
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2078:5:7",
=======
                "src": "2078:5:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2085:3:7",
                "type": ""
              }
            ],
            "src": "2025:118:7"
=======
                "src": "2085:3:6",
                "type": ""
              }
            ],
            "src": "2025:118:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "2208:50:7",
=======
              "src": "2208:50:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2225:3:7"
=======
                        "src": "2225:3:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "2245:5:7"
=======
                            "src": "2245:5:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "2230:14:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2230:21:7"
=======
                          "src": "2230:14:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2230:21:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2218:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2218:34:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2218:34:7"
=======
                      "src": "2218:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2218:34:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2218:34:6"
>>>>>>> main
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2196:5:7",
=======
                "src": "2196:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2203:3:6",
                "type": ""
              }
            ],
            "src": "2149:109:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2342:79:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2359:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2408:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_Admin_$134_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2364:43:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2364:50:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2352:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2352:63:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2352:63:6"
                }
              ]
            },
            "name": "abi_encode_t_contract$_Admin_$134_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2330:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2337:3:6",
                "type": ""
              }
            ],
            "src": "2264:157:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2509:83:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2526:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2579:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_Corporate_$573_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2531:47:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2531:54:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2519:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2519:67:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2519:67:6"
                }
              ]
            },
            "name": "abi_encode_t_contract$_Corporate_$573_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2497:5:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2203:3:7",
                "type": ""
              }
            ],
            "src": "2149:109:7"
=======
                "src": "2504:3:6",
                "type": ""
              }
            ],
            "src": "2427:165:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "2347:84:7",
=======
              "src": "2681:84:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2364:3:7"
=======
                        "src": "2698:3:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "2418:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_Whitelist_$1298_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2369:48:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2369:55:7"
=======
                            "src": "2752:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_Whitelist_$1425_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2703:48:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2703:55:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2357:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2357:68:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2357:68:7"
                }
              ]
            },
            "name": "abi_encode_t_contract$_Whitelist_$1298_to_t_address_fromStack",
=======
                      "src": "2691:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2691:68:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2691:68:6"
                }
              ]
            },
            "name": "abi_encode_t_contract$_Whitelist_$1425_to_t_address_fromStack",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2335:5:7",
=======
                "src": "2669:5:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2342:3:7",
                "type": ""
              }
            ],
            "src": "2264:167:7"
=======
                "src": "2676:3:6",
                "type": ""
              }
            ],
            "src": "2598:167:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "2529:272:7",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2539:53:7",
=======
              "src": "2863:272:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2873:53:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2586:5:7"
=======
                        "src": "2920:5:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2553:32:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2553:39:7"
=======
                      "src": "2887:32:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2887:39:6"
>>>>>>> main
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
<<<<<<< HEAD
                      "src": "2543:6:7",
=======
                      "src": "2877:6:6",
>>>>>>> main
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
                  "src": "2601:78:7",
=======
                  "src": "2935:78:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2667:3:7"
=======
                        "src": "3001:3:6"
>>>>>>> main
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2672:6:7"
=======
                        "src": "3006:6:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2608:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2608:71:7"
=======
                      "src": "2942:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2942:71:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2601:3:7"
=======
                      "src": "2935:3:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "2714:5:7"
=======
                            "src": "3048:5:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "2721:4:7",
=======
                            "src": "3055:4:6",
>>>>>>> main
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "2710:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2710:16:7"
=======
                          "src": "3044:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3044:16:6"
>>>>>>> main
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2728:3:7"
=======
                        "src": "3062:3:6"
>>>>>>> main
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2733:6:7"
=======
                        "src": "3067:6:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2688:21:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2688:52:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2688:52:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2749:46:7",
=======
                      "src": "3022:21:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3022:52:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3022:52:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3083:46:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2760:3:7"
=======
                        "src": "3094:3:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "2787:6:7"
=======
                            "src": "3121:6:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "2765:21:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2765:29:7"
=======
                          "src": "3099:21:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3099:29:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2756:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2756:39:7"
=======
                      "src": "3090:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3090:39:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2749:3:7"
=======
                      "src": "3083:3:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2510:5:7",
=======
                "src": "2844:5:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2517:3:7",
=======
                "src": "2851:3:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2525:3:7",
                "type": ""
              }
            ],
            "src": "2437:364:7"
=======
                "src": "2859:3:6",
                "type": ""
              }
            ],
            "src": "2771:364:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "2953:220:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2963:74:7",
=======
              "src": "3287:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3297:74:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3029:3:7"
=======
                        "src": "3363:3:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "3034:2:7",
=======
                        "src": "3368:2:6",
>>>>>>> main
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2970:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2970:67:7"
=======
                      "src": "3304:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3304:67:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2963:3:7"
=======
                      "src": "3297:3:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3135:3:7"
=======
                        "src": "3469:3:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_00e7c86a76d6b37cd7c008118063d660e33a645a376ceac3e4508a2776cb0688",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3046:88:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3046:93:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3046:93:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3148:19:7",
=======
                      "src": "3380:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3380:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3380:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3482:19:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3159:3:7"
=======
                        "src": "3493:3:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "3164:2:7",
=======
                        "src": "3498:2:6",
>>>>>>> main
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3155:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3155:12:7"
=======
                      "src": "3489:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3489:12:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3148:3:7"
=======
                      "src": "3482:3:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_00e7c86a76d6b37cd7c008118063d660e33a645a376ceac3e4508a2776cb0688_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2941:3:7",
=======
                "src": "3275:3:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2949:3:7",
                "type": ""
              }
            ],
            "src": "2807:366:7"
=======
                "src": "3283:3:6",
                "type": ""
              }
            ],
            "src": "3141:366:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "3325:220:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3335:74:7",
=======
              "src": "3659:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3669:74:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3401:3:7"
=======
                        "src": "3735:3:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "3406:2:7",
=======
                        "src": "3740:2:6",
>>>>>>> main
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3342:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3342:67:7"
=======
                      "src": "3676:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3676:67:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3335:3:7"
=======
                      "src": "3669:3:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3507:3:7"
=======
                        "src": "3841:3:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_cf9dd211e1ca90d9268a7ae8097b7e406e991130fcf3aad7805d3e2292c4115c",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3418:88:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3418:93:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3418:93:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3520:19:7",
=======
                      "src": "3752:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3752:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3752:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3854:19:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3531:3:7"
=======
                        "src": "3865:3:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "3536:2:7",
=======
                        "src": "3870:2:6",
>>>>>>> main
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3527:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3527:12:7"
=======
                      "src": "3861:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3861:12:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3520:3:7"
=======
                      "src": "3854:3:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_cf9dd211e1ca90d9268a7ae8097b7e406e991130fcf3aad7805d3e2292c4115c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3313:3:7",
=======
                "src": "3647:3:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3321:3:7",
                "type": ""
              }
            ],
            "src": "3179:366:7"
=======
                "src": "3655:3:6",
                "type": ""
              }
            ],
            "src": "3513:366:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "3616:53:7",
=======
              "src": "3950:53:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3633:3:7"
=======
                        "src": "3967:3:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "3656:5:7"
=======
                            "src": "3990:5:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "3638:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3638:24:7"
=======
                          "src": "3972:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3972:24:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3626:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3626:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3626:37:7"
=======
                      "src": "3960:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3960:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3960:37:6"
>>>>>>> main
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3604:5:7",
=======
                "src": "3938:5:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3611:3:7",
                "type": ""
              }
            ],
            "src": "3551:118:7"
=======
                "src": "3945:3:6",
                "type": ""
              }
            ],
            "src": "3885:118:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "3773:124:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3783:26:7",
=======
              "src": "4107:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4117:26:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3795:9:7"
=======
                        "src": "4129:9:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "3806:2:7",
=======
                        "src": "4140:2:6",
>>>>>>> main
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3791:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3791:18:7"
=======
                      "src": "4125:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4125:18:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3783:4:7"
=======
                      "src": "4117:4:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3863:6:7"
=======
                        "src": "4197:6:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "3876:9:7"
=======
                            "src": "4210:9:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "3887:1:7",
=======
                            "src": "4221:1:6",
>>>>>>> main
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "3872:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3872:17:7"
=======
                          "src": "4206:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4206:17:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3819:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3819:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3819:71:7"
=======
                      "src": "4153:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4153:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4153:71:6"
>>>>>>> main
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3745:9:7",
=======
                "src": "4079:9:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3757:6:7",
=======
                "src": "4091:6:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3768:4:7",
                "type": ""
              }
            ],
            "src": "3675:222:7"
=======
                "src": "4102:4:6",
                "type": ""
              }
            ],
            "src": "4009:222:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "4051:282:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4061:26:7",
=======
              "src": "4385:282:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4395:26:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "4073:9:7"
=======
                        "src": "4407:9:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "4084:2:7",
=======
                        "src": "4418:2:6",
>>>>>>> main
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4069:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4069:18:7"
=======
                      "src": "4403:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4403:18:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4061:4:7"
=======
                      "src": "4395:4:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "4141:6:7"
=======
                        "src": "4475:6:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "4154:9:7"
=======
                            "src": "4488:9:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "4165:1:7",
=======
                            "src": "4499:1:6",
>>>>>>> main
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "4150:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4150:17:7"
=======
                          "src": "4484:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4484:17:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4097:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4097:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4097:71:7"
=======
                      "src": "4431:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4431:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4431:71:6"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "4222:6:7"
=======
                        "src": "4556:6:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "4235:9:7"
=======
                            "src": "4569:9:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "4246:2:7",
=======
                            "src": "4580:2:6",
>>>>>>> main
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "4231:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4231:18:7"
=======
                          "src": "4565:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4565:18:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4178:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4178:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4178:72:7"
=======
                      "src": "4512:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4512:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4512:72:6"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "4298:6:7"
=======
                        "src": "4632:6:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "4311:9:7"
=======
                            "src": "4645:9:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "4322:2:7",
=======
                            "src": "4656:2:6",
>>>>>>> main
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "4307:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4307:18:7"
=======
                          "src": "4641:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4641:18:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4260:37:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4260:66:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4260:66:7"
=======
                      "src": "4594:37:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4594:66:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4594:66:6"
>>>>>>> main
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4007:9:7",
=======
                "src": "4341:9:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4019:6:7",
=======
                "src": "4353:6:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4027:6:7",
=======
                "src": "4361:6:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4035:6:7",
=======
                "src": "4369:6:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4046:4:7",
                "type": ""
              }
            ],
            "src": "3903:430:7"
=======
                "src": "4380:4:6",
                "type": ""
              }
            ],
            "src": "4237:430:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "4431:118:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4441:26:7",
=======
              "src": "4765:118:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4775:26:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "4453:9:7"
=======
                        "src": "4787:9:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "4464:2:7",
=======
                        "src": "4798:2:6",
>>>>>>> main
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4449:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4449:18:7"
=======
                      "src": "4783:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4783:18:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4441:4:7"
=======
                      "src": "4775:4:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "4515:6:7"
=======
                        "src": "4849:6:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "4528:9:7"
=======
                            "src": "4862:9:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "4539:1:7",
=======
                            "src": "4873:1:6",
>>>>>>> main
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "4524:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4524:17:7"
=======
                          "src": "4858:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4858:17:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4477:37:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4477:65:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4477:65:7"
=======
                      "src": "4811:37:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4811:65:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4811:65:6"
>>>>>>> main
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4403:9:7",
=======
                "src": "4737:9:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4415:6:7",
=======
                "src": "4749:6:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4426:4:7",
                "type": ""
              }
            ],
            "src": "4339:210:7"
=======
                "src": "4760:4:6",
                "type": ""
              }
            ],
            "src": "4673:210:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "4671:142:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4681:26:7",
=======
              "src": "5000:137:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5010:26:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "4693:9:7"
=======
                        "src": "5022:9:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "4704:2:7",
=======
                        "src": "5033:2:6",
>>>>>>> main
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4689:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4689:18:7"
=======
                      "src": "5018:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5018:18:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4681:4:7"
=======
                      "src": "5010:4:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "4779:6:7"
=======
                        "src": "5103:6:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "4792:9:7"
=======
                            "src": "5116:9:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "4803:1:7",
=======
                            "src": "5127:1:6",
>>>>>>> main
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "4788:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4788:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Whitelist_$1298_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4717:61:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4717:89:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4717:89:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Whitelist_$1298__to_t_address__fromStack_reversed",
=======
                          "src": "5112:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5112:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Admin_$134_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5046:56:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5046:84:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5046:84:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Admin_$134__to_t_address__fromStack_reversed",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4643:9:7",
=======
                "src": "4972:9:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4655:6:7",
=======
                "src": "4984:6:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4666:4:7",
                "type": ""
              }
            ],
            "src": "4555:258:7"
=======
                "src": "4995:4:6",
                "type": ""
              }
            ],
            "src": "4889:248:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "4937:195:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4947:26:7",
=======
              "src": "5258:141:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5268:26:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "4959:9:7"
=======
                        "src": "5280:9:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "4970:2:7",
=======
                        "src": "5291:2:6",
>>>>>>> main
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4955:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4955:18:7"
=======
                      "src": "5276:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5276:18:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4947:4:7"
=======
                      "src": "5268:4:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
=======
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5365:6:6"
                      },
                      {
>>>>>>> main
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "4994:9:7"
=======
                            "src": "5378:9:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "5005:1:7",
=======
                            "src": "5389:1:6",
>>>>>>> main
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "4990:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4990:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5013:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5019:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5009:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5009:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4983:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4983:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4983:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5039:86:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5111:6:7"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5120:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5047:63:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5047:78:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5039:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
=======
                          "src": "5374:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5374:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Corporate_$573_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5304:60:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5304:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5304:88:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Corporate_$573__to_t_address__fromStack_reversed",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4909:9:7",
=======
                "src": "5230:9:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4921:6:7",
=======
                "src": "5242:6:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4932:4:7",
                "type": ""
              }
            ],
            "src": "4819:313:7"
=======
                "src": "5253:4:6",
                "type": ""
              }
            ],
            "src": "5143:256:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "5309:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5319:26:7",
=======
              "src": "5521:142:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5531:26:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "5331:9:7"
=======
                        "src": "5543:9:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "5342:2:7",
=======
                        "src": "5554:2:6",
>>>>>>> main
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5327:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5327:18:7"
=======
                      "src": "5539:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5539:18:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5319:4:7"
=======
                      "src": "5531:4:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
=======
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5629:6:6"
                      },
                      {
>>>>>>> main
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "5366:9:7"
=======
                            "src": "5642:9:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "5377:1:7",
=======
                            "src": "5653:1:6",
>>>>>>> main
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "5362:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5362:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5385:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5391:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5381:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5381:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5355:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5355:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5355:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5411:139:7",
=======
                          "src": "5638:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5638:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Whitelist_$1425_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5567:61:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5567:89:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5567:89:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Whitelist_$1425__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5493:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5505:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5516:4:6",
                "type": ""
              }
            ],
            "src": "5405:258:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5787:195:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5797:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5809:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5820:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5805:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5805:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5797:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5844:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5855:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5840:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5840:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5863:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5869:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5859:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5859:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5833:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5833:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5833:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5889:86:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5961:6:6"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5970:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5897:63:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5897:78:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5889:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5759:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5771:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5782:4:6",
                "type": ""
              }
            ],
            "src": "5669:313:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6159:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6169:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6181:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6192:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6177:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6177:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6169:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6216:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6227:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6212:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6212:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6235:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6241:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6231:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6231:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6205:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6205:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6205:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6261:139:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "5545:4:7"
=======
                        "src": "6395:4:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_00e7c86a76d6b37cd7c008118063d660e33a645a376ceac3e4508a2776cb0688_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5419:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5419:131:7"
=======
                      "src": "6269:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6269:131:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5411:4:7"
=======
                      "src": "6261:4:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_00e7c86a76d6b37cd7c008118063d660e33a645a376ceac3e4508a2776cb0688__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "5289:9:7",
=======
                "src": "6139:9:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "5304:4:7",
                "type": ""
              }
            ],
            "src": "5138:419:7"
=======
                "src": "6154:4:6",
                "type": ""
              }
            ],
            "src": "5988:419:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "5734:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5744:26:7",
=======
              "src": "6584:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6594:26:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "5756:9:7"
=======
                        "src": "6606:9:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "5767:2:7",
=======
                        "src": "6617:2:6",
>>>>>>> main
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5752:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5752:18:7"
=======
                      "src": "6602:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6602:18:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5744:4:7"
=======
                      "src": "6594:4:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "5791:9:7"
=======
                            "src": "6641:9:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "5802:1:7",
=======
                            "src": "6652:1:6",
>>>>>>> main
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "5787:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5787:17:7"
=======
                          "src": "6637:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6637:17:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "5810:4:7"
=======
                            "src": "6660:4:6"
>>>>>>> main
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "5816:9:7"
=======
                            "src": "6666:9:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "5806:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5806:20:7"
=======
                          "src": "6656:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6656:20:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5780:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5780:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5780:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5836:139:7",
=======
                      "src": "6630:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6630:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6630:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6686:139:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "5970:4:7"
=======
                        "src": "6820:4:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_cf9dd211e1ca90d9268a7ae8097b7e406e991130fcf3aad7805d3e2292c4115c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5844:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5844:131:7"
=======
                      "src": "6694:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6694:131:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5836:4:7"
=======
                      "src": "6686:4:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cf9dd211e1ca90d9268a7ae8097b7e406e991130fcf3aad7805d3e2292c4115c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "5714:9:7",
=======
                "src": "6564:9:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "5729:4:7",
                "type": ""
              }
            ],
            "src": "5563:419:7"
=======
                "src": "6579:4:6",
                "type": ""
              }
            ],
            "src": "6413:419:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "6086:124:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6096:26:7",
=======
              "src": "6936:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6946:26:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "6108:9:7"
=======
                        "src": "6958:9:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "6119:2:7",
=======
                        "src": "6969:2:6",
>>>>>>> main
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6104:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6104:18:7"
=======
                      "src": "6954:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6954:18:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6096:4:7"
=======
                      "src": "6946:4:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "6176:6:7"
=======
                        "src": "7026:6:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "6189:9:7"
=======
                            "src": "7039:9:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "6200:1:7",
=======
                            "src": "7050:1:6",
>>>>>>> main
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "6185:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6185:17:7"
=======
                          "src": "7035:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7035:17:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6132:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6132:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6132:71:7"
=======
                      "src": "6982:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6982:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6982:71:6"
>>>>>>> main
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6058:9:7",
=======
                "src": "6908:9:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6070:6:7",
=======
                "src": "6920:6:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6081:4:7",
                "type": ""
              }
            ],
            "src": "5988:222:7"
=======
                "src": "6931:4:6",
                "type": ""
              }
            ],
            "src": "6838:222:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "6256:35:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6266:19:7",
=======
              "src": "7106:35:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7116:19:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "6282:2:7",
=======
                        "src": "7132:2:6",
>>>>>>> main
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6276:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6276:9:7"
=======
                      "src": "7126:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7126:9:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6266:6:7"
=======
                      "src": "7116:6:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
<<<<<<< HEAD
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6249:6:7",
                "type": ""
              }
            ],
            "src": "6216:75:7"
=======
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7099:6:6",
                "type": ""
              }
            ],
            "src": "7066:75:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7206:40:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7217:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7233:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7227:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7227:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7217:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7189:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7199:6:6",
                "type": ""
              }
            ],
            "src": "7147:99:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7348:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7365:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7370:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7358:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7358:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7358:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7386:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7405:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7410:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7401:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7401:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "7386:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7320:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7325:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "7336:11:6",
                "type": ""
              }
            ],
            "src": "7252:169:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7472:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7482:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7511:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7493:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7493:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7482:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7454:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7464:7:6",
                "type": ""
              }
            ],
            "src": "7427:96:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7571:48:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7581:32:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7606:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7599:6:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7599:13:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7592:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7592:21:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7581:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7553:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7563:7:6",
                "type": ""
              }
            ],
            "src": "7529:90:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "6356:40:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6367:22:7",
=======
              "src": "7688:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7698:35:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "6383:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6377:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6377:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "6367:6:7"
=======
                        "src": "7727:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "7709:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7709:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7698:7:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
<<<<<<< HEAD
            "name": "array_length_t_string_memory_ptr",
=======
            "name": "cleanup_t_contract$_Whitelist_$1425",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6339:5:7",
=======
                "src": "7670:5:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
<<<<<<< HEAD
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6349:6:7",
                "type": ""
              }
            ],
            "src": "6297:99:7"
=======
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7680:7:6",
                "type": ""
              }
            ],
            "src": "7625:114:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "6498:73:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6515:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6520:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6508:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6508:19:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6508:19:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6536:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6555:3:7"
=======
              "src": "7790:81:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7800:65:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7815:5:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "6560:4:7",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6551:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6551:14:7"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "6536:11:7"
=======
                        "src": "7822:42:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7811:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7811:54:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7800:7:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
<<<<<<< HEAD
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6470:3:7",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6475:6:7",
=======
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7772:5:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
<<<<<<< HEAD
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "6486:11:7",
                "type": ""
              }
            ],
            "src": "6402:169:7"
=======
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7782:7:6",
                "type": ""
              }
            ],
            "src": "7745:126:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "6622:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6632:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6661:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6643:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6643:24:7"
=======
              "src": "7922:32:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7932:16:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7943:5:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6632:7:7"
=======
                      "src": "7932:7:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
<<<<<<< HEAD
            "name": "cleanup_t_address",
=======
            "name": "cleanup_t_uint256",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6604:5:7",
=======
                "src": "7904:5:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6614:7:7",
                "type": ""
              }
            ],
            "src": "6577:96:7"
=======
                "src": "7914:7:6",
                "type": ""
              }
            ],
            "src": "7877:77:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "6721:48:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6731:32:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6756:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6749:6:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6749:13:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6742:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6742:21:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6731:7:7"
=======
              "src": "8033:79:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8043:63:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8100:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_Admin_$134_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8056:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8056:50:6"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "8043:9:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
<<<<<<< HEAD
            "name": "cleanup_t_bool",
=======
            "name": "convert_t_contract$_Admin_$134_to_t_address",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6703:5:7",
=======
                "src": "8013:5:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
<<<<<<< HEAD
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6713:7:7",
                "type": ""
              }
            ],
            "src": "6679:90:7"
=======
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "8023:9:6",
                "type": ""
              }
            ],
            "src": "7960:152:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "6838:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6848:35:7",
=======
              "src": "8191:53:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8201:37:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "6877:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "6859:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6859:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6848:7:7"
=======
                        "src": "8232:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8214:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8214:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "8201:9:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
<<<<<<< HEAD
            "name": "cleanup_t_contract$_Whitelist_$1298",
=======
            "name": "convert_t_contract$_Admin_$134_to_t_uint160",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6820:5:7",
=======
                "src": "8171:5:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
<<<<<<< HEAD
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6830:7:7",
                "type": ""
              }
            ],
            "src": "6775:114:7"
=======
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "8181:9:6",
                "type": ""
              }
            ],
            "src": "8118:126:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "6940:81:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6950:65:7",
=======
              "src": "8327:83:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8337:67:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "6965:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6972:42:7",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6961:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6961:54:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6950:7:7"
=======
                        "src": "8398:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_Corporate_$573_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8350:47:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8350:54:6"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "8337:9:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
<<<<<<< HEAD
            "name": "cleanup_t_uint160",
=======
            "name": "convert_t_contract$_Corporate_$573_to_t_address",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6922:5:7",
=======
                "src": "8307:5:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
<<<<<<< HEAD
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6932:7:7",
                "type": ""
              }
            ],
            "src": "6895:126:7"
=======
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "8317:9:6",
                "type": ""
              }
            ],
            "src": "8250:160:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "7072:32:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7082:16:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7093:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7082:7:7"
=======
              "src": "8493:53:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8503:37:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8534:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8516:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8516:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "8503:9:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
<<<<<<< HEAD
            "name": "cleanup_t_uint256",
=======
            "name": "convert_t_contract$_Corporate_$573_to_t_uint160",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7054:5:7",
=======
                "src": "8473:5:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
<<<<<<< HEAD
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7064:7:7",
                "type": ""
              }
            ],
            "src": "7027:77:7"
=======
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "8483:9:6",
                "type": ""
              }
            ],
            "src": "8416:130:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "7188:84:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7198:68:7",
=======
              "src": "8630:84:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8640:68:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7260:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_Whitelist_$1298_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7211:48:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7211:55:7"
=======
                        "src": "8702:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_Whitelist_$1425_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8653:48:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8653:55:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7198:9:7"
=======
                      "src": "8640:9:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
<<<<<<< HEAD
            "name": "convert_t_contract$_Whitelist_$1298_to_t_address",
=======
            "name": "convert_t_contract$_Whitelist_$1425_to_t_address",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7168:5:7",
=======
                "src": "8610:5:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7178:9:7",
                "type": ""
              }
            ],
            "src": "7110:162:7"
=======
                "src": "8620:9:6",
                "type": ""
              }
            ],
            "src": "8552:162:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "7356:53:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7366:37:7",
=======
              "src": "8798:53:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8808:37:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7397:5:7"
=======
                        "src": "8839:5:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7379:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7379:24:7"
=======
                      "src": "8821:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8821:24:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7366:9:7"
=======
                      "src": "8808:9:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
<<<<<<< HEAD
            "name": "convert_t_contract$_Whitelist_$1298_to_t_uint160",
=======
            "name": "convert_t_contract$_Whitelist_$1425_to_t_uint160",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7336:5:7",
=======
                "src": "8778:5:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7346:9:7",
                "type": ""
              }
            ],
            "src": "7278:131:7"
=======
                "src": "8788:9:6",
                "type": ""
              }
            ],
            "src": "8720:131:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "7464:258:7",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7474:10:7",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7483:1:7",
=======
              "src": "8906:258:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8916:10:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8925:1:6",
>>>>>>> main
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
<<<<<<< HEAD
                      "src": "7478:1:7",
=======
                      "src": "8920:1:6",
>>>>>>> main
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "7543:63:7",
=======
                    "src": "8985:63:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                  "src": "7568:3:7"
=======
                                  "src": "9010:3:6"
>>>>>>> main
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                  "src": "7573:1:7"
=======
                                  "src": "9015:1:6"
>>>>>>> main
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "7564:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7564:11:7"
=======
                                "src": "9006:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9006:11:6"
>>>>>>> main
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                      "src": "7587:3:7"
=======
                                      "src": "9029:3:6"
>>>>>>> main
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                      "src": "7592:1:7"
=======
                                      "src": "9034:1:6"
>>>>>>> main
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                    "src": "7583:3:7"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7583:11:7"
=======
                                    "src": "9025:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9025:11:6"
>>>>>>> main
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "7577:5:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7577:18:7"
=======
                                "src": "9019:5:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9019:18:6"
>>>>>>> main
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "7557:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7557:39:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7557:39:7"
=======
                            "src": "8999:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8999:39:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8999:39:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7504:1:7"
=======
                        "src": "8946:1:6"
>>>>>>> main
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7507:6:7"
=======
                        "src": "8949:6:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7501:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7501:13:7"
=======
                      "src": "8943:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8943:13:6"
>>>>>>> main
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "7515:19:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7517:15:7",
=======
                    "src": "8957:19:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8959:15:6",
>>>>>>> main
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
                              "src": "7526:1:7"
=======
                              "src": "8968:1:6"
>>>>>>> main
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
                              "src": "7529:2:7",
=======
                              "src": "8971:2:6",
>>>>>>> main
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "7522:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7522:10:7"
=======
                            "src": "8964:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8964:10:6"
>>>>>>> main
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "7517:1:7"
=======
                            "src": "8959:1:6"
>>>>>>> main
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "7497:3:7",
                    "statements": []
                  },
                  "src": "7493:113:7"
=======
                    "src": "8939:3:6",
                    "statements": []
                  },
                  "src": "8935:113:6"
>>>>>>> main
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "7640:76:7",
=======
                    "src": "9082:76:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                  "src": "7690:3:7"
=======
                                  "src": "9132:3:6"
>>>>>>> main
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                  "src": "7695:6:7"
=======
                                  "src": "9137:6:6"
>>>>>>> main
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "7686:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7686:16:7"
=======
                                "src": "9128:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9128:16:6"
>>>>>>> main
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
                              "src": "7704:1:7",
=======
                              "src": "9146:1:6",
>>>>>>> main
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "7679:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7679:27:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7679:27:7"
=======
                            "src": "9121:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9121:27:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9121:27:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7621:1:7"
=======
                        "src": "9063:1:6"
>>>>>>> main
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7624:6:7"
=======
                        "src": "9066:6:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7618:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7618:13:7"
                  },
                  "nodeType": "YulIf",
                  "src": "7615:2:7"
=======
                      "src": "9060:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9060:13:6"
                  },
                  "nodeType": "YulIf",
                  "src": "9057:2:6"
>>>>>>> main
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7446:3:7",
=======
                "src": "8888:3:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7451:3:7",
=======
                "src": "8893:3:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7456:6:7",
                "type": ""
              }
            ],
            "src": "7415:307:7"
=======
                "src": "8898:6:6",
                "type": ""
              }
            ],
            "src": "8857:307:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "7779:269:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7789:22:7",
=======
              "src": "9221:269:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9231:22:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7803:4:7"
=======
                        "src": "9245:4:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "7809:1:7",
=======
                        "src": "9251:1:6",
>>>>>>> main
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7799:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7799:12:7"
=======
                      "src": "9241:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9241:12:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7789:6:7"
=======
                      "src": "9231:6:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
<<<<<<< HEAD
                  "src": "7820:38:7",
=======
                  "src": "9262:38:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7850:4:7"
=======
                        "src": "9292:4:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "7856:1:7",
=======
                        "src": "9298:1:6",
>>>>>>> main
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7846:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7846:12:7"
=======
                      "src": "9288:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9288:12:6"
>>>>>>> main
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
<<<<<<< HEAD
                      "src": "7824:18:7",
=======
                      "src": "9266:18:6",
>>>>>>> main
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "7897:51:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7911:27:7",
=======
                    "src": "9339:51:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9353:27:6",
>>>>>>> main
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
                              "src": "7925:6:7"
=======
                              "src": "9367:6:6"
>>>>>>> main
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
                              "src": "7933:4:7",
=======
                              "src": "9375:4:6",
>>>>>>> main
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "7921:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7921:17:7"
=======
                            "src": "9363:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9363:17:6"
>>>>>>> main
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "7911:6:7"
=======
                            "src": "9353:6:6"
>>>>>>> main
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7877:18:7"
=======
                        "src": "9319:18:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7870:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7870:26:7"
                  },
                  "nodeType": "YulIf",
                  "src": "7867:2:7"
=======
                      "src": "9312:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9312:26:6"
                  },
                  "nodeType": "YulIf",
                  "src": "9309:2:6"
>>>>>>> main
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "8000:42:7",
=======
                    "src": "9442:42:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "8014:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8014:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8014:18:7"
=======
                            "src": "9456:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9456:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9456:18:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7964:18:7"
=======
                        "src": "9406:18:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "7987:6:7"
=======
                            "src": "9429:6:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "7995:2:7",
=======
                            "src": "9437:2:6",
>>>>>>> main
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "7984:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7984:14:7"
=======
                          "src": "9426:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9426:14:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7961:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7961:38:7"
                  },
                  "nodeType": "YulIf",
                  "src": "7958:2:7"
=======
                      "src": "9403:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9403:38:6"
                  },
                  "nodeType": "YulIf",
                  "src": "9400:2:6"
>>>>>>> main
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7763:4:7",
=======
                "src": "9205:4:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7772:6:7",
                "type": ""
              }
            ],
            "src": "7728:320:7"
=======
                "src": "9214:6:6",
                "type": ""
              }
            ],
            "src": "9170:320:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "8082:152:7",
=======
              "src": "9524:152:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8099:1:7",
=======
                        "src": "9541:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8102:77:7",
=======
                        "src": "9544:77:6",
>>>>>>> main
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8092:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8092:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8092:88:7"
=======
                      "src": "9534:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9534:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9534:88:6"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8196:1:7",
=======
                        "src": "9638:1:6",
>>>>>>> main
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8199:4:7",
=======
                        "src": "9641:4:6",
>>>>>>> main
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8189:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8189:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8189:15:7"
=======
                      "src": "9631:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9631:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9631:15:6"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8220:1:7",
=======
                        "src": "9662:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8223:4:7",
=======
                        "src": "9665:4:6",
>>>>>>> main
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8213:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8213:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8213:15:7"
=======
                      "src": "9655:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9655:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9655:15:6"
>>>>>>> main
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
<<<<<<< HEAD
            "src": "8054:180:7"
=======
            "src": "9496:180:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "8268:152:7",
=======
              "src": "9710:152:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8285:1:7",
=======
                        "src": "9727:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8288:77:7",
=======
                        "src": "9730:77:6",
>>>>>>> main
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8278:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8278:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8278:88:7"
=======
                      "src": "9720:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9720:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9720:88:6"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8382:1:7",
=======
                        "src": "9824:1:6",
>>>>>>> main
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8385:4:7",
=======
                        "src": "9827:4:6",
>>>>>>> main
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8375:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8375:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8375:15:7"
=======
                      "src": "9817:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9817:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9817:15:6"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8406:1:7",
=======
                        "src": "9848:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8409:4:7",
=======
                        "src": "9851:4:6",
>>>>>>> main
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8399:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8399:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8399:15:7"
=======
                      "src": "9841:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9841:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9841:15:6"
>>>>>>> main
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
<<<<<<< HEAD
            "src": "8240:180:7"
=======
            "src": "9682:180:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "8515:28:7",
=======
              "src": "9957:28:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8532:1:7",
=======
                        "src": "9974:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8535:1:7",
=======
                        "src": "9977:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8525:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8525:12:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8525:12:7"
=======
                      "src": "9967:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9967:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9967:12:6"
>>>>>>> main
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
<<<<<<< HEAD
            "src": "8426:117:7"
=======
            "src": "9868:117:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "8638:28:7",
=======
              "src": "10080:28:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8655:1:7",
=======
                        "src": "10097:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8658:1:7",
=======
                        "src": "10100:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8648:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8648:12:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8648:12:7"
=======
                      "src": "10090:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10090:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10090:12:6"
>>>>>>> main
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
<<<<<<< HEAD
            "src": "8549:117:7"
=======
            "src": "9991:117:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "8720:54:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8730:38:7",
=======
              "src": "10162:54:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10172:38:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "8748:5:7"
=======
                            "src": "10190:5:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "8755:2:7",
=======
                            "src": "10197:2:6",
>>>>>>> main
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "8744:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8744:14:7"
=======
                          "src": "10186:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10186:14:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "8764:2:7",
=======
                            "src": "10206:2:6",
>>>>>>> main
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "8760:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8760:7:7"
=======
                          "src": "10202:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10202:7:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8740:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8740:28:7"
=======
                      "src": "10182:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10182:28:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8730:6:7"
=======
                      "src": "10172:6:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "8703:5:7",
=======
                "src": "10145:5:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "8713:6:7",
                "type": ""
              }
            ],
            "src": "8672:102:7"
=======
                "src": "10155:6:6",
                "type": ""
              }
            ],
            "src": "10114:102:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "8886:68:7",
=======
              "src": "10328:68:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "8908:6:7"
=======
                            "src": "10350:6:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "8916:1:7",
=======
                            "src": "10358:1:6",
>>>>>>> main
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "8904:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8904:14:7"
=======
                          "src": "10346:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10346:14:6"
>>>>>>> main
                      },
                      {
                        "hexValue": "4e6f74206120737562736964696172792061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8920:26:7",
=======
                        "src": "10362:26:6",
>>>>>>> main
                        "type": "",
                        "value": "Not a subsidiary address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8897:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8897:50:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8897:50:7"
=======
                      "src": "10339:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10339:50:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10339:50:6"
>>>>>>> main
                }
              ]
            },
            "name": "store_literal_in_memory_00e7c86a76d6b37cd7c008118063d660e33a645a376ceac3e4508a2776cb0688",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "8878:6:7",
                "type": ""
              }
            ],
            "src": "8780:174:7"
=======
                "src": "10320:6:6",
                "type": ""
              }
            ],
            "src": "10222:174:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "9066:117:7",
=======
              "src": "10508:117:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "9088:6:7"
=======
                            "src": "10530:6:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "9096:1:7",
=======
                            "src": "10538:1:6",
>>>>>>> main
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "9084:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9084:14:7"
=======
                          "src": "10526:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10526:14:6"
>>>>>>> main
                      },
                      {
                        "hexValue": "57686974656c697374206e6f742063726561746564206279206b6e6f776e2070",
                        "kind": "string",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "9100:34:7",
=======
                        "src": "10542:34:6",
>>>>>>> main
                        "type": "",
                        "value": "Whitelist not created by known p"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "9077:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9077:58:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9077:58:7"
=======
                      "src": "10519:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10519:58:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10519:58:6"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "9156:6:7"
=======
                            "src": "10598:6:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "9164:2:7",
=======
                            "src": "10606:2:6",
>>>>>>> main
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "9152:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9152:15:7"
=======
                          "src": "10594:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10594:15:6"
>>>>>>> main
                      },
                      {
                        "hexValue": "61727479",
                        "kind": "string",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "9169:6:7",
=======
                        "src": "10611:6:6",
>>>>>>> main
                        "type": "",
                        "value": "arty"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "9145:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9145:31:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9145:31:7"
=======
                      "src": "10587:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10587:31:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10587:31:6"
>>>>>>> main
                }
              ]
            },
            "name": "store_literal_in_memory_cf9dd211e1ca90d9268a7ae8097b7e406e991130fcf3aad7805d3e2292c4115c",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "9058:6:7",
                "type": ""
              }
            ],
            "src": "8960:223:7"
=======
                "src": "10500:6:6",
                "type": ""
              }
            ],
            "src": "10402:223:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "9232:79:7",
=======
              "src": "10674:79:6",
>>>>>>> main
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "9289:16:7",
=======
                    "src": "10731:16:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
                              "src": "9298:1:7",
=======
                              "src": "10740:1:6",
>>>>>>> main
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
                              "src": "9301:1:7",
=======
                              "src": "10743:1:6",
>>>>>>> main
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "9291:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9291:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9291:12:7"
=======
                            "src": "10733:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10733:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10733:12:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "9255:5:7"
=======
                            "src": "10697:5:6"
>>>>>>> main
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "9280:5:7"
=======
                                "src": "10722:5:6"
>>>>>>> main
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
                              "src": "9262:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9262:24:7"
=======
                              "src": "10704:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10704:24:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "9252:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9252:35:7"
=======
                          "src": "10694:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10694:35:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "9245:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9245:43:7"
                  },
                  "nodeType": "YulIf",
                  "src": "9242:2:7"
=======
                      "src": "10687:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10687:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "10684:2:6"
>>>>>>> main
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "9225:5:7",
                "type": ""
              }
            ],
            "src": "9189:122:7"
=======
                "src": "10667:5:6",
                "type": ""
              }
            ],
            "src": "10631:122:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "9378:97:7",
=======
              "src": "10820:97:6",
>>>>>>> main
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "9453:16:7",
=======
                    "src": "10895:16:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
                              "src": "9462:1:7",
=======
                              "src": "10904:1:6",
>>>>>>> main
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
                              "src": "9465:1:7",
=======
                              "src": "10907:1:6",
>>>>>>> main
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "9455:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9455:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9455:12:7"
=======
                            "src": "10897:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10897:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10897:12:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "9401:5:7"
=======
                            "src": "10843:5:6"
>>>>>>> main
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "9444:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_Whitelist_$1298",
                              "nodeType": "YulIdentifier",
                              "src": "9408:35:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9408:42:7"
=======
                                "src": "10886:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_Whitelist_$1425",
                              "nodeType": "YulIdentifier",
                              "src": "10850:35:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10850:42:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "9398:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9398:53:7"
=======
                          "src": "10840:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10840:53:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "9391:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9391:61:7"
                  },
                  "nodeType": "YulIf",
                  "src": "9388:2:7"
                }
              ]
            },
            "name": "validator_revert_t_contract$_Whitelist_$1298",
=======
                      "src": "10833:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10833:61:6"
                  },
                  "nodeType": "YulIf",
                  "src": "10830:2:6"
                }
              ]
            },
            "name": "validator_revert_t_contract$_Whitelist_$1425",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "9371:5:7",
                "type": ""
              }
            ],
            "src": "9317:158:7"
=======
                "src": "10813:5:6",
                "type": ""
              }
            ],
            "src": "10759:158:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "9524:79:7",
=======
              "src": "10966:79:6",
>>>>>>> main
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "9581:16:7",
=======
                    "src": "11023:16:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
                              "src": "9590:1:7",
=======
                              "src": "11032:1:6",
>>>>>>> main
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
                              "src": "9593:1:7",
=======
                              "src": "11035:1:6",
>>>>>>> main
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "9583:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9583:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9583:12:7"
=======
                            "src": "11025:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11025:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11025:12:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "9547:5:7"
=======
                            "src": "10989:5:6"
>>>>>>> main
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "9572:5:7"
=======
                                "src": "11014:5:6"
>>>>>>> main
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
                              "src": "9554:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9554:24:7"
=======
                              "src": "10996:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10996:24:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "9544:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9544:35:7"
=======
                          "src": "10986:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10986:35:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "9537:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9537:43:7"
                  },
                  "nodeType": "YulIf",
                  "src": "9534:2:7"
=======
                      "src": "10979:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10979:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "10976:2:6"
>>>>>>> main
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "9517:5:7",
                "type": ""
              }
            ],
            "src": "9481:122:7"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_contract$_Whitelist_$1298(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_Whitelist_$1298(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_Whitelist_$1298(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Whitelist_$1298(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_contract$_Whitelist_$1298_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Whitelist_$1298_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_00e7c86a76d6b37cd7c008118063d660e33a645a376ceac3e4508a2776cb0688_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_00e7c86a76d6b37cd7c008118063d660e33a645a376ceac3e4508a2776cb0688(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_cf9dd211e1ca90d9268a7ae8097b7e406e991130fcf3aad7805d3e2292c4115c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_cf9dd211e1ca90d9268a7ae8097b7e406e991130fcf3aad7805d3e2292c4115c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_Whitelist_$1298__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Whitelist_$1298_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_00e7c86a76d6b37cd7c008118063d660e33a645a376ceac3e4508a2776cb0688__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00e7c86a76d6b37cd7c008118063d660e33a645a376ceac3e4508a2776cb0688_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cf9dd211e1ca90d9268a7ae8097b7e406e991130fcf3aad7805d3e2292c4115c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cf9dd211e1ca90d9268a7ae8097b7e406e991130fcf3aad7805d3e2292c4115c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_contract$_Whitelist_$1298(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_Whitelist_$1298_to_t_address(value) -> converted {\n        converted := convert_t_contract$_Whitelist_$1298_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Whitelist_$1298_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_00e7c86a76d6b37cd7c008118063d660e33a645a376ceac3e4508a2776cb0688(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not a subsidiary address\")\n\n    }\n\n    function store_literal_in_memory_cf9dd211e1ca90d9268a7ae8097b7e406e991130fcf3aad7805d3e2292c4115c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Whitelist not created by known p\")\n\n        mstore(add(memPtr, 32), \"arty\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_Whitelist_$1298(value) {\n        if iszero(eq(value, cleanup_t_contract$_Whitelist_$1298(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 7,
=======
                "src": "10959:5:6",
                "type": ""
              }
            ],
            "src": "10923:122:6"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_contract$_Whitelist_$1425(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_Whitelist_$1425(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_Whitelist_$1425(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Whitelist_$1425(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_contract$_Admin_$134_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Admin_$134_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_Corporate_$573_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Corporate_$573_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_Whitelist_$1425_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Whitelist_$1425_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_00e7c86a76d6b37cd7c008118063d660e33a645a376ceac3e4508a2776cb0688_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_00e7c86a76d6b37cd7c008118063d660e33a645a376ceac3e4508a2776cb0688(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_cf9dd211e1ca90d9268a7ae8097b7e406e991130fcf3aad7805d3e2292c4115c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_cf9dd211e1ca90d9268a7ae8097b7e406e991130fcf3aad7805d3e2292c4115c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_Admin_$134__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Admin_$134_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_Corporate_$573__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Corporate_$573_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_Whitelist_$1425__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Whitelist_$1425_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_00e7c86a76d6b37cd7c008118063d660e33a645a376ceac3e4508a2776cb0688__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00e7c86a76d6b37cd7c008118063d660e33a645a376ceac3e4508a2776cb0688_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cf9dd211e1ca90d9268a7ae8097b7e406e991130fcf3aad7805d3e2292c4115c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cf9dd211e1ca90d9268a7ae8097b7e406e991130fcf3aad7805d3e2292c4115c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_contract$_Whitelist_$1425(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_Admin_$134_to_t_address(value) -> converted {\n        converted := convert_t_contract$_Admin_$134_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Admin_$134_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_Corporate_$573_to_t_address(value) -> converted {\n        converted := convert_t_contract$_Corporate_$573_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Corporate_$573_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_Whitelist_$1425_to_t_address(value) -> converted {\n        converted := convert_t_contract$_Whitelist_$1425_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Whitelist_$1425_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_00e7c86a76d6b37cd7c008118063d660e33a645a376ceac3e4508a2776cb0688(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not a subsidiary address\")\n\n    }\n\n    function store_literal_in_memory_cf9dd211e1ca90d9268a7ae8097b7e406e991130fcf3aad7805d3e2292c4115c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Whitelist not created by known p\")\n\n        mstore(add(memPtr, 32), \"arty\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_Whitelist_$1425(value) {\n        if iszero(eq(value, cleanup_t_contract$_Whitelist_$1425(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 6,
>>>>>>> main
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
<<<<<<< HEAD
  "sourceMap": "1589:2454:1:-:0;;;2310:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2375:6;2367:5;;:14;;;;;;;;;;;;;;;;;;2402:10;2391:8;;:21;;;;;;;;;;;;;;;;;;2440:4;2422:15;:22;;;;;;;;;;;;:::i;:::-;;2463:4;2455:5;;:12;;;;;;;;;;;;;;;;;;2310:168;;1589:2454;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:7:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;293:79;;:::i;:::-;262:2;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;;;;;;:::o;434:143::-;491:5;522:6;516:13;507:22;;538:33;565:5;538:33;:::i;:::-;497:80;;;;:::o;597:355::-;664:5;713:3;706:4;698:6;694:17;690:27;680:2;;721:79;;:::i;:::-;680:2;831:6;825:13;856:90;942:3;934:6;927:4;919:6;915:17;856:90;:::i;:::-;847:99;;670:282;;;;;:::o;958:680::-;1047:6;1055;1104:2;1092:9;1083:7;1079:23;1075:32;1072:2;;;1110:79;;:::i;:::-;1072:2;1230:1;1255:64;1311:7;1302:6;1291:9;1287:22;1255:64;:::i;:::-;1245:74;;1201:128;1389:2;1378:9;1374:18;1368:25;1420:18;1412:6;1409:30;1406:2;;;1442:79;;:::i;:::-;1406:2;1547:74;1613:7;1604:6;1593:9;1589:22;1547:74;:::i;:::-;1537:84;;1339:292;1062:576;;;;;:::o;1644:129::-;1678:6;1705:20;;:::i;:::-;1695:30;;1734:33;1762:4;1754:6;1734:33;:::i;:::-;1685:88;;;:::o;1779:75::-;1812:6;1845:2;1839:9;1829:19;;1819:35;:::o;1860:308::-;1922:4;2012:18;2004:6;2001:30;1998:2;;;2034:18;;:::i;:::-;1998:2;2072:29;2094:6;2072:29;:::i;:::-;2064:37;;2156:4;2150;2146:15;2138:23;;1927:241;;;:::o;2174:96::-;2211:7;2240:24;2258:5;2240:24;:::i;:::-;2229:35;;2219:51;;;:::o;2276:126::-;2313:7;2353:42;2346:5;2342:54;2331:65;;2321:81;;;:::o;2408:307::-;2476:1;2486:113;2500:6;2497:1;2494:13;2486:113;;;2585:1;2580:3;2576:11;2570:18;2566:1;2561:3;2557:11;2550:39;2522:2;2519:1;2515:10;2510:15;;2486:113;;;2617:6;2614:1;2611:13;2608:2;;;2697:1;2688:6;2683:3;2679:16;2672:27;2608:2;2457:258;;;;:::o;2721:320::-;2765:6;2802:1;2796:4;2792:12;2782:22;;2849:1;2843:4;2839:12;2870:18;2860:2;;2926:4;2918:6;2914:17;2904:27;;2860:2;2988;2980:6;2977:14;2957:18;2954:38;2951:2;;;3007:18;;:::i;:::-;2951:2;2772:269;;;;:::o;3047:281::-;3130:27;3152:4;3130:27;:::i;:::-;3122:6;3118:40;3260:6;3248:10;3245:22;3224:18;3212:10;3209:34;3206:62;3203:2;;;3271:18;;:::i;:::-;3203:2;3311:10;3307:2;3300:22;3090:238;;;:::o;3334:180::-;3382:77;3379:1;3372:88;3479:4;3476:1;3469:15;3503:4;3500:1;3493:15;3520:180;3568:77;3565:1;3558:88;3665:4;3662:1;3655:15;3689:4;3686:1;3679:15;3706:117;3815:1;3812;3805:12;3829:117;3938:1;3935;3928:12;3952:117;4061:1;4058;4051:12;4075:117;4184:1;4181;4174:12;4198:102;4239:6;4290:2;4286:7;4281:2;4274:5;4270:14;4266:28;4256:38;;4246:54;;;:::o;4306:122::-;4379:24;4397:5;4379:24;:::i;:::-;4372:5;4369:35;4359:2;;4418:1;4415;4408:12;4359:2;4349:79;:::o;1589:2454:1:-;;;;;;;",
  "deployedSourceMap": "1589:2454:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1739:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3474:239;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3206:232;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2581:454;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1828:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1614:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1769:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1670:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2013:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3747:105;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3078:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1922:21;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1739:24;;;;:::o;3474:239::-;3912:5;;;;;;;;;;;3898:19;;:10;:19;;;:45;;;;3935:8;;;;;;;;;;3921:22;;:10;:22;;;3898:45;3890:54;;;;;;4018:4:::1;4009:13;;:5;;;;;;;;;;;:13;;;4001:22;;;::::0;::::1;;3595:5:::2;;;;;;;;;;;3573:27;;:10;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:27;;;:60;;;;3625:8;::::0;::::2;;;;;;;;3604:29;;:9;;;;;;;;;;;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:29;;;3573:60;3565:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;3696:10;3684:9;;:22;;;;;;;;;;;;;;;;;;3474:239:::0;:::o;3206:232::-;3289:4;4018;4009:13;;:5;;;;;;;;;;;:13;;;4001:22;;;;;;3356:1:::1;3312:46;;:12;:21;3325:7;3312:21;;;;;;;;;;;;;;;:32;;;;;;;;;;;;:46;;;;3304:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;3404:12;:21;3417:7;3404:21;;;;;;;;;;;;;;;:27;;;;;;;;;;;;3397:34;;3206:232:::0;;;:::o;2581:454::-;2652:4;3912:5;;;;;;;;;;;3898:19;;:10;:19;;;:45;;;;3935:8;;;;;;;;;;3921:22;;:10;:22;;;3898:45;3890:54;;;;;;4018:4:::1;4009:13;;:5;;;;;;;;;;;:13;;;4001:22;;;::::0;::::1;;2775:1:::2;2745:32;;:18;2760:2;2745:14;:18::i;:::-;:32;;;;2737:41;;;::::0;::::2;;2788:17;2831:4;2808:29;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;2788:49;;2847:4;2865:6;2847:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2951:30;;;;;;;;2963:6;2951:30;;;;;;2972:2;2951:30;;;;2976:4;2951:30;;;;::::0;2919:12:::2;:29;2940:6;2919:29;;;;;;;;;;;;;;;:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3024:4;3017:11;;;2581:454:::0;;;:::o;1828:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1614:23::-;;;;;;;;;;;;:::o;1769:29::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1670:20::-;;;;;;;;;;;;;:::o;2013:26::-;;;;;;;;;;;;;:::o;3747:105::-;3817:4;3912:5;;;;;;;;;;;3898:19;;:10;:19;;;:45;;;;3935:8;;;;;;;;;;3921:22;;:10;:22;;;3898:45;3890:54;;;;;;4018:4:::1;4009:13;;:5;;;;;;;;;;;:13;;;4001:22;;;::::0;::::1;;3840:5:::2;3832;;:13;;;;;;;;;;;;;;;;;;3747:105:::0;:::o;3078:122::-;3158:7;3912:5;;;;;;;;;;;3898:19;;:10;:19;;;:45;;;;3935:8;;;;;;;;;;3921:22;;:10;:22;;;3898:45;3890:54;;;;;;4018:4:::1;4009:13;;:5;;;;;;;;;;;:13;;;4001:22;;;::::0;::::1;;3185:4:::2;3190:2;3185:8;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3178:15;;3078:122:::0;;;:::o;1922:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:139:7:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:143::-;209:5;240:6;234:13;225:22;;256:33;283:5;256:33;:::i;:::-;215:80;;;;:::o;301:175::-;365:5;403:6;390:20;381:29;;419:51;464:5;419:51;:::i;:::-;371:105;;;;:::o;482:139::-;528:5;566:6;553:20;544:29;;582:33;609:5;582:33;:::i;:::-;534:87;;;;:::o;627:329::-;686:6;735:2;723:9;714:7;710:23;706:32;703:2;;;741:79;;:::i;:::-;703:2;861:1;886:53;931:7;922:6;911:9;907:22;886:53;:::i;:::-;876:63;;832:117;693:263;;;;:::o;962:351::-;1032:6;1081:2;1069:9;1060:7;1056:23;1052:32;1049:2;;;1087:79;;:::i;:::-;1049:2;1207:1;1232:64;1288:7;1279:6;1268:9;1264:22;1232:64;:::i;:::-;1222:74;;1178:128;1039:274;;;;:::o;1319:365::-;1396:6;1445:2;1433:9;1424:7;1420:23;1416:32;1413:2;;;1451:79;;:::i;:::-;1413:2;1571:1;1596:71;1659:7;1650:6;1639:9;1635:22;1596:71;:::i;:::-;1586:81;;1542:135;1403:281;;;;:::o;1690:329::-;1749:6;1798:2;1786:9;1777:7;1773:23;1769:32;1766:2;;;1804:79;;:::i;:::-;1766:2;1924:1;1949:53;1994:7;1985:6;1974:9;1970:22;1949:53;:::i;:::-;1939:63;;1895:117;1756:263;;;;:::o;2025:118::-;2112:24;2130:5;2112:24;:::i;:::-;2107:3;2100:37;2090:53;;:::o;2149:109::-;2230:21;2245:5;2230:21;:::i;:::-;2225:3;2218:34;2208:50;;:::o;2264:167::-;2369:55;2418:5;2369:55;:::i;:::-;2364:3;2357:68;2347:84;;:::o;2437:364::-;2525:3;2553:39;2586:5;2553:39;:::i;:::-;2608:71;2672:6;2667:3;2608:71;:::i;:::-;2601:78;;2688:52;2733:6;2728:3;2721:4;2714:5;2710:16;2688:52;:::i;:::-;2765:29;2787:6;2765:29;:::i;:::-;2760:3;2756:39;2749:46;;2529:272;;;;;:::o;2807:366::-;2949:3;2970:67;3034:2;3029:3;2970:67;:::i;:::-;2963:74;;3046:93;3135:3;3046:93;:::i;:::-;3164:2;3159:3;3155:12;3148:19;;2953:220;;;:::o;3179:366::-;3321:3;3342:67;3406:2;3401:3;3342:67;:::i;:::-;3335:74;;3418:93;3507:3;3418:93;:::i;:::-;3536:2;3531:3;3527:12;3520:19;;3325:220;;;:::o;3551:118::-;3638:24;3656:5;3638:24;:::i;:::-;3633:3;3626:37;3616:53;;:::o;3675:222::-;3768:4;3806:2;3795:9;3791:18;3783:26;;3819:71;3887:1;3876:9;3872:17;3863:6;3819:71;:::i;:::-;3773:124;;;;:::o;3903:430::-;4046:4;4084:2;4073:9;4069:18;4061:26;;4097:71;4165:1;4154:9;4150:17;4141:6;4097:71;:::i;:::-;4178:72;4246:2;4235:9;4231:18;4222:6;4178:72;:::i;:::-;4260:66;4322:2;4311:9;4307:18;4298:6;4260:66;:::i;:::-;4051:282;;;;;;:::o;4339:210::-;4426:4;4464:2;4453:9;4449:18;4441:26;;4477:65;4539:1;4528:9;4524:17;4515:6;4477:65;:::i;:::-;4431:118;;;;:::o;4555:258::-;4666:4;4704:2;4693:9;4689:18;4681:26;;4717:89;4803:1;4792:9;4788:17;4779:6;4717:89;:::i;:::-;4671:142;;;;:::o;4819:313::-;4932:4;4970:2;4959:9;4955:18;4947:26;;5019:9;5013:4;5009:20;5005:1;4994:9;4990:17;4983:47;5047:78;5120:4;5111:6;5047:78;:::i;:::-;5039:86;;4937:195;;;;:::o;5138:419::-;5304:4;5342:2;5331:9;5327:18;5319:26;;5391:9;5385:4;5381:20;5377:1;5366:9;5362:17;5355:47;5419:131;5545:4;5419:131;:::i;:::-;5411:139;;5309:248;;;:::o;5563:419::-;5729:4;5767:2;5756:9;5752:18;5744:26;;5816:9;5810:4;5806:20;5802:1;5791:9;5787:17;5780:47;5844:131;5970:4;5844:131;:::i;:::-;5836:139;;5734:248;;;:::o;5988:222::-;6081:4;6119:2;6108:9;6104:18;6096:26;;6132:71;6200:1;6189:9;6185:17;6176:6;6132:71;:::i;:::-;6086:124;;;;:::o;6297:99::-;6349:6;6383:5;6377:12;6367:22;;6356:40;;;:::o;6402:169::-;6486:11;6520:6;6515:3;6508:19;6560:4;6555:3;6551:14;6536:29;;6498:73;;;;:::o;6577:96::-;6614:7;6643:24;6661:5;6643:24;:::i;:::-;6632:35;;6622:51;;;:::o;6679:90::-;6713:7;6756:5;6749:13;6742:21;6731:32;;6721:48;;;:::o;6775:114::-;6830:7;6859:24;6877:5;6859:24;:::i;:::-;6848:35;;6838:51;;;:::o;6895:126::-;6932:7;6972:42;6965:5;6961:54;6950:65;;6940:81;;;:::o;7027:77::-;7064:7;7093:5;7082:16;;7072:32;;;:::o;7110:162::-;7178:9;7211:55;7260:5;7211:55;:::i;:::-;7198:68;;7188:84;;;:::o;7278:131::-;7346:9;7379:24;7397:5;7379:24;:::i;:::-;7366:37;;7356:53;;;:::o;7415:307::-;7483:1;7493:113;7507:6;7504:1;7501:13;7493:113;;;7592:1;7587:3;7583:11;7577:18;7573:1;7568:3;7564:11;7557:39;7529:2;7526:1;7522:10;7517:15;;7493:113;;;7624:6;7621:1;7618:13;7615:2;;;7704:1;7695:6;7690:3;7686:16;7679:27;7615:2;7464:258;;;;:::o;7728:320::-;7772:6;7809:1;7803:4;7799:12;7789:22;;7856:1;7850:4;7846:12;7877:18;7867:2;;7933:4;7925:6;7921:17;7911:27;;7867:2;7995;7987:6;7984:14;7964:18;7961:38;7958:2;;;8014:18;;:::i;:::-;7958:2;7779:269;;;;:::o;8054:180::-;8102:77;8099:1;8092:88;8199:4;8196:1;8189:15;8223:4;8220:1;8213:15;8240:180;8288:77;8285:1;8278:88;8385:4;8382:1;8375:15;8409:4;8406:1;8399:15;8549:117;8658:1;8655;8648:12;8672:102;8713:6;8764:2;8760:7;8755:2;8748:5;8744:14;8740:28;8730:38;;8720:54;;;:::o;8780:174::-;8920:26;8916:1;8908:6;8904:14;8897:50;8886:68;:::o;8960:223::-;9100:34;9096:1;9088:6;9084:14;9077:58;9169:6;9164:2;9156:6;9152:15;9145:31;9066:117;:::o;9189:122::-;9262:24;9280:5;9262:24;:::i;:::-;9255:5;9252:35;9242:2;;9301:1;9298;9291:12;9242:2;9232:79;:::o;9317:158::-;9408:42;9444:5;9408:42;:::i;:::-;9401:5;9398:53;9388:2;;9465:1;9462;9455:12;9388:2;9378:97;:::o;9481:122::-;9554:24;9572:5;9554:24;:::i;:::-;9547:5;9544:35;9534:2;;9593:1;9590;9583:12;9534:2;9524:79;:::o",
  "source": "pragma solidity >=0.7.0 <0.9.0;\n\nimport \"./Whitelist.sol\";\n\n\ncontract CorporateFactory { \n    address public owner; // owner address \n    mapping(uint => corporate) public corporates;\n    uint numCorps; // a mapping of contract ids to the corporate struct.\n    bool active = true;\n\n    struct corporate {\n        address corpAddress;\n        uint id;\n        bool valid;\n    }\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    function createCorp(string memory corpName) public  permissioned activeContract returns(bool){\n        Corporate newCorp = new Corporate(owner,corpName);\n        corporates[numCorps] = corporate(address(newCorp), numCorps, true);\n        numCorps += 1;\n        return true;\n    }\n\n    function getCorporate(uint id) public view permissioned activeContract returns(address)  {\n        return corporates[id].corpAddress;\n    }\n\n    function toggleContractActivation() public permissioned returns (bool){\n        active = !active;\n        return(active);\n    }\n\n    function disableCorporate(uint id) public permissioned activeContract returns (bool){\n        corporates[id].valid = false;\n    }\n\n    function checkIfCorporateValid(uint id) public view activeContract returns (bool){\n        require(corporates[id].corpAddress != address(0), 'Not a valid corporate');\n        return corporates[id].valid;\n\n    }\n    \n    modifier permissioned {\n        require(msg.sender == owner, \"Only the owner can access this function\");\n        _;\n    }\n\n    modifier activeContract{\n        require(active == true, \"Contract no longer active\");\n        _;\n    }\n}\n\ncontract Corporate {\n    address public creator_; // creator of the contract\n    address public owner; // owner of the contract i.e the corporate\n    uint public corporate_id;\n    string public corporate_name_; // name of the contract\n    mapping(address => sub) public subsidiaries; // a mapping of addresses to the sub struct.\n    address[] public subs; // could make this into a struct so the id can be found easily.\n    Whitelist public whitelist; //whitelist associated with the corporate\n    bool valid; //checks if the contract is valid \n    \n    struct sub {\n        address subAddress;\n        uint id;\n        bool valid;\n    }\n\n\n    // allows for an owner i.e. corporate to be passed into the constructor \n    constructor(address owner_, string memory name){\n        owner = owner_;\n        creator_ = msg.sender;\n        corporate_name_ = name; \n        valid = true;    \n    }\n\n    // This function is used to create a Subsidiary branch of the Corporate representing a store\n    function createSub(uint id) public  permissioned validContract returns(bool){\n        // if set to default address the contract does not yet exist \n        require(getSubContract(id) != address(0));\n        Subsidiary newSub = new Subsidiary(address(this));\n        subs.push(address(newSub)); // add new sub to subsidiary array \n        subsidiaries[address(newSub)] = sub(address(newSub), id, true); // add new sub to mapping\n        return true;\n    }\n\n    // returns the subsidiary struct\n    function getSubContract(uint id) public view permissioned validContract returns(address)  {\n        return subs[id];\n    }\n\n    function checkIfSubsidiaryValid(address toCheck) public view validContract returns(bool){\n        require(subsidiaries[toCheck].subAddress != address(0), \"Not a subsidiary address\");\n        return subsidiaries[toCheck].valid;\n    }\n\n    // updates the whiteList \n    function updateWhitelist(Whitelist whitelist_) public permissioned validContract {\n        require(whitelist_.owner() == owner || whitelist.owner() == creator_, \"Whitelist not created by known party\");\n        whitelist = whitelist_;\n    }\n\n    //disable the Corporate\n    function disableCorporate() public permissioned validContract returns(bool){\n        valid = false;\n    }\n\n    modifier permissioned {\n        require(msg.sender == owner || msg.sender == creator_);\n        _;\n    }\n\n    modifier validContract {\n        require(valid == true);\n        _;\n    }\n}\n\n\n\n// This contract represent a Subsidiary branch of a corporate \ncontract Subsidiary {\n    address payable public parent_; // Corporate Contract\n    uint amount; //Balanace\n    mapping(address => bool) private permissionedAddress; //provides an array of addresses the Sub can withdraw funds to\n    event ValueReceived(address user, uint amount);\n\n\n    struct transaction{\n        uint id; \n        address receiver_id;\n        uint amount;\n    }\n\n    // transaction id to person id\n    mapping(uint => transaction) transactions; // List of transactions @DEV: need to provide rec address and amount (maybe through struct)\n    uint numOfTransactions;\n    constructor(address parent) {\n        parent_ = payable(parent);\n        amount = 0;\n    }\n\n    // need to make sure no possibility for double spend\n    // Will reset to zero and prevent withdrawl whilst the send transaction is processed.\n    function getTake() public payable accountsAccess returns(bool)  {\n        uint prevAmount = amount;\n        amount = 0;\n        return parent_.send(prevAmount); // need to write a fallback function if this fails.\n    }\n\n    // Oracle end point.\n    // reassess this function as it always returns true.\n    function insertTransaction(uint transID, address person_id, uint tx_amount) restricted public returns(bool) {\n        require(person_id.balance >= amount, \"The Receiver contract does not have sufficient balance for this transaction\"); \n        transactions[transID] = transaction(transID, person_id, tx_amount);\n        return true;\n    }\n\n    // provides functionality to receive funds\n    receive() external payable{\n        emit ValueReceived(msg.sender, msg.value);\n    }\n    \n    modifier restricted {\n        require(msg.sender == parent_ || permissionedAddress[msg.sender] == true);\n        _;\n    }\n\n    modifier accountsAccess {\n        require(msg.sender == parent_);\n        _;\n    }\n}",
  "sourcePath": "/Users/Will/Documents/University /Final Year/T2/P2/COMP6452-HelpChain/contracts/CorporateFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/CorporateFactory.sol",
    "exportedSymbols": {
      "Corporate": [
        516
      ],
      "CorporateFactory": [
        286
      ],
      "Subsidiary": [
        657
      ],
      "Whitelist": [
        1298
      ]
    },
    "id": 658,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 112,
=======
  "sourceMap": "1738:2520:1:-:0;;;2483:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2562:6;2554:5;;:14;;;;;;;;;;;;;;;;;;2586:6;2578:5;;:14;;;;;;;;;;;;;;;;;;2613:10;2602:8;;:21;;;;;;;;;;;;;;;;;;2651:4;2633:15;:22;;;;;;;;;;;;:::i;:::-;;2674:4;2666:5;;:12;;;;;;;;;;;;;;;;;;2483:206;;;1738:2520;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:6:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;293:79;;:::i;:::-;262:2;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;;;;;;:::o;434:143::-;491:5;522:6;516:13;507:22;;538:33;565:5;538:33;:::i;:::-;497:80;;;;:::o;583:169::-;653:5;684:6;678:13;669:22;;700:46;740:5;700:46;:::i;:::-;659:93;;;;:::o;772:355::-;839:5;888:3;881:4;873:6;869:17;865:27;855:2;;896:79;;:::i;:::-;855:2;1006:6;1000:13;1031:90;1117:3;1109:6;1102:4;1094:6;1090:17;1031:90;:::i;:::-;1022:99;;845:282;;;;;:::o;1133:862::-;1244:6;1252;1260;1309:2;1297:9;1288:7;1284:23;1280:32;1277:2;;;1315:79;;:::i;:::-;1277:2;1435:1;1460:64;1516:7;1507:6;1496:9;1492:22;1460:64;:::i;:::-;1450:74;;1406:128;1573:2;1599:77;1668:7;1659:6;1648:9;1644:22;1599:77;:::i;:::-;1589:87;;1544:142;1746:2;1735:9;1731:18;1725:25;1777:18;1769:6;1766:30;1763:2;;;1799:79;;:::i;:::-;1763:2;1904:74;1970:7;1961:6;1950:9;1946:22;1904:74;:::i;:::-;1894:84;;1696:292;1267:728;;;;;:::o;2001:129::-;2035:6;2062:20;;:::i;:::-;2052:30;;2091:33;2119:4;2111:6;2091:33;:::i;:::-;2042:88;;;:::o;2136:75::-;2169:6;2202:2;2196:9;2186:19;;2176:35;:::o;2217:308::-;2279:4;2369:18;2361:6;2358:30;2355:2;;;2391:18;;:::i;:::-;2355:2;2429:29;2451:6;2429:29;:::i;:::-;2421:37;;2513:4;2507;2503:15;2495:23;;2284:241;;;:::o;2531:96::-;2568:7;2597:24;2615:5;2597:24;:::i;:::-;2586:35;;2576:51;;;:::o;2633:109::-;2683:7;2712:24;2730:5;2712:24;:::i;:::-;2701:35;;2691:51;;;:::o;2748:126::-;2785:7;2825:42;2818:5;2814:54;2803:65;;2793:81;;;:::o;2880:307::-;2948:1;2958:113;2972:6;2969:1;2966:13;2958:113;;;3057:1;3052:3;3048:11;3042:18;3038:1;3033:3;3029:11;3022:39;2994:2;2991:1;2987:10;2982:15;;2958:113;;;3089:6;3086:1;3083:13;3080:2;;;3169:1;3160:6;3155:3;3151:16;3144:27;3080:2;2929:258;;;;:::o;3193:320::-;3237:6;3274:1;3268:4;3264:12;3254:22;;3321:1;3315:4;3311:12;3342:18;3332:2;;3398:4;3390:6;3386:17;3376:27;;3332:2;3460;3452:6;3449:14;3429:18;3426:38;3423:2;;;3479:18;;:::i;:::-;3423:2;3244:269;;;;:::o;3519:281::-;3602:27;3624:4;3602:27;:::i;:::-;3594:6;3590:40;3732:6;3720:10;3717:22;3696:18;3684:10;3681:34;3678:62;3675:2;;;3743:18;;:::i;:::-;3675:2;3783:10;3779:2;3772:22;3562:238;;;:::o;3806:180::-;3854:77;3851:1;3844:88;3951:4;3948:1;3941:15;3975:4;3972:1;3965:15;3992:180;4040:77;4037:1;4030:88;4137:4;4134:1;4127:15;4161:4;4158:1;4151:15;4178:117;4287:1;4284;4277:12;4301:117;4410:1;4407;4400:12;4424:117;4533:1;4530;4523:12;4547:117;4656:1;4653;4646:12;4670:102;4711:6;4762:2;4758:7;4753:2;4746:5;4742:14;4738:28;4728:38;;4718:54;;;:::o;4778:122::-;4851:24;4869:5;4851:24;:::i;:::-;4844:5;4841:35;4831:2;;4890:1;4887;4880:12;4831:2;4821:79;:::o;4906:148::-;4992:37;5023:5;4992:37;:::i;:::-;4985:5;4982:48;4972:2;;5044:1;5041;5034:12;4972:2;4962:92;:::o;1738:2520:1:-;;;;;;;",
  "deployedSourceMap": "1738:2520:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1912:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3667:239;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3399:232;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2792:449;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2001:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1763:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1942:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1819:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2186:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3940:127;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3284:109;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1888:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2095:21;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1912:24;;;;:::o;3667:239::-;4127:5;;;;;;;;;;;4113:19;;:10;:19;;;:45;;;;4150:8;;;;;;;;;;4136:22;;:10;:22;;;4113:45;4105:54;;;;;;4233:4:::1;4224:13;;:5;;;;;;;;;;;:13;;;4216:22;;;::::0;::::1;;3788:5:::2;;;;;;;;;;;3766:27;;:10;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:27;;;:60;;;;3818:8;::::0;::::2;;;;;;;;3797:29;;:9;;;;;;;;;;;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:29;;;3766:60;3758:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;3889:10;3877:9;;:22;;;;;;;;;;;;;;;;;;3667:239:::0;:::o;3399:232::-;3482:4;4233;4224:13;;:5;;;;;;;;;;;:13;;;4216:22;;;;;;3549:1:::1;3505:46;;:12;:21;3518:7;3505:21;;;;;;;;;;;;;;;:32;;;;;;;;;;;;:46;;;;3497:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;3597:12;:21;3610:7;3597:21;;;;;;;;;;;;;;;:27;;;;;;;;;;;;3590:34;;3399:232:::0;;;:::o;2792:449::-;2863:7;4127:5;;;;;;;;;;;4113:19;;:10;:19;;;:45;;;;4150:8;;;;;;;;;;4136:22;;:10;:22;;;4113:45;4105:54;;;;;;4233:4:::1;4224:13;;:5;;;;;;;;;;;:13;;;4216:22;;;::::0;::::1;;2979:1:::2;2959:22;;:4;2964:2;2959:8;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:22;;;2951:31;;;::::0;::::2;;2992:17;3027:4;3012:20;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;2992:40;;3042:4;3060:6;3042:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3146:30;;;;;;;;3158:6;3146:30;;;;;;3167:2;3146:30;;;;3171:4;3146:30;;;;::::0;3114:12:::2;:29;3135:6;3114:29;;;;;;;;;;;;;;;:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3227:6;3212:22;;;2792:449:::0;;;:::o;2001:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1763:23::-;;;;;;;;;;;;:::o;1942:29::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1819:20::-;;;;;;;;;;;;;:::o;2186:26::-;;;;;;;;;;;;;:::o;3940:127::-;4010:4;4127:5;;;;;;;;;;;4113:19;;:10;:19;;;:45;;;;4150:8;;;;;;;;;;4136:22;;:10;:22;;;4113:45;4105:54;;;;;;4233:4:::1;4224:13;;:5;;;;;;;;;;;:13;;;4216:22;;;::::0;::::1;;4033:5:::2;4025;;:13;;;;;;;;;;;;;;;;;;4055:5;;;;;;;;;;;4048:12;;3940:127:::0;:::o;3284:109::-;3351:7;4233:4;4224:13;;:5;;;;;;;;;;;:13;;;4216:22;;;;;;3378:4:::1;3383:2;3378:8;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3371:15;;3284:109:::0;;;:::o;1888:18::-;;;;;;;;;;;;;:::o;2095:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:139:6:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:143::-;209:5;240:6;234:13;225:22;;256:33;283:5;256:33;:::i;:::-;215:80;;;;:::o;301:175::-;365:5;403:6;390:20;381:29;;419:51;464:5;419:51;:::i;:::-;371:105;;;;:::o;482:139::-;528:5;566:6;553:20;544:29;;582:33;609:5;582:33;:::i;:::-;534:87;;;;:::o;627:329::-;686:6;735:2;723:9;714:7;710:23;706:32;703:2;;;741:79;;:::i;:::-;703:2;861:1;886:53;931:7;922:6;911:9;907:22;886:53;:::i;:::-;876:63;;832:117;693:263;;;;:::o;962:351::-;1032:6;1081:2;1069:9;1060:7;1056:23;1052:32;1049:2;;;1087:79;;:::i;:::-;1049:2;1207:1;1232:64;1288:7;1279:6;1268:9;1264:22;1232:64;:::i;:::-;1222:74;;1178:128;1039:274;;;;:::o;1319:365::-;1396:6;1445:2;1433:9;1424:7;1420:23;1416:32;1413:2;;;1451:79;;:::i;:::-;1413:2;1571:1;1596:71;1659:7;1650:6;1639:9;1635:22;1596:71;:::i;:::-;1586:81;;1542:135;1403:281;;;;:::o;1690:329::-;1749:6;1798:2;1786:9;1777:7;1773:23;1769:32;1766:2;;;1804:79;;:::i;:::-;1766:2;1924:1;1949:53;1994:7;1985:6;1974:9;1970:22;1949:53;:::i;:::-;1939:63;;1895:117;1756:263;;;;:::o;2025:118::-;2112:24;2130:5;2112:24;:::i;:::-;2107:3;2100:37;2090:53;;:::o;2149:109::-;2230:21;2245:5;2230:21;:::i;:::-;2225:3;2218:34;2208:50;;:::o;2264:157::-;2364:50;2408:5;2364:50;:::i;:::-;2359:3;2352:63;2342:79;;:::o;2427:165::-;2531:54;2579:5;2531:54;:::i;:::-;2526:3;2519:67;2509:83;;:::o;2598:167::-;2703:55;2752:5;2703:55;:::i;:::-;2698:3;2691:68;2681:84;;:::o;2771:364::-;2859:3;2887:39;2920:5;2887:39;:::i;:::-;2942:71;3006:6;3001:3;2942:71;:::i;:::-;2935:78;;3022:52;3067:6;3062:3;3055:4;3048:5;3044:16;3022:52;:::i;:::-;3099:29;3121:6;3099:29;:::i;:::-;3094:3;3090:39;3083:46;;2863:272;;;;;:::o;3141:366::-;3283:3;3304:67;3368:2;3363:3;3304:67;:::i;:::-;3297:74;;3380:93;3469:3;3380:93;:::i;:::-;3498:2;3493:3;3489:12;3482:19;;3287:220;;;:::o;3513:366::-;3655:3;3676:67;3740:2;3735:3;3676:67;:::i;:::-;3669:74;;3752:93;3841:3;3752:93;:::i;:::-;3870:2;3865:3;3861:12;3854:19;;3659:220;;;:::o;3885:118::-;3972:24;3990:5;3972:24;:::i;:::-;3967:3;3960:37;3950:53;;:::o;4009:222::-;4102:4;4140:2;4129:9;4125:18;4117:26;;4153:71;4221:1;4210:9;4206:17;4197:6;4153:71;:::i;:::-;4107:124;;;;:::o;4237:430::-;4380:4;4418:2;4407:9;4403:18;4395:26;;4431:71;4499:1;4488:9;4484:17;4475:6;4431:71;:::i;:::-;4512:72;4580:2;4569:9;4565:18;4556:6;4512:72;:::i;:::-;4594:66;4656:2;4645:9;4641:18;4632:6;4594:66;:::i;:::-;4385:282;;;;;;:::o;4673:210::-;4760:4;4798:2;4787:9;4783:18;4775:26;;4811:65;4873:1;4862:9;4858:17;4849:6;4811:65;:::i;:::-;4765:118;;;;:::o;4889:248::-;4995:4;5033:2;5022:9;5018:18;5010:26;;5046:84;5127:1;5116:9;5112:17;5103:6;5046:84;:::i;:::-;5000:137;;;;:::o;5143:256::-;5253:4;5291:2;5280:9;5276:18;5268:26;;5304:88;5389:1;5378:9;5374:17;5365:6;5304:88;:::i;:::-;5258:141;;;;:::o;5405:258::-;5516:4;5554:2;5543:9;5539:18;5531:26;;5567:89;5653:1;5642:9;5638:17;5629:6;5567:89;:::i;:::-;5521:142;;;;:::o;5669:313::-;5782:4;5820:2;5809:9;5805:18;5797:26;;5869:9;5863:4;5859:20;5855:1;5844:9;5840:17;5833:47;5897:78;5970:4;5961:6;5897:78;:::i;:::-;5889:86;;5787:195;;;;:::o;5988:419::-;6154:4;6192:2;6181:9;6177:18;6169:26;;6241:9;6235:4;6231:20;6227:1;6216:9;6212:17;6205:47;6269:131;6395:4;6269:131;:::i;:::-;6261:139;;6159:248;;;:::o;6413:419::-;6579:4;6617:2;6606:9;6602:18;6594:26;;6666:9;6660:4;6656:20;6652:1;6641:9;6637:17;6630:47;6694:131;6820:4;6694:131;:::i;:::-;6686:139;;6584:248;;;:::o;6838:222::-;6931:4;6969:2;6958:9;6954:18;6946:26;;6982:71;7050:1;7039:9;7035:17;7026:6;6982:71;:::i;:::-;6936:124;;;;:::o;7147:99::-;7199:6;7233:5;7227:12;7217:22;;7206:40;;;:::o;7252:169::-;7336:11;7370:6;7365:3;7358:19;7410:4;7405:3;7401:14;7386:29;;7348:73;;;;:::o;7427:96::-;7464:7;7493:24;7511:5;7493:24;:::i;:::-;7482:35;;7472:51;;;:::o;7529:90::-;7563:7;7606:5;7599:13;7592:21;7581:32;;7571:48;;;:::o;7625:114::-;7680:7;7709:24;7727:5;7709:24;:::i;:::-;7698:35;;7688:51;;;:::o;7745:126::-;7782:7;7822:42;7815:5;7811:54;7800:65;;7790:81;;;:::o;7877:77::-;7914:7;7943:5;7932:16;;7922:32;;;:::o;7960:152::-;8023:9;8056:50;8100:5;8056:50;:::i;:::-;8043:63;;8033:79;;;:::o;8118:126::-;8181:9;8214:24;8232:5;8214:24;:::i;:::-;8201:37;;8191:53;;;:::o;8250:160::-;8317:9;8350:54;8398:5;8350:54;:::i;:::-;8337:67;;8327:83;;;:::o;8416:130::-;8483:9;8516:24;8534:5;8516:24;:::i;:::-;8503:37;;8493:53;;;:::o;8552:162::-;8620:9;8653:55;8702:5;8653:55;:::i;:::-;8640:68;;8630:84;;;:::o;8720:131::-;8788:9;8821:24;8839:5;8821:24;:::i;:::-;8808:37;;8798:53;;;:::o;8857:307::-;8925:1;8935:113;8949:6;8946:1;8943:13;8935:113;;;9034:1;9029:3;9025:11;9019:18;9015:1;9010:3;9006:11;8999:39;8971:2;8968:1;8964:10;8959:15;;8935:113;;;9066:6;9063:1;9060:13;9057:2;;;9146:1;9137:6;9132:3;9128:16;9121:27;9057:2;8906:258;;;;:::o;9170:320::-;9214:6;9251:1;9245:4;9241:12;9231:22;;9298:1;9292:4;9288:12;9319:18;9309:2;;9375:4;9367:6;9363:17;9353:27;;9309:2;9437;9429:6;9426:14;9406:18;9403:38;9400:2;;;9456:18;;:::i;:::-;9400:2;9221:269;;;;:::o;9496:180::-;9544:77;9541:1;9534:88;9641:4;9638:1;9631:15;9665:4;9662:1;9655:15;9682:180;9730:77;9727:1;9720:88;9827:4;9824:1;9817:15;9851:4;9848:1;9841:15;9991:117;10100:1;10097;10090:12;10114:102;10155:6;10206:2;10202:7;10197:2;10190:5;10186:14;10182:28;10172:38;;10162:54;;;:::o;10222:174::-;10362:26;10358:1;10350:6;10346:14;10339:50;10328:68;:::o;10402:223::-;10542:34;10538:1;10530:6;10526:14;10519:58;10611:6;10606:2;10598:6;10594:15;10587:31;10508:117;:::o;10631:122::-;10704:24;10722:5;10704:24;:::i;:::-;10697:5;10694:35;10684:2;;10743:1;10740;10733:12;10684:2;10674:79;:::o;10759:158::-;10850:42;10886:5;10850:42;:::i;:::-;10843:5;10840:53;10830:2;;10907:1;10904;10897:12;10830:2;10820:97;:::o;10923:122::-;10996:24;11014:5;10996:24;:::i;:::-;10989:5;10986:35;10976:2;;11035:1;11032;11025:12;10976:2;10966:79;:::o",
  "source": "pragma solidity >=0.7.0 <0.9.0;\n\nimport \"./Whitelist.sol\";\nimport \"./Admin.sol\";\n\n\ncontract CorporateFactory { \n    address public owner; // owner address \n    Admin public admin;\n    mapping(uint => corporate) public corporates;\n    uint numCorps; // a mapping of contract ids to the corporate struct.\n    bool active = true;\n\n    struct corporate {\n        address corpAddress;\n        uint id;\n        bool valid;\n    }\n\n    constructor(Admin admin_) {\n        owner = msg.sender;\n        admin = admin_;\n    }\n\n    function createCorp(string memory corpName) public  permissioned activeContract returns(address){\n        Corporate newCorp = new Corporate(owner,admin,corpName);\n        corporates[numCorps] = corporate(address(newCorp), numCorps, true);\n        numCorps += 1;\n        return address(newCorp);\n    }\n\n    function getCorporate(uint id) public view activeContract returns(address)  {\n        return corporates[id].corpAddress;\n    }\n\n    function toggleContractActivation() public permissioned returns (bool){\n        active = !active;\n        return(active);\n    }\n\n    function disableCorporate(uint id) public permissioned activeContract returns (bool){\n        corporates[id].valid = false;\n        return true;\n    }\n\n    function checkIfCorporateValid(uint id) public view activeContract returns (bool){\n        require(corporates[id].corpAddress != address(0), 'Not a valid corporate');\n        return corporates[id].valid;\n\n    }\n    \n    modifier permissioned {\n        require(msg.sender == owner || msg.sender == address(admin), \"Only the owner/admin can access this function\");\n        _;\n    }\n\n    modifier activeContract{\n        require(active == true, \"Contract no longer active\");\n        _;\n    }\n}\n\ncontract Corporate {\n    address public creator_; // creator of the contract\n    address public owner; // owner of the contract i.e the corporate\n    Admin public admin;\n    uint public corporate_id;\n    string public corporate_name_; // name of the contract\n    mapping(address => sub) public subsidiaries; // a mapping of addresses to the sub struct.\n    address[] public subs; // could make this into a struct so the id can be found easily.\n    Whitelist public whitelist; //whitelist associated with the corporate\n    bool valid; //checks if the contract is valid \n    \n    struct sub {\n        address subAddress;\n        uint id;\n        bool valid;\n    }\n\n\n    // allows for an owner i.e. corporate to be passed into the constructor \n    constructor(address owner_, Admin admin_, string memory name){\n        owner = owner_;\n        admin = admin_;\n        creator_ = msg.sender;\n        corporate_name_ = name; \n        valid = true;    \n    }\n\n    // This function is used to create a Subsidiary branch of the Corporate representing a store\n    function createSub(uint id) public  permissioned validContract returns(address){\n        // if set to default address the contract does not yet exist \n        require(subs[id] == address(0));\n        Subsidiary newSub = new Subsidiary(this);\n        subs.push(address(newSub)); // add new sub to subsidiary array \n        subsidiaries[address(newSub)] = sub(address(newSub), id, true); // add new sub to mapping\n        return address(newSub);\n    }\n\n    // returns the subsidiary struct\n    function getSubContract(uint id) public view validContract returns(address)  {\n        return subs[id];\n    }\n\n    function checkIfSubsidiaryValid(address toCheck) public view validContract returns(bool){\n        require(subsidiaries[toCheck].subAddress != address(0), \"Not a subsidiary address\");\n        return subsidiaries[toCheck].valid;\n    }\n\n    // updates the whiteList \n    function updateWhitelist(Whitelist whitelist_) public permissioned validContract {\n        require(whitelist_.owner() == owner || whitelist.owner() == creator_, \"Whitelist not created by known party\");\n        whitelist = whitelist_;\n    }\n\n    //disable the Corporate\n    function disableCorporate() public permissioned validContract returns(bool){\n        valid = false;\n        return valid;\n    }\n\n    modifier permissioned {\n        require(msg.sender == owner || msg.sender == creator_);\n        _;\n    }\n\n    modifier validContract {\n        require(valid == true);\n        _;\n    }\n}\n\n\n\n// This contract represent a Subsidiary branch of a corporate \ncontract Subsidiary {\n    Corporate public parent_; // Corporate Contract\n    uint amount; //Balanace\n    mapping(address => bool) private permissionedAddress; //provides an array of addresses the Sub can withdraw funds to\n    event ValueReceived(address user, uint amount);\n\n\n    struct transaction{\n        uint id; \n        address receiver_id;\n        uint amount;\n    }\n\n    // transaction id to person id\n    mapping(uint => transaction) transactions; // List of transactions @DEV: need to provide rec address and amount (maybe through struct)\n    uint numOfTransactions;\n\n    constructor(Corporate corp) {\n        parent_ = corp;\n        amount = 0;\n    }\n\n    // need to make sure no possibility for double spend\n    // Will reset to zero and prevent withdrawl whilst the send transaction is processed.\n    function getTake() public payable accountsAccess returns(bool)  {\n        uint prevAmount = amount;\n        amount = 0;\n        return payable(address(parent_)).send(prevAmount); // need to write a fallback function if this fails.\n    }\n\n    // Oracle end point.\n    // reassess this function as it always returns true.\n    function insertTransaction(uint transID, address person_id, uint tx_amount) restricted public returns(bool) {\n        require(person_id.balance >= amount, \"The Receiver contract does not have sufficient balance for this transaction\"); \n        transactions[transID] = transaction(transID, person_id, tx_amount);\n        return true;\n    }\n\n    // provides functionality to receive funds\n    receive() external payable{\n        emit ValueReceived(msg.sender, msg.value);\n    }\n    \n    modifier restricted {\n        require(msg.sender == address(parent_) || permissionedAddress[msg.sender] == true);\n        _;\n    }\n\n    modifier accountsAccess {\n        require(msg.sender == address(parent_));\n        _;\n    }\n}",
  "sourcePath": "/Users/dylan/Library/Mobile Documents/com~apple~CloudDocs/Developer/UNSW/COMP6452_Blockchain_Architecture/COMP6452-HelpChain/contracts/CorporateFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/CorporateFactory.sol",
    "exportedSymbols": {
      "Admin": [
        134
      ],
      "Corporate": [
        573
      ],
      "CorporateFactory": [
        333
      ],
      "Subsidiary": [
        725
      ],
      "Whitelist": [
        1425
      ]
    },
    "id": 726,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 136,
>>>>>>> main
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:1"
      },
      {
        "absolutePath": "project:/contracts/Whitelist.sol",
        "file": "./Whitelist.sol",
<<<<<<< HEAD
        "id": 113,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 658,
        "sourceUnit": 1299,
=======
        "id": 137,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 726,
        "sourceUnit": 1426,
>>>>>>> main
        "src": "33:25:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
<<<<<<< HEAD
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          516
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 286,
        "linearizedBaseContracts": [
          286
        ],
        "name": "CorporateFactory",
        "nameLocation": "70:16:1",
=======
        "absolutePath": "project:/contracts/Admin.sol",
        "file": "./Admin.sol",
        "id": 138,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 726,
        "sourceUnit": 135,
        "src": "59:21:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          573
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 333,
        "linearizedBaseContracts": [
          333
        ],
        "name": "CorporateFactory",
        "nameLocation": "92:16:1",
>>>>>>> main
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
<<<<<<< HEAD
            "id": 115,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "109:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 286,
            "src": "94:20:1",
=======
            "id": 140,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "131:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 333,
            "src": "116:20:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 114,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "94:7:1",
=======
              "id": 139,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "116:7:1",
>>>>>>> main
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "functionSelector": "68a0b4e7",
            "id": 120,
            "mutability": "mutable",
            "name": "corporates",
            "nameLocation": "172:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 286,
            "src": "138:44:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$132_storage_$",
              "typeString": "mapping(uint256 => struct CorporateFactory.corporate)"
            },
            "typeName": {
              "id": 119,
              "keyType": {
                "id": 116,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "146:4:1",
=======
            "functionSelector": "f851a440",
            "id": 143,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "173:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 333,
            "src": "160:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Admin_$134",
              "typeString": "contract Admin"
            },
            "typeName": {
              "id": 142,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 141,
                "name": "Admin",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 134,
                "src": "160:5:1"
              },
              "referencedDeclaration": 134,
              "src": "160:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Admin_$134",
                "typeString": "contract Admin"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "68a0b4e7",
            "id": 148,
            "mutability": "mutable",
            "name": "corporates",
            "nameLocation": "218:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 333,
            "src": "184:44:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$160_storage_$",
              "typeString": "mapping(uint256 => struct CorporateFactory.corporate)"
            },
            "typeName": {
              "id": 147,
              "keyType": {
                "id": 144,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "192:4:1",
>>>>>>> main
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "138:26:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$132_storage_$",
                "typeString": "mapping(uint256 => struct CorporateFactory.corporate)"
              },
              "valueType": {
                "id": 118,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 117,
                  "name": "corporate",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 132,
                  "src": "154:9:1"
                },
                "referencedDeclaration": 132,
                "src": "154:9:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_corporate_$132_storage_ptr",
=======
              "src": "184:26:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$160_storage_$",
                "typeString": "mapping(uint256 => struct CorporateFactory.corporate)"
              },
              "valueType": {
                "id": 146,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 145,
                  "name": "corporate",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 160,
                  "src": "200:9:1"
                },
                "referencedDeclaration": 160,
                "src": "200:9:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_corporate_$160_storage_ptr",
>>>>>>> main
                  "typeString": "struct CorporateFactory.corporate"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 122,
            "mutability": "mutable",
            "name": "numCorps",
            "nameLocation": "193:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 286,
            "src": "188:13:1",
=======
            "id": 150,
            "mutability": "mutable",
            "name": "numCorps",
            "nameLocation": "239:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 333,
            "src": "234:13:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 121,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "188:4:1",
=======
              "id": 149,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "234:4:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 125,
            "mutability": "mutable",
            "name": "active",
            "nameLocation": "266:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 286,
            "src": "261:18:1",
=======
            "id": 153,
            "mutability": "mutable",
            "name": "active",
            "nameLocation": "312:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 333,
            "src": "307:18:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 123,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "261:4:1",
=======
              "id": 151,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "307:4:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
<<<<<<< HEAD
              "id": 124,
=======
              "id": 152,
>>>>>>> main
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
<<<<<<< HEAD
              "src": "275:4:1",
=======
              "src": "321:4:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "CorporateFactory.corporate",
<<<<<<< HEAD
            "id": 132,
            "members": [
              {
                "constant": false,
                "id": 127,
                "mutability": "mutable",
                "name": "corpAddress",
                "nameLocation": "321:11:1",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "313:19:1",
=======
            "id": 160,
            "members": [
              {
                "constant": false,
                "id": 155,
                "mutability": "mutable",
                "name": "corpAddress",
                "nameLocation": "367:11:1",
                "nodeType": "VariableDeclaration",
                "scope": 160,
                "src": "359:19:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 126,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "313:7:1",
=======
                  "id": 154,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "359:7:1",
>>>>>>> main
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 129,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "347:2:1",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "342:7:1",
=======
                "id": 157,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "393:2:1",
                "nodeType": "VariableDeclaration",
                "scope": 160,
                "src": "388:7:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 128,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "342:4:1",
=======
                  "id": 156,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "388:4:1",
>>>>>>> main
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 131,
                "mutability": "mutable",
                "name": "valid",
                "nameLocation": "364:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "359:10:1",
=======
                "id": 159,
                "mutability": "mutable",
                "name": "valid",
                "nameLocation": "410:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 160,
                "src": "405:10:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 130,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "359:4:1",
=======
                  "id": 158,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "405:4:1",
>>>>>>> main
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "corporate",
<<<<<<< HEAD
            "nameLocation": "293:9:1",
            "nodeType": "StructDefinition",
            "scope": 286,
            "src": "286:90:1",
=======
            "nameLocation": "339:9:1",
            "nodeType": "StructDefinition",
            "scope": 333,
            "src": "332:90:1",
>>>>>>> main
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 140,
              "nodeType": "Block",
              "src": "396:35:1",
              "statements": [
                {
                  "expression": {
                    "id": 138,
=======
              "id": 175,
              "nodeType": "Block",
              "src": "454:59:1",
              "statements": [
                {
                  "expression": {
                    "id": 169,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 135,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "406:5:1",
=======
                      "id": 166,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 140,
                      "src": "464:5:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
<<<<<<< HEAD
                        "id": 136,
=======
                        "id": 167,
>>>>>>> main
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                        "src": "414:3:1",
=======
                        "src": "472:3:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
<<<<<<< HEAD
                      "id": 137,
=======
                      "id": 168,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "src": "414:10:1",
=======
                      "src": "472:10:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "src": "406:18:1",
=======
                    "src": "464:18:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "406:18:1"
                }
              ]
            },
            "id": 141,
=======
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "464:18:1"
                },
                {
                  "expression": {
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 171,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "492:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Admin_$134",
                        "typeString": "contract Admin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 172,
                      "name": "admin_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
                      "src": "500:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Admin_$134",
                        "typeString": "contract Admin"
                      }
                    },
                    "src": "492:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Admin_$134",
                      "typeString": "contract Admin"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "492:14:1"
                }
              ]
            },
            "id": 176,
>>>>>>> main
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "393:2:1"
            },
            "returnParameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "396:0:1"
            },
            "scope": 286,
            "src": "382:49:1",
=======
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "admin_",
                  "nameLocation": "446:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "440:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Admin_$134",
                    "typeString": "contract Admin"
                  },
                  "typeName": {
                    "id": 162,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 161,
                      "name": "Admin",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 134,
                      "src": "440:5:1"
                    },
                    "referencedDeclaration": 134,
                    "src": "440:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Admin_$134",
                      "typeString": "contract Admin"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "439:14:1"
            },
            "returnParameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "454:0:1"
            },
            "scope": 333,
            "src": "428:85:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 181,
              "nodeType": "Block",
              "src": "530:186:1",
              "statements": [
                {
                  "assignments": [
                    154
=======
              "id": 220,
              "nodeType": "Block",
              "src": "615:204:1",
              "statements": [
                {
                  "assignments": [
                    189
>>>>>>> main
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 154,
                      "mutability": "mutable",
                      "name": "newCorp",
                      "nameLocation": "550:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 181,
                      "src": "540:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Corporate_$516",
                        "typeString": "contract Corporate"
                      },
                      "typeName": {
                        "id": 153,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 152,
                          "name": "Corporate",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 516,
                          "src": "540:9:1"
                        },
                        "referencedDeclaration": 516,
                        "src": "540:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Corporate_$516",
=======
                      "id": 189,
                      "mutability": "mutable",
                      "name": "newCorp",
                      "nameLocation": "635:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 220,
                      "src": "625:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Corporate_$573",
                        "typeString": "contract Corporate"
                      },
                      "typeName": {
                        "id": 188,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 187,
                          "name": "Corporate",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 573,
                          "src": "625:9:1"
                        },
                        "referencedDeclaration": 573,
                        "src": "625:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Corporate_$573",
>>>>>>> main
                          "typeString": "contract Corporate"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 161,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 158,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "574:5:1",
=======
                  "id": 197,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 193,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "659:5:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 159,
                        "name": "corpName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "580:8:1",
=======
                        "id": 194,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "665:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Admin_$134",
                          "typeString": "contract Admin"
                        }
                      },
                      {
                        "id": 195,
                        "name": "corpName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "671:8:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
<<<<<<< HEAD
=======
                          "typeIdentifier": "t_contract$_Admin_$134",
                          "typeString": "contract Admin"
                        },
                        {
>>>>>>> main
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
<<<<<<< HEAD
                      "id": 157,
=======
                      "id": 192,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
<<<<<<< HEAD
                      "src": "560:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_Corporate_$516_$",
                        "typeString": "function (address,string memory) returns (contract Corporate)"
                      },
                      "typeName": {
                        "id": 156,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 155,
                          "name": "Corporate",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 516,
                          "src": "564:9:1"
                        },
                        "referencedDeclaration": 516,
                        "src": "564:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Corporate_$516",
=======
                      "src": "645:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_contract$_Admin_$134_$_t_string_memory_ptr_$returns$_t_contract$_Corporate_$573_$",
                        "typeString": "function (address,contract Admin,string memory) returns (contract Corporate)"
                      },
                      "typeName": {
                        "id": 191,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 190,
                          "name": "Corporate",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 573,
                          "src": "649:9:1"
                        },
                        "referencedDeclaration": 573,
                        "src": "649:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Corporate_$573",
>>>>>>> main
                          "typeString": "contract Corporate"
                        }
                      }
                    },
<<<<<<< HEAD
                    "id": 160,
=======
                    "id": 196,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "560:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Corporate_$516",
=======
                    "src": "645:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Corporate_$573",
>>>>>>> main
                      "typeString": "contract Corporate"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "540:49:1"
                },
                {
                  "expression": {
                    "id": 173,
=======
                  "src": "625:55:1"
                },
                {
                  "expression": {
                    "id": 209,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 162,
                        "name": "corporates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "599:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$132_storage_$",
                          "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                        }
                      },
                      "id": 164,
                      "indexExpression": {
                        "id": 163,
                        "name": "numCorps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "610:8:1",
=======
                        "id": 198,
                        "name": "corporates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "690:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$160_storage_$",
                          "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                        }
                      },
                      "id": 200,
                      "indexExpression": {
                        "id": 199,
                        "name": "numCorps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150,
                        "src": "701:8:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "599:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$132_storage",
=======
                      "src": "690:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$160_storage",
>>>>>>> main
                        "typeString": "struct CorporateFactory.corporate storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 168,
                              "name": "newCorp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 154,
                              "src": "640:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Corporate_$516",
=======
                              "id": 204,
                              "name": "newCorp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 189,
                              "src": "731:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Corporate_$573",
>>>>>>> main
                                "typeString": "contract Corporate"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
<<<<<<< HEAD
                                "typeIdentifier": "t_contract$_Corporate_$516",
                                "typeString": "contract Corporate"
                              }
                            ],
                            "id": 167,
=======
                                "typeIdentifier": "t_contract$_Corporate_$573",
                                "typeString": "contract Corporate"
                              }
                            ],
                            "id": 203,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "632:7:1",
=======
                            "src": "723:7:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 166,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "632:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 169,
=======
                              "id": 202,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "723:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 205,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "632:16:1",
=======
                          "src": "723:16:1",
>>>>>>> main
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
<<<<<<< HEAD
                          "id": 170,
                          "name": "numCorps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122,
                          "src": "650:8:1",
=======
                          "id": 206,
                          "name": "numCorps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 150,
                          "src": "741:8:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
<<<<<<< HEAD
                          "id": 171,
=======
                          "id": 207,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "660:4:1",
=======
                          "src": "751:4:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
<<<<<<< HEAD
                        "id": 165,
                        "name": "corporate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "622:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_corporate_$132_storage_ptr_$",
                          "typeString": "type(struct CorporateFactory.corporate storage pointer)"
                        }
                      },
                      "id": 172,
=======
                        "id": 201,
                        "name": "corporate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "713:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_corporate_$160_storage_ptr_$",
                          "typeString": "type(struct CorporateFactory.corporate storage pointer)"
                        }
                      },
                      "id": 208,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "622:43:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$132_memory_ptr",
                        "typeString": "struct CorporateFactory.corporate memory"
                      }
                    },
                    "src": "599:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_corporate_$132_storage",
                      "typeString": "struct CorporateFactory.corporate storage ref"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "599:66:1"
                },
                {
                  "expression": {
                    "id": 177,
=======
                      "src": "713:43:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$160_memory_ptr",
                        "typeString": "struct CorporateFactory.corporate memory"
                      }
                    },
                    "src": "690:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_corporate_$160_storage",
                      "typeString": "struct CorporateFactory.corporate storage ref"
                    }
                  },
                  "id": 210,
                  "nodeType": "ExpressionStatement",
                  "src": "690:66:1"
                },
                {
                  "expression": {
                    "id": 213,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 175,
                      "name": "numCorps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122,
                      "src": "675:8:1",
=======
                      "id": 211,
                      "name": "numCorps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "766:8:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
<<<<<<< HEAD
                      "id": 176,
=======
                      "id": 212,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "687:1:1",
=======
                      "src": "778:1:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
<<<<<<< HEAD
                    "src": "675:13:1",
=======
                    "src": "766:13:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "675:13:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "705:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 151,
                  "id": 180,
                  "nodeType": "Return",
                  "src": "698:11:1"
=======
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "766:13:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 217,
                        "name": "newCorp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 189,
                        "src": "804:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Corporate_$573",
                          "typeString": "contract Corporate"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Corporate_$573",
                          "typeString": "contract Corporate"
                        }
                      ],
                      "id": 216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "796:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 215,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "796:7:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "796:16:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 186,
                  "id": 219,
                  "nodeType": "Return",
                  "src": "789:23:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "a5102b37",
<<<<<<< HEAD
            "id": 182,
=======
            "id": 221,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 146,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 145,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 274,
                  "src": "489:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "489:12:1"
              },
              {
                "id": 148,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 147,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 285,
                  "src": "502:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "502:14:1"
              }
            ],
            "name": "createCorp",
            "nameLocation": "446:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 144,
=======
                "id": 181,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 180,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 321,
                  "src": "571:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "571:12:1"
              },
              {
                "id": 183,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 182,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 332,
                  "src": "584:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "584:14:1"
              }
            ],
            "name": "createCorp",
            "nameLocation": "528:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 179,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 143,
                  "mutability": "mutable",
                  "name": "corpName",
                  "nameLocation": "471:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 182,
                  "src": "457:22:1",
=======
                  "id": 178,
                  "mutability": "mutable",
                  "name": "corpName",
                  "nameLocation": "553:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "539:22:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 142,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "457:6:1",
=======
                    "id": 177,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "539:6:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "456:24:1"
            },
            "returnParameters": {
              "id": 151,
=======
              "src": "538:24:1"
            },
            "returnParameters": {
              "id": 186,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 150,
=======
                  "id": 185,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 182,
                  "src": "525:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "525:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
=======
                  "scope": 221,
                  "src": "607:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "607:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
>>>>>>> main
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "524:6:1"
            },
            "scope": 286,
            "src": "437:279:1",
=======
              "src": "606:9:1"
            },
            "scope": 333,
            "src": "519:300:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 198,
              "nodeType": "Block",
              "src": "811:50:1",
=======
              "id": 235,
              "nodeType": "Block",
              "src": "901:50:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 193,
                        "name": "corporates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "828:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$132_storage_$",
                          "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                        }
                      },
                      "id": 195,
                      "indexExpression": {
                        "id": 194,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 184,
                        "src": "839:2:1",
=======
                        "id": 230,
                        "name": "corporates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "918:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$160_storage_$",
                          "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                        }
                      },
                      "id": 232,
                      "indexExpression": {
                        "id": 231,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "929:2:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "828:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$132_storage",
                        "typeString": "struct CorporateFactory.corporate storage ref"
                      }
                    },
                    "id": 196,
=======
                      "src": "918:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$160_storage",
                        "typeString": "struct CorporateFactory.corporate storage ref"
                      }
                    },
                    "id": 233,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "corpAddress",
                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                    "referencedDeclaration": 127,
                    "src": "828:26:1",
=======
                    "referencedDeclaration": 155,
                    "src": "918:26:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 192,
                  "id": 197,
                  "nodeType": "Return",
                  "src": "821:33:1"
=======
                  "functionReturnParameters": 229,
                  "id": 234,
                  "nodeType": "Return",
                  "src": "911:33:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "010d6663",
<<<<<<< HEAD
            "id": 199,
=======
            "id": 236,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 187,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 186,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 274,
                  "src": "765:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "765:12:1"
              },
              {
                "id": 189,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 188,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 285,
                  "src": "778:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "778:14:1"
              }
            ],
            "name": "getCorporate",
            "nameLocation": "731:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 185,
=======
                "id": 226,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 225,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 332,
                  "src": "868:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "868:14:1"
              }
            ],
            "name": "getCorporate",
            "nameLocation": "834:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 224,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 184,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "749:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "744:7:1",
=======
                  "id": 223,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "852:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "847:7:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 183,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "744:4:1",
=======
                    "id": 222,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "847:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "743:9:1"
            },
            "returnParameters": {
              "id": 192,
=======
              "src": "846:9:1"
            },
            "returnParameters": {
              "id": 229,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 191,
=======
                  "id": 228,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 199,
                  "src": "801:7:1",
=======
                  "scope": 236,
                  "src": "891:7:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "801:7:1",
=======
                    "id": 227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "891:7:1",
>>>>>>> main
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "800:9:1"
            },
            "scope": 286,
            "src": "722:139:1",
=======
              "src": "890:9:1"
            },
            "scope": 333,
            "src": "825:126:1",
>>>>>>> main
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 214,
              "nodeType": "Block",
              "src": "937:57:1",
              "statements": [
                {
                  "expression": {
                    "id": 209,
=======
              "id": 251,
              "nodeType": "Block",
              "src": "1027:57:1",
              "statements": [
                {
                  "expression": {
                    "id": 246,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 206,
                      "name": "active",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 125,
                      "src": "947:6:1",
=======
                      "id": 243,
                      "name": "active",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153,
                      "src": "1037:6:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 208,
=======
                      "id": 245,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
<<<<<<< HEAD
                      "src": "956:7:1",
                      "subExpression": {
                        "id": 207,
                        "name": "active",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "957:6:1",
=======
                      "src": "1046:7:1",
                      "subExpression": {
                        "id": 244,
                        "name": "active",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "1047:6:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
<<<<<<< HEAD
                    "src": "947:16:1",
=======
                    "src": "1037:16:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 210,
                  "nodeType": "ExpressionStatement",
                  "src": "947:16:1"
=======
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "1037:16:1"
>>>>>>> main
                },
                {
                  "expression": {
                    "components": [
                      {
<<<<<<< HEAD
                        "id": 211,
                        "name": "active",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "980:6:1",
=======
                        "id": 248,
                        "name": "active",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "1070:6:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
<<<<<<< HEAD
                    "id": 212,
=======
                    "id": 249,
>>>>>>> main
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
<<<<<<< HEAD
                    "src": "979:8:1",
=======
                    "src": "1069:8:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 205,
                  "id": 213,
                  "nodeType": "Return",
                  "src": "973:14:1"
=======
                  "functionReturnParameters": 242,
                  "id": 250,
                  "nodeType": "Return",
                  "src": "1063:14:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "4aa2f240",
<<<<<<< HEAD
            "id": 215,
=======
            "id": 252,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 202,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 201,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 274,
                  "src": "910:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "910:12:1"
              }
            ],
            "name": "toggleContractActivation",
            "nameLocation": "876:24:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "900:2:1"
            },
            "returnParameters": {
              "id": 205,
=======
                "id": 239,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 238,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 321,
                  "src": "1000:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1000:12:1"
              }
            ],
            "name": "toggleContractActivation",
            "nameLocation": "966:24:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "990:2:1"
            },
            "returnParameters": {
              "id": 242,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 204,
=======
                  "id": 241,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 215,
                  "src": "932:4:1",
=======
                  "scope": 252,
                  "src": "1022:4:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 203,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "932:4:1",
=======
                    "id": 240,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1022:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "931:6:1"
            },
            "scope": 286,
            "src": "867:127:1",
=======
              "src": "1021:6:1"
            },
            "scope": 333,
            "src": "957:127:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 233,
              "nodeType": "Block",
              "src": "1084:45:1",
              "statements": [
                {
                  "expression": {
                    "id": 231,
=======
              "id": 272,
              "nodeType": "Block",
              "src": "1174:66:1",
              "statements": [
                {
                  "expression": {
                    "id": 268,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
<<<<<<< HEAD
                          "id": 226,
                          "name": "corporates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120,
                          "src": "1094:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$132_storage_$",
                            "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                          }
                        },
                        "id": 228,
                        "indexExpression": {
                          "id": 227,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 217,
                          "src": "1105:2:1",
=======
                          "id": 263,
                          "name": "corporates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 148,
                          "src": "1184:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$160_storage_$",
                            "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                          }
                        },
                        "id": 265,
                        "indexExpression": {
                          "id": 264,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 254,
                          "src": "1195:2:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                        "src": "1094:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_corporate_$132_storage",
                          "typeString": "struct CorporateFactory.corporate storage ref"
                        }
                      },
                      "id": 229,
=======
                        "src": "1184:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_corporate_$160_storage",
                          "typeString": "struct CorporateFactory.corporate storage ref"
                        }
                      },
                      "id": 266,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "valid",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 131,
                      "src": "1094:20:1",
=======
                      "referencedDeclaration": 159,
                      "src": "1184:20:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
<<<<<<< HEAD
                      "id": 230,
=======
                      "id": 267,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "1117:5:1",
=======
                      "src": "1207:5:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
<<<<<<< HEAD
                    "src": "1094:28:1",
=======
                    "src": "1184:28:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "1094:28:1"
=======
                  "id": 269,
                  "nodeType": "ExpressionStatement",
                  "src": "1184:28:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1229:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 262,
                  "id": 271,
                  "nodeType": "Return",
                  "src": "1222:11:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "1f2e4f06",
<<<<<<< HEAD
            "id": 234,
=======
            "id": 273,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 220,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 219,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 274,
                  "src": "1042:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1042:12:1"
              },
              {
                "id": 222,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 221,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 285,
                  "src": "1055:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1055:14:1"
              }
            ],
            "name": "disableCorporate",
            "nameLocation": "1009:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 218,
=======
                "id": 257,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 256,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 321,
                  "src": "1132:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1132:12:1"
              },
              {
                "id": 259,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 258,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 332,
                  "src": "1145:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1145:14:1"
              }
            ],
            "name": "disableCorporate",
            "nameLocation": "1099:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 255,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 217,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1031:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "1026:7:1",
=======
                  "id": 254,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1121:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "1116:7:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 216,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1026:4:1",
=======
                    "id": 253,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1116:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1025:9:1"
            },
            "returnParameters": {
              "id": 225,
=======
              "src": "1115:9:1"
            },
            "returnParameters": {
              "id": 262,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 224,
=======
                  "id": 261,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 234,
                  "src": "1079:4:1",
=======
                  "scope": 273,
                  "src": "1169:4:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 223,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1079:4:1",
=======
                    "id": 260,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1169:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1078:6:1"
            },
            "scope": 286,
            "src": "1000:129:1",
=======
              "src": "1168:6:1"
            },
            "scope": 333,
            "src": "1090:150:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 261,
              "nodeType": "Block",
              "src": "1216:129:1",
=======
              "id": 300,
              "nodeType": "Block",
              "src": "1327:129:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 252,
=======
                        "id": 291,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
<<<<<<< HEAD
                              "id": 244,
                              "name": "corporates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 120,
                              "src": "1234:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$132_storage_$",
                                "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                              }
                            },
                            "id": 246,
                            "indexExpression": {
                              "id": 245,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 236,
                              "src": "1245:2:1",
=======
                              "id": 283,
                              "name": "corporates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 148,
                              "src": "1345:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$160_storage_$",
                                "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                              }
                            },
                            "id": 285,
                            "indexExpression": {
                              "id": 284,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 275,
                              "src": "1356:2:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "1234:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_corporate_$132_storage",
                              "typeString": "struct CorporateFactory.corporate storage ref"
                            }
                          },
                          "id": 247,
=======
                            "src": "1345:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_corporate_$160_storage",
                              "typeString": "struct CorporateFactory.corporate storage ref"
                            }
                          },
                          "id": 286,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "corpAddress",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 127,
                          "src": "1234:26:1",
=======
                          "referencedDeclaration": 155,
                          "src": "1345:26:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
<<<<<<< HEAD
                              "id": 250,
=======
                              "id": 289,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "1272:1:1",
=======
                              "src": "1383:1:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
<<<<<<< HEAD
                            "id": 249,
=======
                            "id": 288,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "1264:7:1",
=======
                            "src": "1375:7:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 248,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1264:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 251,
=======
                              "id": 287,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1375:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 290,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "1264:10:1",
=======
                          "src": "1375:10:1",
>>>>>>> main
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "1234:40:1",
=======
                        "src": "1345:40:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420612076616c696420636f72706f72617465",
<<<<<<< HEAD
                        "id": 253,
=======
                        "id": 292,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "1276:23:1",
=======
                        "src": "1387:23:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f6bc05d6cfec2f3d11cc140380ae93e4894c4ff78d29d480116a9b54f690ed81",
                          "typeString": "literal_string \"Not a valid corporate\""
                        },
                        "value": "Not a valid corporate"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f6bc05d6cfec2f3d11cc140380ae93e4894c4ff78d29d480116a9b54f690ed81",
                          "typeString": "literal_string \"Not a valid corporate\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 243,
=======
                      "id": 282,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "1226:7:1",
=======
                      "src": "1337:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 254,
=======
                    "id": 293,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1226:74:1",
=======
                    "src": "1337:74:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 255,
                  "nodeType": "ExpressionStatement",
                  "src": "1226:74:1"
=======
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "1337:74:1"
>>>>>>> main
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 256,
                        "name": "corporates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "1317:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$132_storage_$",
                          "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                        }
                      },
                      "id": 258,
                      "indexExpression": {
                        "id": 257,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "1328:2:1",
=======
                        "id": 295,
                        "name": "corporates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "1428:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$160_storage_$",
                          "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                        }
                      },
                      "id": 297,
                      "indexExpression": {
                        "id": 296,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "1439:2:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "1317:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$132_storage",
                        "typeString": "struct CorporateFactory.corporate storage ref"
                      }
                    },
                    "id": 259,
=======
                      "src": "1428:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$160_storage",
                        "typeString": "struct CorporateFactory.corporate storage ref"
                      }
                    },
                    "id": 298,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "valid",
                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                    "referencedDeclaration": 131,
                    "src": "1317:20:1",
=======
                    "referencedDeclaration": 159,
                    "src": "1428:20:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 242,
                  "id": 260,
                  "nodeType": "Return",
                  "src": "1310:27:1"
=======
                  "functionReturnParameters": 281,
                  "id": 299,
                  "nodeType": "Return",
                  "src": "1421:27:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "dad15402",
<<<<<<< HEAD
            "id": 262,
=======
            "id": 301,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 239,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 238,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 285,
                  "src": "1187:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1187:14:1"
              }
            ],
            "name": "checkIfCorporateValid",
            "nameLocation": "1144:21:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 237,
=======
                "id": 278,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 277,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 332,
                  "src": "1298:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1298:14:1"
              }
            ],
            "name": "checkIfCorporateValid",
            "nameLocation": "1255:21:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 276,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 236,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1171:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "1166:7:1",
=======
                  "id": 275,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1282:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 301,
                  "src": "1277:7:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 235,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1166:4:1",
=======
                    "id": 274,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1277:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1165:9:1"
            },
            "returnParameters": {
              "id": 242,
=======
              "src": "1276:9:1"
            },
            "returnParameters": {
              "id": 281,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 241,
=======
                  "id": 280,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 262,
                  "src": "1211:4:1",
=======
                  "scope": 301,
                  "src": "1322:4:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 240,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1211:4:1",
=======
                    "id": 279,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1322:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1210:6:1"
            },
            "scope": 286,
            "src": "1135:210:1",
=======
              "src": "1321:6:1"
            },
            "scope": 333,
            "src": "1246:210:1",
>>>>>>> main
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 273,
              "nodeType": "Block",
              "src": "1377:99:1",
=======
              "id": 320,
              "nodeType": "Block",
              "src": "1488:137:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
<<<<<<< HEAD
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 268,
=======
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 315,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "expression": {
                            "id": 265,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1395:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 266,
=======
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 307,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
<<<<<<< HEAD
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1395:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 267,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "1409:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1395:19:1",
=======
                          "leftExpression": {
                            "expression": {
                              "id": 304,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1506:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1506:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 306,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "1520:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1506:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 308,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1529:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 309,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1529:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 312,
                                "name": "admin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 143,
                                "src": "1551:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Admin_$134",
                                  "typeString": "contract Admin"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Admin_$134",
                                  "typeString": "contract Admin"
                                }
                              ],
                              "id": 311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1543:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 310,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1543:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1543:14:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1529:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1506:51:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
<<<<<<< HEAD
                        "hexValue": "4f6e6c7920746865206f776e65722063616e2061636365737320746869732066756e6374696f6e",
                        "id": 269,
=======
                        "hexValue": "4f6e6c7920746865206f776e65722f61646d696e2063616e2061636365737320746869732066756e6374696f6e",
                        "id": 316,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "1416:41:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d16f59b504098a079530c74a740fd9528074bf9303890ee5d92c6cda0f420382",
                          "typeString": "literal_string \"Only the owner can access this function\""
                        },
                        "value": "Only the owner can access this function"
=======
                        "src": "1559:47:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9117372dee0cc0d2de362cb86d76bf0d641de1fdff920d9111bc207da94e8744",
                          "typeString": "literal_string \"Only the owner/admin can access this function\""
                        },
                        "value": "Only the owner/admin can access this function"
>>>>>>> main
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_stringliteral_d16f59b504098a079530c74a740fd9528074bf9303890ee5d92c6cda0f420382",
                          "typeString": "literal_string \"Only the owner can access this function\""
                        }
                      ],
                      "id": 264,
=======
                          "typeIdentifier": "t_stringliteral_9117372dee0cc0d2de362cb86d76bf0d641de1fdff920d9111bc207da94e8744",
                          "typeString": "literal_string \"Only the owner/admin can access this function\""
                        }
                      ],
                      "id": 303,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "1387:7:1",
=======
                      "src": "1498:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 270,
=======
                    "id": 317,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1387:71:1",
=======
                    "src": "1498:109:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "1387:71:1"
                },
                {
                  "id": 272,
                  "nodeType": "PlaceholderStatement",
                  "src": "1468:1:1"
                }
              ]
            },
            "id": 274,
            "name": "permissioned",
            "nameLocation": "1364:12:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1377:0:1"
            },
            "src": "1355:121:1",
=======
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "1498:109:1"
                },
                {
                  "id": 319,
                  "nodeType": "PlaceholderStatement",
                  "src": "1617:1:1"
                }
              ]
            },
            "id": 321,
            "name": "permissioned",
            "nameLocation": "1475:12:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1488:0:1"
            },
            "src": "1466:159:1",
>>>>>>> main
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 284,
              "nodeType": "Block",
              "src": "1505:80:1",
=======
              "id": 331,
              "nodeType": "Block",
              "src": "1654:80:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
<<<<<<< HEAD
                        "id": 279,
=======
                        "id": 326,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 277,
                          "name": "active",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 125,
                          "src": "1523:6:1",
=======
                          "id": 324,
                          "name": "active",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153,
                          "src": "1672:6:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
<<<<<<< HEAD
                          "id": 278,
=======
                          "id": 325,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "1533:4:1",
=======
                          "src": "1682:4:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
<<<<<<< HEAD
                        "src": "1523:14:1",
=======
                        "src": "1672:14:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e7472616374206e6f206c6f6e67657220616374697665",
<<<<<<< HEAD
                        "id": 280,
=======
                        "id": 327,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "1539:27:1",
=======
                        "src": "1688:27:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f58632cc2fd82b679e2eb5e7970f18e723cc77db983190e019e39c32cbac431",
                          "typeString": "literal_string \"Contract no longer active\""
                        },
                        "value": "Contract no longer active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f58632cc2fd82b679e2eb5e7970f18e723cc77db983190e019e39c32cbac431",
                          "typeString": "literal_string \"Contract no longer active\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 276,
=======
                      "id": 323,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "1515:7:1",
=======
                      "src": "1664:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 281,
=======
                    "id": 328,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1515:52:1",
=======
                    "src": "1664:52:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "1515:52:1"
                },
                {
                  "id": 283,
                  "nodeType": "PlaceholderStatement",
                  "src": "1577:1:1"
                }
              ]
            },
            "id": 285,
            "name": "activeContract",
            "nameLocation": "1491:14:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1505:0:1"
            },
            "src": "1482:103:1",
=======
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "1664:52:1"
                },
                {
                  "id": 330,
                  "nodeType": "PlaceholderStatement",
                  "src": "1726:1:1"
                }
              ]
            },
            "id": 332,
            "name": "activeContract",
            "nameLocation": "1640:14:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1654:0:1"
            },
            "src": "1631:103:1",
>>>>>>> main
            "virtual": false,
            "visibility": "internal"
          }
        ],
<<<<<<< HEAD
        "scope": 658,
        "src": "61:1526:1",
=======
        "scope": 726,
        "src": "83:1653:1",
>>>>>>> main
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
<<<<<<< HEAD
          657
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 516,
        "linearizedBaseContracts": [
          516
        ],
        "name": "Corporate",
        "nameLocation": "1598:9:1",
=======
          725
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 573,
        "linearizedBaseContracts": [
          573
        ],
        "name": "Corporate",
        "nameLocation": "1747:9:1",
>>>>>>> main
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "89165e40",
<<<<<<< HEAD
            "id": 288,
            "mutability": "mutable",
            "name": "creator_",
            "nameLocation": "1629:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "1614:23:1",
=======
            "id": 335,
            "mutability": "mutable",
            "name": "creator_",
            "nameLocation": "1778:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "1763:23:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 287,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1614:7:1",
=======
              "id": 334,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1763:7:1",
>>>>>>> main
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
<<<<<<< HEAD
            "id": 290,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "1685:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "1670:20:1",
=======
            "id": 337,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "1834:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "1819:20:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 289,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1670:7:1",
=======
              "id": 336,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1819:7:1",
>>>>>>> main
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "functionSelector": "34929e9a",
            "id": 292,
            "mutability": "mutable",
            "name": "corporate_id",
            "nameLocation": "1751:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "1739:24:1",
=======
            "functionSelector": "f851a440",
            "id": 340,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "1901:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "1888:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Admin_$134",
              "typeString": "contract Admin"
            },
            "typeName": {
              "id": 339,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 338,
                "name": "Admin",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 134,
                "src": "1888:5:1"
              },
              "referencedDeclaration": 134,
              "src": "1888:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Admin_$134",
                "typeString": "contract Admin"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "34929e9a",
            "id": 342,
            "mutability": "mutable",
            "name": "corporate_id",
            "nameLocation": "1924:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "1912:24:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 291,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1739:4:1",
=======
              "id": 341,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1912:4:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8ba4d864",
<<<<<<< HEAD
            "id": 294,
            "mutability": "mutable",
            "name": "corporate_name_",
            "nameLocation": "1783:15:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "1769:29:1",
=======
            "id": 344,
            "mutability": "mutable",
            "name": "corporate_name_",
            "nameLocation": "1956:15:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "1942:29:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 293,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1769:6:1",
=======
              "id": 343,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1942:6:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "869080bf",
<<<<<<< HEAD
            "id": 299,
            "mutability": "mutable",
            "name": "subsidiaries",
            "nameLocation": "1859:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "1828:43:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$314_storage_$",
              "typeString": "mapping(address => struct Corporate.sub)"
            },
            "typeName": {
              "id": 298,
              "keyType": {
                "id": 295,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1836:7:1",
=======
            "id": 349,
            "mutability": "mutable",
            "name": "subsidiaries",
            "nameLocation": "2032:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "2001:43:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$364_storage_$",
              "typeString": "mapping(address => struct Corporate.sub)"
            },
            "typeName": {
              "id": 348,
              "keyType": {
                "id": 345,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2009:7:1",
>>>>>>> main
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "1828:23:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$314_storage_$",
                "typeString": "mapping(address => struct Corporate.sub)"
              },
              "valueType": {
                "id": 297,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 296,
                  "name": "sub",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 314,
                  "src": "1847:3:1"
                },
                "referencedDeclaration": 314,
                "src": "1847:3:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_sub_$314_storage_ptr",
=======
              "src": "2001:23:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$364_storage_$",
                "typeString": "mapping(address => struct Corporate.sub)"
              },
              "valueType": {
                "id": 347,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 346,
                  "name": "sub",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 364,
                  "src": "2020:3:1"
                },
                "referencedDeclaration": 364,
                "src": "2020:3:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_sub_$364_storage_ptr",
>>>>>>> main
                  "typeString": "struct Corporate.sub"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f8a64f9a",
<<<<<<< HEAD
            "id": 302,
            "mutability": "mutable",
            "name": "subs",
            "nameLocation": "1939:4:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "1922:21:1",
=======
            "id": 352,
            "mutability": "mutable",
            "name": "subs",
            "nameLocation": "2112:4:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "2095:21:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
<<<<<<< HEAD
                "id": 300,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1922:7:1",
=======
                "id": 350,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2095:7:1",
>>>>>>> main
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
<<<<<<< HEAD
              "id": 301,
              "nodeType": "ArrayTypeName",
              "src": "1922:9:1",
=======
              "id": 351,
              "nodeType": "ArrayTypeName",
              "src": "2095:9:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "93e59dc1",
<<<<<<< HEAD
            "id": 305,
            "mutability": "mutable",
            "name": "whitelist",
            "nameLocation": "2030:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "2013:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Whitelist_$1298",
              "typeString": "contract Whitelist"
            },
            "typeName": {
              "id": 304,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 303,
                "name": "Whitelist",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1298,
                "src": "2013:9:1"
              },
              "referencedDeclaration": 1298,
              "src": "2013:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Whitelist_$1298",
=======
            "id": 355,
            "mutability": "mutable",
            "name": "whitelist",
            "nameLocation": "2203:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "2186:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Whitelist_$1425",
              "typeString": "contract Whitelist"
            },
            "typeName": {
              "id": 354,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 353,
                "name": "Whitelist",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1425,
                "src": "2186:9:1"
              },
              "referencedDeclaration": 1425,
              "src": "2186:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Whitelist_$1425",
>>>>>>> main
                "typeString": "contract Whitelist"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 307,
            "mutability": "mutable",
            "name": "valid",
            "nameLocation": "2092:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "2087:10:1",
=======
            "id": 357,
            "mutability": "mutable",
            "name": "valid",
            "nameLocation": "2265:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "2260:10:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 306,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2087:4:1",
=======
              "id": 356,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2260:4:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Corporate.sub",
<<<<<<< HEAD
            "id": 314,
            "members": [
              {
                "constant": false,
                "id": 309,
                "mutability": "mutable",
                "name": "subAddress",
                "nameLocation": "2172:10:1",
                "nodeType": "VariableDeclaration",
                "scope": 314,
                "src": "2164:18:1",
=======
            "id": 364,
            "members": [
              {
                "constant": false,
                "id": 359,
                "mutability": "mutable",
                "name": "subAddress",
                "nameLocation": "2345:10:1",
                "nodeType": "VariableDeclaration",
                "scope": 364,
                "src": "2337:18:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 308,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2164:7:1",
=======
                  "id": 358,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2337:7:1",
>>>>>>> main
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 311,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "2197:2:1",
                "nodeType": "VariableDeclaration",
                "scope": 314,
                "src": "2192:7:1",
=======
                "id": 361,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "2370:2:1",
                "nodeType": "VariableDeclaration",
                "scope": 364,
                "src": "2365:7:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 310,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2192:4:1",
=======
                  "id": 360,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2365:4:1",
>>>>>>> main
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 313,
                "mutability": "mutable",
                "name": "valid",
                "nameLocation": "2214:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 314,
                "src": "2209:10:1",
=======
                "id": 363,
                "mutability": "mutable",
                "name": "valid",
                "nameLocation": "2387:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 364,
                "src": "2382:10:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 312,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2209:4:1",
=======
                  "id": 362,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2382:4:1",
>>>>>>> main
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "sub",
<<<<<<< HEAD
            "nameLocation": "2150:3:1",
            "nodeType": "StructDefinition",
            "scope": 516,
            "src": "2143:83:1",
=======
            "nameLocation": "2323:3:1",
            "nodeType": "StructDefinition",
            "scope": 573,
            "src": "2316:83:1",
>>>>>>> main
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 338,
              "nodeType": "Block",
              "src": "2357:121:1",
              "statements": [
                {
                  "expression": {
                    "id": 323,
=======
              "id": 395,
              "nodeType": "Block",
              "src": "2544:145:1",
              "statements": [
                {
                  "expression": {
                    "id": 376,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 321,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 290,
                      "src": "2367:5:1",
=======
                      "id": 374,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 337,
                      "src": "2554:5:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 322,
                      "name": "owner_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 316,
                      "src": "2375:6:1",
=======
                      "id": 375,
                      "name": "owner_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 366,
                      "src": "2562:6:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "src": "2367:14:1",
=======
                    "src": "2554:14:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "2367:14:1"
                },
                {
                  "expression": {
                    "id": 328,
=======
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "2554:14:1"
                },
                {
                  "expression": {
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 378,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 340,
                      "src": "2578:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Admin_$134",
                        "typeString": "contract Admin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 379,
                      "name": "admin_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 369,
                      "src": "2586:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Admin_$134",
                        "typeString": "contract Admin"
                      }
                    },
                    "src": "2578:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Admin_$134",
                      "typeString": "contract Admin"
                    }
                  },
                  "id": 381,
                  "nodeType": "ExpressionStatement",
                  "src": "2578:14:1"
                },
                {
                  "expression": {
                    "id": 385,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 325,
                      "name": "creator_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 288,
                      "src": "2391:8:1",
=======
                      "id": 382,
                      "name": "creator_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 335,
                      "src": "2602:8:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
<<<<<<< HEAD
                        "id": 326,
=======
                        "id": 383,
>>>>>>> main
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                        "src": "2402:3:1",
=======
                        "src": "2613:3:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
<<<<<<< HEAD
                      "id": 327,
=======
                      "id": 384,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "src": "2402:10:1",
=======
                      "src": "2613:10:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "src": "2391:21:1",
=======
                    "src": "2602:21:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "2391:21:1"
                },
                {
                  "expression": {
                    "id": 332,
=======
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "2602:21:1"
                },
                {
                  "expression": {
                    "id": 389,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 330,
                      "name": "corporate_name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 294,
                      "src": "2422:15:1",
=======
                      "id": 387,
                      "name": "corporate_name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 344,
                      "src": "2633:15:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 331,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 318,
                      "src": "2440:4:1",
=======
                      "id": 388,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 371,
                      "src": "2651:4:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "2422:22:1",
=======
                    "src": "2633:22:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
<<<<<<< HEAD
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "2422:22:1"
                },
                {
                  "expression": {
                    "id": 336,
=======
                  "id": 390,
                  "nodeType": "ExpressionStatement",
                  "src": "2633:22:1"
                },
                {
                  "expression": {
                    "id": 393,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 334,
                      "name": "valid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 307,
                      "src": "2455:5:1",
=======
                      "id": 391,
                      "name": "valid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 357,
                      "src": "2666:5:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
<<<<<<< HEAD
                      "id": 335,
=======
                      "id": 392,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "2463:4:1",
=======
                      "src": "2674:4:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
<<<<<<< HEAD
                    "src": "2455:12:1",
=======
                    "src": "2666:12:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "2455:12:1"
                }
              ]
            },
            "id": 339,
=======
                  "id": 394,
                  "nodeType": "ExpressionStatement",
                  "src": "2666:12:1"
                }
              ]
            },
            "id": 396,
>>>>>>> main
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 319,
=======
              "id": 372,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 316,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "2330:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 339,
                  "src": "2322:14:1",
=======
                  "id": 366,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "2503:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 396,
                  "src": "2495:14:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 315,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2322:7:1",
=======
                    "id": 365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2495:7:1",
>>>>>>> main
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 318,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "2352:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 339,
                  "src": "2338:18:1",
=======
                  "id": 369,
                  "mutability": "mutable",
                  "name": "admin_",
                  "nameLocation": "2517:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 396,
                  "src": "2511:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Admin_$134",
                    "typeString": "contract Admin"
                  },
                  "typeName": {
                    "id": 368,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 367,
                      "name": "Admin",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 134,
                      "src": "2511:5:1"
                    },
                    "referencedDeclaration": 134,
                    "src": "2511:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Admin_$134",
                      "typeString": "contract Admin"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 371,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "2539:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 396,
                  "src": "2525:18:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 317,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2338:6:1",
=======
                    "id": 370,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2525:6:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2321:36:1"
            },
            "returnParameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2357:0:1"
            },
            "scope": 516,
            "src": "2310:168:1",
=======
              "src": "2494:50:1"
            },
            "returnParameters": {
              "id": 373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2544:0:1"
            },
            "scope": 573,
            "src": "2483:206:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 400,
              "nodeType": "Block",
              "src": "2657:378:1",
=======
              "id": 457,
              "nodeType": "Block",
              "src": "2871:370:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 358,
=======
                        "id": 415,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "arguments": [
                            {
                              "id": 352,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 341,
                              "src": "2760:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 351,
                            "name": "getSubContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 417,
                            "src": "2745:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2745:18:1",
                          "tryCall": false,
=======
                          "baseExpression": {
                            "id": 408,
                            "name": "subs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 352,
                            "src": "2959:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 410,
                          "indexExpression": {
                            "id": 409,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 398,
                            "src": "2964:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2959:8:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
<<<<<<< HEAD
                        "operator": "!=",
=======
                        "operator": "==",
>>>>>>> main
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
<<<<<<< HEAD
                              "id": 356,
=======
                              "id": 413,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "2775:1:1",
=======
                              "src": "2979:1:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
<<<<<<< HEAD
                            "id": 355,
=======
                            "id": 412,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "2767:7:1",
=======
                            "src": "2971:7:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 354,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2767:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 357,
=======
                              "id": 411,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2971:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 414,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "2767:10:1",
=======
                          "src": "2971:10:1",
>>>>>>> main
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "2745:32:1",
=======
                        "src": "2959:22:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "id": 350,
=======
                      "id": 407,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "2737:7:1",
=======
                      "src": "2951:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 359,
=======
                    "id": 416,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2737:41:1",
=======
                    "src": "2951:31:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "2737:41:1"
                },
                {
                  "assignments": [
                    363
=======
                  "id": 417,
                  "nodeType": "ExpressionStatement",
                  "src": "2951:31:1"
                },
                {
                  "assignments": [
                    420
>>>>>>> main
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 363,
                      "mutability": "mutable",
                      "name": "newSub",
                      "nameLocation": "2799:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 400,
                      "src": "2788:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Subsidiary_$657",
                        "typeString": "contract Subsidiary"
                      },
                      "typeName": {
                        "id": 362,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 361,
                          "name": "Subsidiary",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 657,
                          "src": "2788:10:1"
                        },
                        "referencedDeclaration": 657,
                        "src": "2788:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Subsidiary_$657",
=======
                      "id": 420,
                      "mutability": "mutable",
                      "name": "newSub",
                      "nameLocation": "3003:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 457,
                      "src": "2992:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Subsidiary_$725",
                        "typeString": "contract Subsidiary"
                      },
                      "typeName": {
                        "id": 419,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 418,
                          "name": "Subsidiary",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 725,
                          "src": "2992:10:1"
                        },
                        "referencedDeclaration": 725,
                        "src": "2992:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Subsidiary_$725",
>>>>>>> main
                          "typeString": "contract Subsidiary"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 372,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 369,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2831:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Corporate_$516",
                              "typeString": "contract Corporate"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Corporate_$516",
                              "typeString": "contract Corporate"
                            }
                          ],
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2823:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 367,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2823:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2823:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
=======
                  "id": 426,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 424,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "3027:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Corporate_$573",
                          "typeString": "contract Corporate"
>>>>>>> main
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 366,
=======
                          "typeIdentifier": "t_contract$_Corporate_$573",
                          "typeString": "contract Corporate"
                        }
                      ],
                      "id": 423,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
<<<<<<< HEAD
                      "src": "2808:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Subsidiary_$657_$",
                        "typeString": "function (address) returns (contract Subsidiary)"
                      },
                      "typeName": {
                        "id": 365,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 364,
                          "name": "Subsidiary",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 657,
                          "src": "2812:10:1"
                        },
                        "referencedDeclaration": 657,
                        "src": "2812:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Subsidiary_$657",
=======
                      "src": "3012:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Corporate_$573_$returns$_t_contract$_Subsidiary_$725_$",
                        "typeString": "function (contract Corporate) returns (contract Subsidiary)"
                      },
                      "typeName": {
                        "id": 422,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 421,
                          "name": "Subsidiary",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 725,
                          "src": "3016:10:1"
                        },
                        "referencedDeclaration": 725,
                        "src": "3016:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Subsidiary_$725",
>>>>>>> main
                          "typeString": "contract Subsidiary"
                        }
                      }
                    },
<<<<<<< HEAD
                    "id": 371,
=======
                    "id": 425,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2808:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Subsidiary_$657",
=======
                    "src": "3012:20:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Subsidiary_$725",
>>>>>>> main
                      "typeString": "contract Subsidiary"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "2788:49:1"
=======
                  "src": "2992:40:1"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 378,
                            "name": "newSub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 363,
                            "src": "2865:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Subsidiary_$657",
=======
                            "id": 432,
                            "name": "newSub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 420,
                            "src": "3060:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Subsidiary_$725",
>>>>>>> main
                              "typeString": "contract Subsidiary"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
<<<<<<< HEAD
                              "typeIdentifier": "t_contract$_Subsidiary_$657",
                              "typeString": "contract Subsidiary"
                            }
                          ],
                          "id": 377,
=======
                              "typeIdentifier": "t_contract$_Subsidiary_$725",
                              "typeString": "contract Subsidiary"
                            }
                          ],
                          "id": 431,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "2857:7:1",
=======
                          "src": "3052:7:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 376,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2857:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 379,
=======
                            "id": 430,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3052:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 433,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "2857:15:1",
=======
                        "src": "3052:15:1",
>>>>>>> main
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 373,
                        "name": "subs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "2847:4:1",
=======
                        "id": 427,
                        "name": "subs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "3042:4:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
<<<<<<< HEAD
                      "id": 375,
=======
                      "id": 429,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "src": "2847:9:1",
=======
                      "src": "3042:9:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
<<<<<<< HEAD
                    "id": 380,
=======
                    "id": 434,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2847:26:1",
=======
                    "src": "3042:26:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 381,
                  "nodeType": "ExpressionStatement",
                  "src": "2847:26:1"
                },
                {
                  "expression": {
                    "id": 396,
=======
                  "id": 435,
                  "nodeType": "ExpressionStatement",
                  "src": "3042:26:1"
                },
                {
                  "expression": {
                    "id": 450,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 382,
                        "name": "subsidiaries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "2919:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$314_storage_$",
                          "typeString": "mapping(address => struct Corporate.sub storage ref)"
                        }
                      },
                      "id": 387,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 385,
                            "name": "newSub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 363,
                            "src": "2940:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Subsidiary_$657",
=======
                        "id": 436,
                        "name": "subsidiaries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 349,
                        "src": "3114:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$364_storage_$",
                          "typeString": "mapping(address => struct Corporate.sub storage ref)"
                        }
                      },
                      "id": 441,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 439,
                            "name": "newSub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 420,
                            "src": "3135:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Subsidiary_$725",
>>>>>>> main
                              "typeString": "contract Subsidiary"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
<<<<<<< HEAD
                              "typeIdentifier": "t_contract$_Subsidiary_$657",
                              "typeString": "contract Subsidiary"
                            }
                          ],
                          "id": 384,
=======
                              "typeIdentifier": "t_contract$_Subsidiary_$725",
                              "typeString": "contract Subsidiary"
                            }
                          ],
                          "id": 438,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "2932:7:1",
=======
                          "src": "3127:7:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 383,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2932:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 386,
=======
                            "id": 437,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3127:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 440,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "2932:15:1",
=======
                        "src": "3127:15:1",
>>>>>>> main
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "2919:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_sub_$314_storage",
=======
                      "src": "3114:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_sub_$364_storage",
>>>>>>> main
                        "typeString": "struct Corporate.sub storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 391,
                              "name": "newSub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 363,
                              "src": "2963:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Subsidiary_$657",
=======
                              "id": 445,
                              "name": "newSub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 420,
                              "src": "3158:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Subsidiary_$725",
>>>>>>> main
                                "typeString": "contract Subsidiary"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
<<<<<<< HEAD
                                "typeIdentifier": "t_contract$_Subsidiary_$657",
                                "typeString": "contract Subsidiary"
                              }
                            ],
                            "id": 390,
=======
                                "typeIdentifier": "t_contract$_Subsidiary_$725",
                                "typeString": "contract Subsidiary"
                              }
                            ],
                            "id": 444,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "2955:7:1",
=======
                            "src": "3150:7:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 389,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2955:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 392,
=======
                              "id": 443,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3150:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 446,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "2955:15:1",
=======
                          "src": "3150:15:1",
>>>>>>> main
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
<<<<<<< HEAD
                          "id": 393,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 341,
                          "src": "2972:2:1",
=======
                          "id": 447,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 398,
                          "src": "3167:2:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
<<<<<<< HEAD
                          "id": 394,
=======
                          "id": 448,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "2976:4:1",
=======
                          "src": "3171:4:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
<<<<<<< HEAD
                        "id": 388,
                        "name": "sub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 314,
                        "src": "2951:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_sub_$314_storage_ptr_$",
                          "typeString": "type(struct Corporate.sub storage pointer)"
                        }
                      },
                      "id": 395,
=======
                        "id": 442,
                        "name": "sub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 364,
                        "src": "3146:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_sub_$364_storage_ptr_$",
                          "typeString": "type(struct Corporate.sub storage pointer)"
                        }
                      },
                      "id": 449,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "2951:30:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_sub_$314_memory_ptr",
                        "typeString": "struct Corporate.sub memory"
                      }
                    },
                    "src": "2919:62:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_sub_$314_storage",
                      "typeString": "struct Corporate.sub storage ref"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "2919:62:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3024:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 349,
                  "id": 399,
                  "nodeType": "Return",
                  "src": "3017:11:1"
=======
                      "src": "3146:30:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_sub_$364_memory_ptr",
                        "typeString": "struct Corporate.sub memory"
                      }
                    },
                    "src": "3114:62:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_sub_$364_storage",
                      "typeString": "struct Corporate.sub storage ref"
                    }
                  },
                  "id": 451,
                  "nodeType": "ExpressionStatement",
                  "src": "3114:62:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 454,
                        "name": "newSub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 420,
                        "src": "3227:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Subsidiary_$725",
                          "typeString": "contract Subsidiary"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Subsidiary_$725",
                          "typeString": "contract Subsidiary"
                        }
                      ],
                      "id": 453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3219:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 452,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3219:7:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3219:15:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 406,
                  "id": 456,
                  "nodeType": "Return",
                  "src": "3212:22:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "805f4202",
<<<<<<< HEAD
            "id": 401,
=======
            "id": 458,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 344,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 343,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 505,
                  "src": "2617:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2617:12:1"
              },
              {
                "id": 346,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 345,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 515,
                  "src": "2630:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2630:13:1"
              }
            ],
            "name": "createSub",
            "nameLocation": "2590:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 342,
=======
                "id": 401,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 400,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 562,
                  "src": "2828:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2828:12:1"
              },
              {
                "id": 403,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 402,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "2841:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2841:13:1"
              }
            ],
            "name": "createSub",
            "nameLocation": "2801:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 399,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 341,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2605:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 401,
                  "src": "2600:7:1",
=======
                  "id": 398,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2816:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 458,
                  "src": "2811:7:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 340,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2600:4:1",
=======
                    "id": 397,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2811:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2599:9:1"
            },
            "returnParameters": {
              "id": 349,
=======
              "src": "2810:9:1"
            },
            "returnParameters": {
              "id": 406,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 348,
=======
                  "id": 405,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 401,
                  "src": "2652:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 347,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2652:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
=======
                  "scope": 458,
                  "src": "2863:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2863:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
>>>>>>> main
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2651:6:1"
            },
            "scope": 516,
            "src": "2581:454:1",
=======
              "src": "2862:9:1"
            },
            "scope": 573,
            "src": "2792:449:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 416,
              "nodeType": "Block",
              "src": "3168:32:1",
=======
              "id": 471,
              "nodeType": "Block",
              "src": "3361:32:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
<<<<<<< HEAD
                      "id": 412,
                      "name": "subs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "3185:4:1",
=======
                      "id": 467,
                      "name": "subs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 352,
                      "src": "3378:4:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
<<<<<<< HEAD
                    "id": 414,
                    "indexExpression": {
                      "id": 413,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 403,
                      "src": "3190:2:1",
=======
                    "id": 469,
                    "indexExpression": {
                      "id": 468,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 460,
                      "src": "3383:2:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "3185:8:1",
=======
                    "src": "3378:8:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 411,
                  "id": 415,
                  "nodeType": "Return",
                  "src": "3178:15:1"
=======
                  "functionReturnParameters": 466,
                  "id": 470,
                  "nodeType": "Return",
                  "src": "3371:15:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "f4111496",
<<<<<<< HEAD
            "id": 417,
=======
            "id": 472,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 406,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 405,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 505,
                  "src": "3123:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3123:12:1"
              },
              {
                "id": 408,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 407,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 515,
                  "src": "3136:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3136:13:1"
              }
            ],
            "name": "getSubContract",
            "nameLocation": "3087:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 404,
=======
                "id": 463,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 462,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "3329:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3329:13:1"
              }
            ],
            "name": "getSubContract",
            "nameLocation": "3293:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 461,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 403,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3107:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 417,
                  "src": "3102:7:1",
=======
                  "id": 460,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3313:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 472,
                  "src": "3308:7:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 402,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3102:4:1",
=======
                    "id": 459,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3308:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3101:9:1"
            },
            "returnParameters": {
              "id": 411,
=======
              "src": "3307:9:1"
            },
            "returnParameters": {
              "id": 466,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 410,
=======
                  "id": 465,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 417,
                  "src": "3158:7:1",
=======
                  "scope": 472,
                  "src": "3351:7:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 409,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3158:7:1",
=======
                    "id": 464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3351:7:1",
>>>>>>> main
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3157:9:1"
            },
            "scope": 516,
            "src": "3078:122:1",
=======
              "src": "3350:9:1"
            },
            "scope": 573,
            "src": "3284:109:1",
>>>>>>> main
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 444,
              "nodeType": "Block",
              "src": "3294:144:1",
=======
              "id": 499,
              "nodeType": "Block",
              "src": "3487:144:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 435,
=======
                        "id": 490,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
<<<<<<< HEAD
                              "id": 427,
                              "name": "subsidiaries",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "3312:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$314_storage_$",
                                "typeString": "mapping(address => struct Corporate.sub storage ref)"
                              }
                            },
                            "id": 429,
                            "indexExpression": {
                              "id": 428,
                              "name": "toCheck",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 419,
                              "src": "3325:7:1",
=======
                              "id": 482,
                              "name": "subsidiaries",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 349,
                              "src": "3505:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$364_storage_$",
                                "typeString": "mapping(address => struct Corporate.sub storage ref)"
                              }
                            },
                            "id": 484,
                            "indexExpression": {
                              "id": 483,
                              "name": "toCheck",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 474,
                              "src": "3518:7:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "3312:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_sub_$314_storage",
                              "typeString": "struct Corporate.sub storage ref"
                            }
                          },
                          "id": 430,
=======
                            "src": "3505:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_sub_$364_storage",
                              "typeString": "struct Corporate.sub storage ref"
                            }
                          },
                          "id": 485,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "subAddress",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 309,
                          "src": "3312:32:1",
=======
                          "referencedDeclaration": 359,
                          "src": "3505:32:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
<<<<<<< HEAD
                              "id": 433,
=======
                              "id": 488,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "3356:1:1",
=======
                              "src": "3549:1:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
<<<<<<< HEAD
                            "id": 432,
=======
                            "id": 487,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "3348:7:1",
=======
                            "src": "3541:7:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 431,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3348:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 434,
=======
                              "id": 486,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3541:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 489,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "3348:10:1",
=======
                          "src": "3541:10:1",
>>>>>>> main
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "3312:46:1",
=======
                        "src": "3505:46:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f74206120737562736964696172792061646472657373",
<<<<<<< HEAD
                        "id": 436,
=======
                        "id": 491,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "3360:26:1",
=======
                        "src": "3553:26:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_00e7c86a76d6b37cd7c008118063d660e33a645a376ceac3e4508a2776cb0688",
                          "typeString": "literal_string \"Not a subsidiary address\""
                        },
                        "value": "Not a subsidiary address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_00e7c86a76d6b37cd7c008118063d660e33a645a376ceac3e4508a2776cb0688",
                          "typeString": "literal_string \"Not a subsidiary address\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 426,
=======
                      "id": 481,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "3304:7:1",
=======
                      "src": "3497:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 437,
=======
                    "id": 492,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3304:83:1",
=======
                    "src": "3497:83:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 438,
                  "nodeType": "ExpressionStatement",
                  "src": "3304:83:1"
=======
                  "id": 493,
                  "nodeType": "ExpressionStatement",
                  "src": "3497:83:1"
>>>>>>> main
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 439,
                        "name": "subsidiaries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "3404:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$314_storage_$",
                          "typeString": "mapping(address => struct Corporate.sub storage ref)"
                        }
                      },
                      "id": 441,
                      "indexExpression": {
                        "id": 440,
                        "name": "toCheck",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 419,
                        "src": "3417:7:1",
=======
                        "id": 494,
                        "name": "subsidiaries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 349,
                        "src": "3597:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$364_storage_$",
                          "typeString": "mapping(address => struct Corporate.sub storage ref)"
                        }
                      },
                      "id": 496,
                      "indexExpression": {
                        "id": 495,
                        "name": "toCheck",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 474,
                        "src": "3610:7:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "3404:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_sub_$314_storage",
                        "typeString": "struct Corporate.sub storage ref"
                      }
                    },
                    "id": 442,
=======
                      "src": "3597:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_sub_$364_storage",
                        "typeString": "struct Corporate.sub storage ref"
                      }
                    },
                    "id": 497,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "valid",
                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                    "referencedDeclaration": 313,
                    "src": "3404:27:1",
=======
                    "referencedDeclaration": 363,
                    "src": "3597:27:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 425,
                  "id": 443,
                  "nodeType": "Return",
                  "src": "3397:34:1"
=======
                  "functionReturnParameters": 480,
                  "id": 498,
                  "nodeType": "Return",
                  "src": "3590:34:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "6fdbaf43",
<<<<<<< HEAD
            "id": 445,
=======
            "id": 500,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 422,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 421,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 515,
                  "src": "3267:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3267:13:1"
              }
            ],
            "name": "checkIfSubsidiaryValid",
            "nameLocation": "3215:22:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 420,
=======
                "id": 477,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 476,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "3460:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3460:13:1"
              }
            ],
            "name": "checkIfSubsidiaryValid",
            "nameLocation": "3408:22:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 475,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 419,
                  "mutability": "mutable",
                  "name": "toCheck",
                  "nameLocation": "3246:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 445,
                  "src": "3238:15:1",
=======
                  "id": 474,
                  "mutability": "mutable",
                  "name": "toCheck",
                  "nameLocation": "3439:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 500,
                  "src": "3431:15:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3238:7:1",
=======
                    "id": 473,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3431:7:1",
>>>>>>> main
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3237:17:1"
            },
            "returnParameters": {
              "id": 425,
=======
              "src": "3430:17:1"
            },
            "returnParameters": {
              "id": 480,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 424,
=======
                  "id": 479,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 445,
                  "src": "3289:4:1",
=======
                  "scope": 500,
                  "src": "3482:4:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 423,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3289:4:1",
=======
                    "id": 478,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3482:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3288:6:1"
            },
            "scope": 516,
            "src": "3206:232:1",
=======
              "src": "3481:6:1"
            },
            "scope": 573,
            "src": "3399:232:1",
>>>>>>> main
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 474,
              "nodeType": "Block",
              "src": "3555:158:1",
=======
              "id": 529,
              "nodeType": "Block",
              "src": "3748:158:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
<<<<<<< HEAD
                        "id": 466,
=======
                        "id": 521,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
<<<<<<< HEAD
                          "id": 460,
=======
                          "id": 515,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
<<<<<<< HEAD
                                "id": 456,
                                "name": "whitelist_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 448,
                                "src": "3573:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Whitelist_$1298",
                                  "typeString": "contract Whitelist"
                                }
                              },
                              "id": 457,
=======
                                "id": 511,
                                "name": "whitelist_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 503,
                                "src": "3766:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Whitelist_$1425",
                                  "typeString": "contract Whitelist"
                                }
                              },
                              "id": 512,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 1280,
                              "src": "3573:16:1",
=======
                              "referencedDeclaration": 1407,
                              "src": "3766:16:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
<<<<<<< HEAD
                            "id": 458,
=======
                            "id": 513,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "3573:18:1",
=======
                            "src": "3766:18:1",
>>>>>>> main
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
<<<<<<< HEAD
                            "id": 459,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 290,
                            "src": "3595:5:1",
=======
                            "id": 514,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 337,
                            "src": "3788:5:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
<<<<<<< HEAD
                          "src": "3573:27:1",
=======
                          "src": "3766:27:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
<<<<<<< HEAD
                          "id": 465,
=======
                          "id": 520,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
<<<<<<< HEAD
                                "id": 461,
                                "name": "whitelist",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 305,
                                "src": "3604:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Whitelist_$1298",
                                  "typeString": "contract Whitelist"
                                }
                              },
                              "id": 462,
=======
                                "id": 516,
                                "name": "whitelist",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 355,
                                "src": "3797:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Whitelist_$1425",
                                  "typeString": "contract Whitelist"
                                }
                              },
                              "id": 517,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 1280,
                              "src": "3604:15:1",
=======
                              "referencedDeclaration": 1407,
                              "src": "3797:15:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
<<<<<<< HEAD
                            "id": 463,
=======
                            "id": 518,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "3604:17:1",
=======
                            "src": "3797:17:1",
>>>>>>> main
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
<<<<<<< HEAD
                            "id": 464,
                            "name": "creator_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 288,
                            "src": "3625:8:1",
=======
                            "id": 519,
                            "name": "creator_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 335,
                            "src": "3818:8:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
<<<<<<< HEAD
                          "src": "3604:29:1",
=======
                          "src": "3797:29:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD
                        "src": "3573:60:1",
=======
                        "src": "3766:60:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c697374206e6f742063726561746564206279206b6e6f776e207061727479",
<<<<<<< HEAD
                        "id": 467,
=======
                        "id": 522,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "3635:38:1",
=======
                        "src": "3828:38:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cf9dd211e1ca90d9268a7ae8097b7e406e991130fcf3aad7805d3e2292c4115c",
                          "typeString": "literal_string \"Whitelist not created by known party\""
                        },
                        "value": "Whitelist not created by known party"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cf9dd211e1ca90d9268a7ae8097b7e406e991130fcf3aad7805d3e2292c4115c",
                          "typeString": "literal_string \"Whitelist not created by known party\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 455,
=======
                      "id": 510,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "3565:7:1",
=======
                      "src": "3758:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 468,
=======
                    "id": 523,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3565:109:1",
=======
                    "src": "3758:109:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "3565:109:1"
                },
                {
                  "expression": {
                    "id": 472,
=======
                  "id": 524,
                  "nodeType": "ExpressionStatement",
                  "src": "3758:109:1"
                },
                {
                  "expression": {
                    "id": 527,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 470,
                      "name": "whitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 305,
                      "src": "3684:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$1298",
=======
                      "id": 525,
                      "name": "whitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 355,
                      "src": "3877:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$1425",
>>>>>>> main
                        "typeString": "contract Whitelist"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 471,
                      "name": "whitelist_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 448,
                      "src": "3696:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$1298",
                        "typeString": "contract Whitelist"
                      }
                    },
                    "src": "3684:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$1298",
                      "typeString": "contract Whitelist"
                    }
                  },
                  "id": 473,
                  "nodeType": "ExpressionStatement",
                  "src": "3684:22:1"
=======
                      "id": 526,
                      "name": "whitelist_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 503,
                      "src": "3889:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$1425",
                        "typeString": "contract Whitelist"
                      }
                    },
                    "src": "3877:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$1425",
                      "typeString": "contract Whitelist"
                    }
                  },
                  "id": 528,
                  "nodeType": "ExpressionStatement",
                  "src": "3877:22:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "3d0f963e",
<<<<<<< HEAD
            "id": 475,
=======
            "id": 530,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 451,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 450,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 505,
                  "src": "3528:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3528:12:1"
              },
              {
                "id": 453,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 452,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 515,
                  "src": "3541:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3541:13:1"
              }
            ],
            "name": "updateWhitelist",
            "nameLocation": "3483:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 449,
=======
                "id": 506,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 505,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 562,
                  "src": "3721:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3721:12:1"
              },
              {
                "id": 508,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 507,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "3734:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3734:13:1"
              }
            ],
            "name": "updateWhitelist",
            "nameLocation": "3676:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 504,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 448,
                  "mutability": "mutable",
                  "name": "whitelist_",
                  "nameLocation": "3509:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "3499:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Whitelist_$1298",
                    "typeString": "contract Whitelist"
                  },
                  "typeName": {
                    "id": 447,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 446,
                      "name": "Whitelist",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1298,
                      "src": "3499:9:1"
                    },
                    "referencedDeclaration": 1298,
                    "src": "3499:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$1298",
=======
                  "id": 503,
                  "mutability": "mutable",
                  "name": "whitelist_",
                  "nameLocation": "3702:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "3692:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Whitelist_$1425",
                    "typeString": "contract Whitelist"
                  },
                  "typeName": {
                    "id": 502,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 501,
                      "name": "Whitelist",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1425,
                      "src": "3692:9:1"
                    },
                    "referencedDeclaration": 1425,
                    "src": "3692:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$1425",
>>>>>>> main
                      "typeString": "contract Whitelist"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3498:22:1"
            },
            "returnParameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3555:0:1"
            },
            "scope": 516,
            "src": "3474:239:1",
=======
              "src": "3691:22:1"
            },
            "returnParameters": {
              "id": 509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3748:0:1"
            },
            "scope": 573,
            "src": "3667:239:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 488,
              "nodeType": "Block",
              "src": "3822:30:1",
              "statements": [
                {
                  "expression": {
                    "id": 486,
=======
              "id": 545,
              "nodeType": "Block",
              "src": "4015:52:1",
              "statements": [
                {
                  "expression": {
                    "id": 541,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 484,
                      "name": "valid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 307,
                      "src": "3832:5:1",
=======
                      "id": 539,
                      "name": "valid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 357,
                      "src": "4025:5:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
<<<<<<< HEAD
                      "id": 485,
=======
                      "id": 540,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "3840:5:1",
=======
                      "src": "4033:5:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
<<<<<<< HEAD
                    "src": "3832:13:1",
=======
                    "src": "4025:13:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 487,
                  "nodeType": "ExpressionStatement",
                  "src": "3832:13:1"
=======
                  "id": 542,
                  "nodeType": "ExpressionStatement",
                  "src": "4025:13:1"
                },
                {
                  "expression": {
                    "id": 543,
                    "name": "valid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 357,
                    "src": "4055:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 538,
                  "id": 544,
                  "nodeType": "Return",
                  "src": "4048:12:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "98f4448a",
<<<<<<< HEAD
            "id": 489,
=======
            "id": 546,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 478,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 477,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 505,
                  "src": "3782:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3782:12:1"
              },
              {
                "id": 480,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 479,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 515,
                  "src": "3795:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3795:13:1"
              }
            ],
            "name": "disableCorporate",
            "nameLocation": "3756:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3772:2:1"
            },
            "returnParameters": {
              "id": 483,
=======
                "id": 533,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 532,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 562,
                  "src": "3975:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3975:12:1"
              },
              {
                "id": 535,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 534,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "3988:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3988:13:1"
              }
            ],
            "name": "disableCorporate",
            "nameLocation": "3949:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3965:2:1"
            },
            "returnParameters": {
              "id": 538,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 482,
=======
                  "id": 537,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 489,
                  "src": "3817:4:1",
=======
                  "scope": 546,
                  "src": "4010:4:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 481,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3817:4:1",
=======
                    "id": 536,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4010:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3816:6:1"
            },
            "scope": 516,
            "src": "3747:105:1",
=======
              "src": "4009:6:1"
            },
            "scope": 573,
            "src": "3940:127:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 504,
              "nodeType": "Block",
              "src": "3880:82:1",
=======
              "id": 561,
              "nodeType": "Block",
              "src": "4095:82:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
<<<<<<< HEAD
                        "id": 500,
=======
                        "id": 557,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
<<<<<<< HEAD
                          "id": 495,
=======
                          "id": 552,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
<<<<<<< HEAD
                              "id": 492,
=======
                              "id": 549,
>>>>>>> main
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                              "src": "3898:3:1",
=======
                              "src": "4113:3:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
<<<<<<< HEAD
                            "id": 493,
=======
                            "id": 550,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "src": "3898:10:1",
=======
                            "src": "4113:10:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
<<<<<<< HEAD
                            "id": 494,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 290,
                            "src": "3912:5:1",
=======
                            "id": 551,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 337,
                            "src": "4127:5:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
<<<<<<< HEAD
                          "src": "3898:19:1",
=======
                          "src": "4113:19:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
<<<<<<< HEAD
                          "id": 499,
=======
                          "id": 556,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
<<<<<<< HEAD
                              "id": 496,
=======
                              "id": 553,
>>>>>>> main
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                              "src": "3921:3:1",
=======
                              "src": "4136:3:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
<<<<<<< HEAD
                            "id": 497,
=======
                            "id": 554,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "src": "3921:10:1",
=======
                            "src": "4136:10:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
<<<<<<< HEAD
                            "id": 498,
                            "name": "creator_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 288,
                            "src": "3935:8:1",
=======
                            "id": 555,
                            "name": "creator_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 335,
                            "src": "4150:8:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
<<<<<<< HEAD
                          "src": "3921:22:1",
=======
                          "src": "4136:22:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD
                        "src": "3898:45:1",
=======
                        "src": "4113:45:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "id": 491,
=======
                      "id": 548,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "3890:7:1",
=======
                      "src": "4105:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 501,
=======
                    "id": 558,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3890:54:1",
=======
                    "src": "4105:54:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 502,
                  "nodeType": "ExpressionStatement",
                  "src": "3890:54:1"
                },
                {
                  "id": 503,
                  "nodeType": "PlaceholderStatement",
                  "src": "3954:1:1"
                }
              ]
            },
            "id": 505,
            "name": "permissioned",
            "nameLocation": "3867:12:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3880:0:1"
            },
            "src": "3858:104:1",
=======
                  "id": 559,
                  "nodeType": "ExpressionStatement",
                  "src": "4105:54:1"
                },
                {
                  "id": 560,
                  "nodeType": "PlaceholderStatement",
                  "src": "4169:1:1"
                }
              ]
            },
            "id": 562,
            "name": "permissioned",
            "nameLocation": "4082:12:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4095:0:1"
            },
            "src": "4073:104:1",
>>>>>>> main
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 514,
              "nodeType": "Block",
              "src": "3991:50:1",
=======
              "id": 571,
              "nodeType": "Block",
              "src": "4206:50:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
<<<<<<< HEAD
                        "id": 510,
=======
                        "id": 567,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 508,
                          "name": "valid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "4009:5:1",
=======
                          "id": 565,
                          "name": "valid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 357,
                          "src": "4224:5:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
<<<<<<< HEAD
                          "id": 509,
=======
                          "id": 566,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "4018:4:1",
=======
                          "src": "4233:4:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
<<<<<<< HEAD
                        "src": "4009:13:1",
=======
                        "src": "4224:13:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "id": 507,
=======
                      "id": 564,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "4001:7:1",
=======
                      "src": "4216:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 511,
=======
                    "id": 568,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4001:22:1",
=======
                    "src": "4216:22:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 512,
                  "nodeType": "ExpressionStatement",
                  "src": "4001:22:1"
                },
                {
                  "id": 513,
                  "nodeType": "PlaceholderStatement",
                  "src": "4033:1:1"
                }
              ]
            },
            "id": 515,
            "name": "validContract",
            "nameLocation": "3977:13:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3991:0:1"
            },
            "src": "3968:73:1",
=======
                  "id": 569,
                  "nodeType": "ExpressionStatement",
                  "src": "4216:22:1"
                },
                {
                  "id": 570,
                  "nodeType": "PlaceholderStatement",
                  "src": "4248:1:1"
                }
              ]
            },
            "id": 572,
            "name": "validContract",
            "nameLocation": "4192:13:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 563,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4206:0:1"
            },
            "src": "4183:73:1",
>>>>>>> main
            "virtual": false,
            "visibility": "internal"
          }
        ],
<<<<<<< HEAD
        "scope": 658,
        "src": "1589:2454:1",
=======
        "scope": 726,
        "src": "1738:2520:1",
>>>>>>> main
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
<<<<<<< HEAD
        "id": 657,
        "linearizedBaseContracts": [
          657
        ],
        "name": "Subsidiary",
        "nameLocation": "4119:10:1",
=======
        "id": 725,
        "linearizedBaseContracts": [
          725
        ],
        "name": "Subsidiary",
        "nameLocation": "4334:10:1",
>>>>>>> main
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "b119a9d6",
<<<<<<< HEAD
            "id": 518,
            "mutability": "mutable",
            "name": "parent_",
            "nameLocation": "4159:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 657,
            "src": "4136:30:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 517,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4136:15:1",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
=======
            "id": 576,
            "mutability": "mutable",
            "name": "parent_",
            "nameLocation": "4368:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 725,
            "src": "4351:24:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Corporate_$573",
              "typeString": "contract Corporate"
            },
            "typeName": {
              "id": 575,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 574,
                "name": "Corporate",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 573,
                "src": "4351:9:1"
              },
              "referencedDeclaration": 573,
              "src": "4351:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Corporate_$573",
                "typeString": "contract Corporate"
>>>>>>> main
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 520,
            "mutability": "mutable",
            "name": "amount",
            "nameLocation": "4199:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 657,
            "src": "4194:11:1",
=======
            "id": 578,
            "mutability": "mutable",
            "name": "amount",
            "nameLocation": "4408:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 725,
            "src": "4403:11:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 519,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "4194:4:1",
=======
              "id": 577,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "4403:4:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 524,
            "mutability": "mutable",
            "name": "permissionedAddress",
            "nameLocation": "4255:19:1",
            "nodeType": "VariableDeclaration",
            "scope": 657,
            "src": "4222:52:1",
=======
            "id": 582,
            "mutability": "mutable",
            "name": "permissionedAddress",
            "nameLocation": "4464:19:1",
            "nodeType": "VariableDeclaration",
            "scope": 725,
            "src": "4431:52:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 523,
              "keyType": {
                "id": 521,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4230:7:1",
=======
              "id": 581,
              "keyType": {
                "id": 579,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4439:7:1",
>>>>>>> main
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "4222:24:1",
=======
              "src": "4431:24:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
<<<<<<< HEAD
                "id": 522,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "4241:4:1",
=======
                "id": 580,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "4450:4:1",
>>>>>>> main
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
<<<<<<< HEAD
            "id": 530,
            "name": "ValueReceived",
            "nameLocation": "4349:13:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 529,
=======
            "id": 588,
            "name": "ValueReceived",
            "nameLocation": "4558:13:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 587,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 526,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "4371:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "4363:12:1",
=======
                  "id": 584,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "4580:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "4572:12:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 525,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4363:7:1",
=======
                    "id": 583,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4572:7:1",
>>>>>>> main
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 528,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4382:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "4377:11:1",
=======
                  "id": 586,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4591:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "4586:11:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 527,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4377:4:1",
=======
                    "id": 585,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4586:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4362:27:1"
            },
            "src": "4343:47:1"
          },
          {
            "canonicalName": "Subsidiary.transaction",
            "id": 537,
            "members": [
              {
                "constant": false,
                "id": 532,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "4430:2:1",
                "nodeType": "VariableDeclaration",
                "scope": 537,
                "src": "4425:7:1",
=======
              "src": "4571:27:1"
            },
            "src": "4552:47:1"
          },
          {
            "canonicalName": "Subsidiary.transaction",
            "id": 595,
            "members": [
              {
                "constant": false,
                "id": 590,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "4639:2:1",
                "nodeType": "VariableDeclaration",
                "scope": 595,
                "src": "4634:7:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 531,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "4425:4:1",
=======
                  "id": 589,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "4634:4:1",
>>>>>>> main
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 534,
                "mutability": "mutable",
                "name": "receiver_id",
                "nameLocation": "4451:11:1",
                "nodeType": "VariableDeclaration",
                "scope": 537,
                "src": "4443:19:1",
=======
                "id": 592,
                "mutability": "mutable",
                "name": "receiver_id",
                "nameLocation": "4660:11:1",
                "nodeType": "VariableDeclaration",
                "scope": 595,
                "src": "4652:19:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 533,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "4443:7:1",
=======
                  "id": 591,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "4652:7:1",
>>>>>>> main
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 536,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "4477:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 537,
                "src": "4472:11:1",
=======
                "id": 594,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "4686:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 595,
                "src": "4681:11:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 535,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "4472:4:1",
=======
                  "id": 593,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "4681:4:1",
>>>>>>> main
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "transaction",
<<<<<<< HEAD
            "nameLocation": "4404:11:1",
            "nodeType": "StructDefinition",
            "scope": 657,
            "src": "4397:93:1",
=======
            "nameLocation": "4613:11:1",
            "nodeType": "StructDefinition",
            "scope": 725,
            "src": "4606:93:1",
>>>>>>> main
            "visibility": "public"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 542,
            "mutability": "mutable",
            "name": "transactions",
            "nameLocation": "4560:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 657,
            "src": "4531:41:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_transaction_$537_storage_$",
              "typeString": "mapping(uint256 => struct Subsidiary.transaction)"
            },
            "typeName": {
              "id": 541,
              "keyType": {
                "id": 538,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "4539:4:1",
=======
            "id": 600,
            "mutability": "mutable",
            "name": "transactions",
            "nameLocation": "4769:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 725,
            "src": "4740:41:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_transaction_$595_storage_$",
              "typeString": "mapping(uint256 => struct Subsidiary.transaction)"
            },
            "typeName": {
              "id": 599,
              "keyType": {
                "id": 596,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "4748:4:1",
>>>>>>> main
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "4531:28:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_transaction_$537_storage_$",
                "typeString": "mapping(uint256 => struct Subsidiary.transaction)"
              },
              "valueType": {
                "id": 540,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 539,
                  "name": "transaction",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 537,
                  "src": "4547:11:1"
                },
                "referencedDeclaration": 537,
                "src": "4547:11:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_transaction_$537_storage_ptr",
=======
              "src": "4740:28:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_transaction_$595_storage_$",
                "typeString": "mapping(uint256 => struct Subsidiary.transaction)"
              },
              "valueType": {
                "id": 598,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 597,
                  "name": "transaction",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 595,
                  "src": "4756:11:1"
                },
                "referencedDeclaration": 595,
                "src": "4756:11:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_transaction_$595_storage_ptr",
>>>>>>> main
                  "typeString": "struct Subsidiary.transaction"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 544,
            "mutability": "mutable",
            "name": "numOfTransactions",
            "nameLocation": "4675:17:1",
            "nodeType": "VariableDeclaration",
            "scope": 657,
            "src": "4670:22:1",
=======
            "id": 602,
            "mutability": "mutable",
            "name": "numOfTransactions",
            "nameLocation": "4884:17:1",
            "nodeType": "VariableDeclaration",
            "scope": 725,
            "src": "4879:22:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 543,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "4670:4:1",
=======
              "id": 601,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "4879:4:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 560,
              "nodeType": "Block",
              "src": "4726:62:1",
              "statements": [
                {
                  "expression": {
                    "id": 554,
=======
              "id": 616,
              "nodeType": "Block",
              "src": "4936:51:1",
              "statements": [
                {
                  "expression": {
                    "id": 610,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 549,
                      "name": "parent_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "4736:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 552,
                          "name": "parent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 546,
                          "src": "4754:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4746:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 550,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4746:8:1",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4746:15:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4736:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 555,
                  "nodeType": "ExpressionStatement",
                  "src": "4736:25:1"
                },
                {
                  "expression": {
                    "id": 558,
=======
                      "id": 608,
                      "name": "parent_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 576,
                      "src": "4946:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Corporate_$573",
                        "typeString": "contract Corporate"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 609,
                      "name": "corp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 605,
                      "src": "4956:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Corporate_$573",
                        "typeString": "contract Corporate"
                      }
                    },
                    "src": "4946:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Corporate_$573",
                      "typeString": "contract Corporate"
                    }
                  },
                  "id": 611,
                  "nodeType": "ExpressionStatement",
                  "src": "4946:14:1"
                },
                {
                  "expression": {
                    "id": 614,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 556,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 520,
                      "src": "4771:6:1",
=======
                      "id": 612,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 578,
                      "src": "4970:6:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
<<<<<<< HEAD
                      "id": 557,
=======
                      "id": 613,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "4780:1:1",
=======
                      "src": "4979:1:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
<<<<<<< HEAD
                    "src": "4771:10:1",
=======
                    "src": "4970:10:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 559,
                  "nodeType": "ExpressionStatement",
                  "src": "4771:10:1"
                }
              ]
            },
            "id": 561,
=======
                  "id": 615,
                  "nodeType": "ExpressionStatement",
                  "src": "4970:10:1"
                }
              ]
            },
            "id": 617,
>>>>>>> main
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 547,
=======
              "id": 606,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 546,
                  "mutability": "mutable",
                  "name": "parent",
                  "nameLocation": "4718:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 561,
                  "src": "4710:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4710:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
=======
                  "id": 605,
                  "mutability": "mutable",
                  "name": "corp",
                  "nameLocation": "4930:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "4920:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Corporate_$573",
                    "typeString": "contract Corporate"
                  },
                  "typeName": {
                    "id": 604,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 603,
                      "name": "Corporate",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 573,
                      "src": "4920:9:1"
                    },
                    "referencedDeclaration": 573,
                    "src": "4920:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Corporate_$573",
                      "typeString": "contract Corporate"
>>>>>>> main
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4709:16:1"
            },
            "returnParameters": {
              "id": 548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4726:0:1"
            },
            "scope": 657,
            "src": "4698:90:1",
=======
              "src": "4919:16:1"
            },
            "returnParameters": {
              "id": 607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4936:0:1"
            },
            "scope": 725,
            "src": "4908:79:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 581,
              "nodeType": "Block",
              "src": "5005:154:1",
              "statements": [
                {
                  "assignments": [
                    569
=======
              "id": 643,
              "nodeType": "Block",
              "src": "5204:172:1",
              "statements": [
                {
                  "assignments": [
                    625
>>>>>>> main
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 569,
                      "mutability": "mutable",
                      "name": "prevAmount",
                      "nameLocation": "5020:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 581,
                      "src": "5015:15:1",
=======
                      "id": 625,
                      "mutability": "mutable",
                      "name": "prevAmount",
                      "nameLocation": "5219:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 643,
                      "src": "5214:15:1",
>>>>>>> main
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 568,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5015:4:1",
=======
                        "id": 624,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5214:4:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 571,
                  "initialValue": {
                    "id": 570,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 520,
                    "src": "5033:6:1",
=======
                  "id": 627,
                  "initialValue": {
                    "id": 626,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 578,
                    "src": "5232:6:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "5015:24:1"
                },
                {
                  "expression": {
                    "id": 574,
=======
                  "src": "5214:24:1"
                },
                {
                  "expression": {
                    "id": 630,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 572,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 520,
                      "src": "5049:6:1",
=======
                      "id": 628,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 578,
                      "src": "5248:6:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
<<<<<<< HEAD
                      "id": 573,
=======
                      "id": 629,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "5058:1:1",
=======
                      "src": "5257:1:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
<<<<<<< HEAD
                    "src": "5049:10:1",
=======
                    "src": "5248:10:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 575,
                  "nodeType": "ExpressionStatement",
                  "src": "5049:10:1"
=======
                  "id": 631,
                  "nodeType": "ExpressionStatement",
                  "src": "5248:10:1"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 578,
                        "name": "prevAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 569,
                        "src": "5089:10:1",
=======
                        "id": 640,
                        "name": "prevAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 625,
                        "src": "5306:10:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 576,
                        "name": "parent_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 518,
                        "src": "5076:7:1",
=======
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 636,
                                "name": "parent_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 576,
                                "src": "5291:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Corporate_$573",
                                  "typeString": "contract Corporate"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Corporate_$573",
                                  "typeString": "contract Corporate"
                                }
                              ],
                              "id": 635,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5283:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 634,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5283:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5283:16:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5275:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 632,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5275:8:1",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5275:25:1",
                        "tryCall": false,
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
<<<<<<< HEAD
                      "id": 577,
=======
                      "id": 639,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "send",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "src": "5076:12:1",
=======
                      "src": "5275:30:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
<<<<<<< HEAD
                    "id": 579,
=======
                    "id": 641,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5076:24:1",
=======
                    "src": "5275:42:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 567,
                  "id": 580,
                  "nodeType": "Return",
                  "src": "5069:31:1"
=======
                  "functionReturnParameters": 623,
                  "id": 642,
                  "nodeType": "Return",
                  "src": "5268:49:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "8b734233",
<<<<<<< HEAD
            "id": 582,
=======
            "id": 644,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 564,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 563,
                  "name": "accountsAccess",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 656,
                  "src": "4975:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4975:14:1"
              }
            ],
            "name": "getTake",
            "nameLocation": "4950:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4957:2:1"
            },
            "returnParameters": {
              "id": 567,
=======
                "id": 620,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 619,
                  "name": "accountsAccess",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 724,
                  "src": "5174:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "5174:14:1"
              }
            ],
            "name": "getTake",
            "nameLocation": "5149:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5156:2:1"
            },
            "returnParameters": {
              "id": 623,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 566,
=======
                  "id": 622,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 582,
                  "src": "4998:4:1",
=======
                  "scope": 644,
                  "src": "5197:4:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 565,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4998:4:1",
=======
                    "id": 621,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5197:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4997:6:1"
            },
            "scope": 657,
            "src": "4941:218:1",
=======
              "src": "5196:6:1"
            },
            "scope": 725,
            "src": "5140:236:1",
>>>>>>> main
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 615,
              "nodeType": "Block",
              "src": "5355:230:1",
=======
              "id": 677,
              "nodeType": "Block",
              "src": "5572:230:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 599,
=======
                        "id": 661,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
<<<<<<< HEAD
                            "id": 596,
                            "name": "person_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 586,
                            "src": "5373:9:1",
=======
                            "id": 658,
                            "name": "person_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 648,
                            "src": "5590:9:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
<<<<<<< HEAD
                          "id": 597,
=======
                          "id": 659,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "src": "5373:17:1",
=======
                          "src": "5590:17:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
<<<<<<< HEAD
                          "id": 598,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 520,
                          "src": "5394:6:1",
=======
                          "id": 660,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 578,
                          "src": "5611:6:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "src": "5373:27:1",
=======
                        "src": "5590:27:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520526563656976657220636f6e747261637420646f6573206e6f7420686176652073756666696369656e742062616c616e636520666f722074686973207472616e73616374696f6e",
<<<<<<< HEAD
                        "id": 600,
=======
                        "id": 662,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "5402:77:1",
=======
                        "src": "5619:77:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d4a4ee7a07ecef3c3534871c9565519b24ca382dbfc79331d46c1dd632076b2",
                          "typeString": "literal_string \"The Receiver contract does not have sufficient balance for this transaction\""
                        },
                        "value": "The Receiver contract does not have sufficient balance for this transaction"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d4a4ee7a07ecef3c3534871c9565519b24ca382dbfc79331d46c1dd632076b2",
                          "typeString": "literal_string \"The Receiver contract does not have sufficient balance for this transaction\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 595,
=======
                      "id": 657,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "5365:7:1",
=======
                      "src": "5582:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 601,
=======
                    "id": 663,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5365:115:1",
=======
                    "src": "5582:115:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 602,
                  "nodeType": "ExpressionStatement",
                  "src": "5365:115:1"
                },
                {
                  "expression": {
                    "id": 611,
=======
                  "id": 664,
                  "nodeType": "ExpressionStatement",
                  "src": "5582:115:1"
                },
                {
                  "expression": {
                    "id": 673,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 603,
                        "name": "transactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 542,
                        "src": "5491:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_transaction_$537_storage_$",
                          "typeString": "mapping(uint256 => struct Subsidiary.transaction storage ref)"
                        }
                      },
                      "id": 605,
                      "indexExpression": {
                        "id": 604,
                        "name": "transID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 584,
                        "src": "5504:7:1",
=======
                        "id": 665,
                        "name": "transactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 600,
                        "src": "5708:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_transaction_$595_storage_$",
                          "typeString": "mapping(uint256 => struct Subsidiary.transaction storage ref)"
                        }
                      },
                      "id": 667,
                      "indexExpression": {
                        "id": 666,
                        "name": "transID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 646,
                        "src": "5721:7:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "5491:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_transaction_$537_storage",
=======
                      "src": "5708:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_transaction_$595_storage",
>>>>>>> main
                        "typeString": "struct Subsidiary.transaction storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
<<<<<<< HEAD
                          "id": 607,
                          "name": "transID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 584,
                          "src": "5527:7:1",
=======
                          "id": 669,
                          "name": "transID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 646,
                          "src": "5744:7:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
<<<<<<< HEAD
                          "id": 608,
                          "name": "person_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 586,
                          "src": "5536:9:1",
=======
                          "id": 670,
                          "name": "person_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 648,
                          "src": "5753:9:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
<<<<<<< HEAD
                          "id": 609,
                          "name": "tx_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 588,
                          "src": "5547:9:1",
=======
                          "id": 671,
                          "name": "tx_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 650,
                          "src": "5764:9:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
<<<<<<< HEAD
                        "id": 606,
                        "name": "transaction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "5515:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_transaction_$537_storage_ptr_$",
                          "typeString": "type(struct Subsidiary.transaction storage pointer)"
                        }
                      },
                      "id": 610,
=======
                        "id": 668,
                        "name": "transaction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 595,
                        "src": "5732:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_transaction_$595_storage_ptr_$",
                          "typeString": "type(struct Subsidiary.transaction storage pointer)"
                        }
                      },
                      "id": 672,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "5515:42:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_transaction_$537_memory_ptr",
                        "typeString": "struct Subsidiary.transaction memory"
                      }
                    },
                    "src": "5491:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_transaction_$537_storage",
                      "typeString": "struct Subsidiary.transaction storage ref"
                    }
                  },
                  "id": 612,
                  "nodeType": "ExpressionStatement",
                  "src": "5491:66:1"
=======
                      "src": "5732:42:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_transaction_$595_memory_ptr",
                        "typeString": "struct Subsidiary.transaction memory"
                      }
                    },
                    "src": "5708:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_transaction_$595_storage",
                      "typeString": "struct Subsidiary.transaction storage ref"
                    }
                  },
                  "id": 674,
                  "nodeType": "ExpressionStatement",
                  "src": "5708:66:1"
>>>>>>> main
                },
                {
                  "expression": {
                    "hexValue": "74727565",
<<<<<<< HEAD
                    "id": 613,
=======
                    "id": 675,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
<<<<<<< HEAD
                    "src": "5574:4:1",
=======
                    "src": "5791:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 594,
                  "id": 614,
                  "nodeType": "Return",
                  "src": "5567:11:1"
=======
                  "functionReturnParameters": 656,
                  "id": 676,
                  "nodeType": "Return",
                  "src": "5784:11:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "ef5ea07c",
<<<<<<< HEAD
            "id": 616,
=======
            "id": 678,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 591,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 590,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 645,
                  "src": "5323:10:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "5323:10:1"
              }
            ],
            "name": "insertTransaction",
            "nameLocation": "5256:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 589,
=======
                "id": 653,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 652,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 710,
                  "src": "5540:10:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "5540:10:1"
              }
            ],
            "name": "insertTransaction",
            "nameLocation": "5473:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 651,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 584,
                  "mutability": "mutable",
                  "name": "transID",
                  "nameLocation": "5279:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 616,
                  "src": "5274:12:1",
=======
                  "id": 646,
                  "mutability": "mutable",
                  "name": "transID",
                  "nameLocation": "5496:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 678,
                  "src": "5491:12:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 583,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5274:4:1",
=======
                    "id": 645,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5491:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 586,
                  "mutability": "mutable",
                  "name": "person_id",
                  "nameLocation": "5296:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 616,
                  "src": "5288:17:1",
=======
                  "id": 648,
                  "mutability": "mutable",
                  "name": "person_id",
                  "nameLocation": "5513:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 678,
                  "src": "5505:17:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 585,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5288:7:1",
=======
                    "id": 647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5505:7:1",
>>>>>>> main
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 588,
                  "mutability": "mutable",
                  "name": "tx_amount",
                  "nameLocation": "5312:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 616,
                  "src": "5307:14:1",
=======
                  "id": 650,
                  "mutability": "mutable",
                  "name": "tx_amount",
                  "nameLocation": "5529:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 678,
                  "src": "5524:14:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 587,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5307:4:1",
=======
                    "id": 649,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5524:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5273:49:1"
            },
            "returnParameters": {
              "id": 594,
=======
              "src": "5490:49:1"
            },
            "returnParameters": {
              "id": 656,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 593,
=======
                  "id": 655,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 616,
                  "src": "5349:4:1",
=======
                  "scope": 678,
                  "src": "5566:4:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 592,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5349:4:1",
=======
                    "id": 654,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5566:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5348:6:1"
            },
            "scope": 657,
            "src": "5247:338:1",
=======
              "src": "5565:6:1"
            },
            "scope": 725,
            "src": "5464:338:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 626,
              "nodeType": "Block",
              "src": "5664:58:1",
=======
              "id": 688,
              "nodeType": "Block",
              "src": "5881:58:1",
>>>>>>> main
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
<<<<<<< HEAD
                          "id": 620,
=======
                          "id": 682,
>>>>>>> main
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                          "src": "5693:3:1",
=======
                          "src": "5910:3:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
<<<<<<< HEAD
                        "id": 621,
=======
                        "id": 683,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "src": "5693:10:1",
=======
                        "src": "5910:10:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
<<<<<<< HEAD
                          "id": 622,
=======
                          "id": 684,
>>>>>>> main
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                          "src": "5705:3:1",
=======
                          "src": "5922:3:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
<<<<<<< HEAD
                        "id": 623,
=======
                        "id": 685,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "src": "5705:9:1",
=======
                        "src": "5922:9:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
<<<<<<< HEAD
                      "id": 619,
                      "name": "ValueReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 530,
                      "src": "5679:13:1",
=======
                      "id": 681,
                      "name": "ValueReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "5896:13:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 624,
=======
                    "id": 686,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5679:36:1",
=======
                    "src": "5896:36:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 625,
                  "nodeType": "EmitStatement",
                  "src": "5674:41:1"
                }
              ]
            },
            "id": 627,
=======
                  "id": 687,
                  "nodeType": "EmitStatement",
                  "src": "5891:41:1"
                }
              ]
            },
            "id": 689,
>>>>>>> main
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 617,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5645:2:1"
            },
            "returnParameters": {
              "id": 618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5664:0:1"
            },
            "scope": 657,
            "src": "5638:84:1",
=======
              "id": 679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5862:2:1"
            },
            "returnParameters": {
              "id": 680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5881:0:1"
            },
            "scope": 725,
            "src": "5855:84:1",
>>>>>>> main
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 644,
              "nodeType": "Block",
              "src": "5752:101:1",
=======
              "id": 709,
              "nodeType": "Block",
              "src": "5969:110:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
<<<<<<< HEAD
                        "id": 640,
=======
                        "id": 705,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
<<<<<<< HEAD
                          "id": 633,
=======
                          "id": 698,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
<<<<<<< HEAD
                              "id": 630,
=======
                              "id": 692,
>>>>>>> main
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                              "src": "5770:3:1",
=======
                              "src": "5987:3:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
<<<<<<< HEAD
                            "id": 631,
=======
                            "id": 693,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "src": "5770:10:1",
=======
                            "src": "5987:10:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
<<<<<<< HEAD
                            "id": 632,
                            "name": "parent_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 518,
                            "src": "5784:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "5770:21:1",
=======
                            "arguments": [
                              {
                                "id": 696,
                                "name": "parent_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 576,
                                "src": "6009:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Corporate_$573",
                                  "typeString": "contract Corporate"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Corporate_$573",
                                  "typeString": "contract Corporate"
                                }
                              ],
                              "id": 695,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6001:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 694,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6001:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6001:16:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5987:30:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
<<<<<<< HEAD
                          "id": 639,
=======
                          "id": 704,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
<<<<<<< HEAD
                              "id": 634,
                              "name": "permissionedAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 524,
                              "src": "5795:19:1",
=======
                              "id": 699,
                              "name": "permissionedAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 582,
                              "src": "6021:19:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
<<<<<<< HEAD
                            "id": 637,
                            "indexExpression": {
                              "expression": {
                                "id": 635,
=======
                            "id": 702,
                            "indexExpression": {
                              "expression": {
                                "id": 700,
>>>>>>> main
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                                "src": "5815:3:1",
=======
                                "src": "6041:3:1",
>>>>>>> main
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
<<<<<<< HEAD
                              "id": 636,
=======
                              "id": 701,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "src": "5815:10:1",
=======
                              "src": "6041:10:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "5795:31:1",
=======
                            "src": "6021:31:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "74727565",
<<<<<<< HEAD
                            "id": 638,
=======
                            "id": 703,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "5830:4:1",
=======
                            "src": "6056:4:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
<<<<<<< HEAD
                          "src": "5795:39:1",
=======
                          "src": "6021:39:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD
                        "src": "5770:64:1",
=======
                        "src": "5987:73:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "id": 629,
=======
                      "id": 691,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "5762:7:1",
=======
                      "src": "5979:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 641,
=======
                    "id": 706,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5762:73:1",
=======
                    "src": "5979:82:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 642,
                  "nodeType": "ExpressionStatement",
                  "src": "5762:73:1"
                },
                {
                  "id": 643,
                  "nodeType": "PlaceholderStatement",
                  "src": "5845:1:1"
                }
              ]
            },
            "id": 645,
            "name": "restricted",
            "nameLocation": "5741:10:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5752:0:1"
            },
            "src": "5732:121:1",
=======
                  "id": 707,
                  "nodeType": "ExpressionStatement",
                  "src": "5979:82:1"
                },
                {
                  "id": 708,
                  "nodeType": "PlaceholderStatement",
                  "src": "6071:1:1"
                }
              ]
            },
            "id": 710,
            "name": "restricted",
            "nameLocation": "5958:10:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5969:0:1"
            },
            "src": "5949:130:1",
>>>>>>> main
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 655,
              "nodeType": "Block",
              "src": "5883:58:1",
=======
              "id": 723,
              "nodeType": "Block",
              "src": "6109:67:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 651,
=======
                        "id": 719,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
<<<<<<< HEAD
                            "id": 648,
=======
                            "id": 713,
>>>>>>> main
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                            "src": "5901:3:1",
=======
                            "src": "6127:3:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
<<<<<<< HEAD
                          "id": 649,
=======
                          "id": 714,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "src": "5901:10:1",
=======
                          "src": "6127:10:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
<<<<<<< HEAD
                          "id": 650,
                          "name": "parent_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 518,
                          "src": "5915:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5901:21:1",
=======
                          "arguments": [
                            {
                              "id": 717,
                              "name": "parent_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 576,
                              "src": "6149:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Corporate_$573",
                                "typeString": "contract Corporate"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Corporate_$573",
                                "typeString": "contract Corporate"
                              }
                            ],
                            "id": 716,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6141:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 715,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6141:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6141:16:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6127:30:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "id": 647,
=======
                      "id": 712,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "5893:7:1",
=======
                      "src": "6119:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 652,
=======
                    "id": 720,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5893:30:1",
=======
                    "src": "6119:39:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 653,
                  "nodeType": "ExpressionStatement",
                  "src": "5893:30:1"
                },
                {
                  "id": 654,
                  "nodeType": "PlaceholderStatement",
                  "src": "5933:1:1"
                }
              ]
            },
            "id": 656,
            "name": "accountsAccess",
            "nameLocation": "5868:14:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5883:0:1"
            },
            "src": "5859:82:1",
=======
                  "id": 721,
                  "nodeType": "ExpressionStatement",
                  "src": "6119:39:1"
                },
                {
                  "id": 722,
                  "nodeType": "PlaceholderStatement",
                  "src": "6168:1:1"
                }
              ]
            },
            "id": 724,
            "name": "accountsAccess",
            "nameLocation": "6094:14:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6109:0:1"
            },
            "src": "6085:91:1",
>>>>>>> main
            "virtual": false,
            "visibility": "internal"
          }
        ],
<<<<<<< HEAD
        "scope": 658,
        "src": "4110:1833:1",
        "usedErrors": []
      }
    ],
    "src": "0:5943:1"
=======
        "scope": 726,
        "src": "4325:1853:1",
        "usedErrors": []
      }
    ],
    "src": "0:6178:1"
>>>>>>> main
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/CorporateFactory.sol",
    "exportedSymbols": {
<<<<<<< HEAD
      "Corporate": [
        516
      ],
      "CorporateFactory": [
        286
      ],
      "Subsidiary": [
        657
      ],
      "Whitelist": [
        1298
      ]
    },
    "id": 658,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 112,
=======
      "Admin": [
        134
      ],
      "Corporate": [
        573
      ],
      "CorporateFactory": [
        333
      ],
      "Subsidiary": [
        725
      ],
      "Whitelist": [
        1425
      ]
    },
    "id": 726,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 136,
>>>>>>> main
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:1"
      },
      {
        "absolutePath": "project:/contracts/Whitelist.sol",
        "file": "./Whitelist.sol",
<<<<<<< HEAD
        "id": 113,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 658,
        "sourceUnit": 1299,
=======
        "id": 137,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 726,
        "sourceUnit": 1426,
>>>>>>> main
        "src": "33:25:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
<<<<<<< HEAD
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          516
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 286,
        "linearizedBaseContracts": [
          286
        ],
        "name": "CorporateFactory",
        "nameLocation": "70:16:1",
=======
        "absolutePath": "project:/contracts/Admin.sol",
        "file": "./Admin.sol",
        "id": 138,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 726,
        "sourceUnit": 135,
        "src": "59:21:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          573
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 333,
        "linearizedBaseContracts": [
          333
        ],
        "name": "CorporateFactory",
        "nameLocation": "92:16:1",
>>>>>>> main
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
<<<<<<< HEAD
            "id": 115,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "109:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 286,
            "src": "94:20:1",
=======
            "id": 140,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "131:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 333,
            "src": "116:20:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 114,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "94:7:1",
=======
              "id": 139,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "116:7:1",
>>>>>>> main
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "functionSelector": "68a0b4e7",
            "id": 120,
            "mutability": "mutable",
            "name": "corporates",
            "nameLocation": "172:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 286,
            "src": "138:44:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$132_storage_$",
              "typeString": "mapping(uint256 => struct CorporateFactory.corporate)"
            },
            "typeName": {
              "id": 119,
              "keyType": {
                "id": 116,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "146:4:1",
=======
            "functionSelector": "f851a440",
            "id": 143,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "173:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 333,
            "src": "160:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Admin_$134",
              "typeString": "contract Admin"
            },
            "typeName": {
              "id": 142,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 141,
                "name": "Admin",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 134,
                "src": "160:5:1"
              },
              "referencedDeclaration": 134,
              "src": "160:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Admin_$134",
                "typeString": "contract Admin"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "68a0b4e7",
            "id": 148,
            "mutability": "mutable",
            "name": "corporates",
            "nameLocation": "218:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 333,
            "src": "184:44:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$160_storage_$",
              "typeString": "mapping(uint256 => struct CorporateFactory.corporate)"
            },
            "typeName": {
              "id": 147,
              "keyType": {
                "id": 144,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "192:4:1",
>>>>>>> main
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "138:26:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$132_storage_$",
                "typeString": "mapping(uint256 => struct CorporateFactory.corporate)"
              },
              "valueType": {
                "id": 118,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 117,
                  "name": "corporate",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 132,
                  "src": "154:9:1"
                },
                "referencedDeclaration": 132,
                "src": "154:9:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_corporate_$132_storage_ptr",
=======
              "src": "184:26:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$160_storage_$",
                "typeString": "mapping(uint256 => struct CorporateFactory.corporate)"
              },
              "valueType": {
                "id": 146,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 145,
                  "name": "corporate",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 160,
                  "src": "200:9:1"
                },
                "referencedDeclaration": 160,
                "src": "200:9:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_corporate_$160_storage_ptr",
>>>>>>> main
                  "typeString": "struct CorporateFactory.corporate"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 122,
            "mutability": "mutable",
            "name": "numCorps",
            "nameLocation": "193:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 286,
            "src": "188:13:1",
=======
            "id": 150,
            "mutability": "mutable",
            "name": "numCorps",
            "nameLocation": "239:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 333,
            "src": "234:13:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 121,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "188:4:1",
=======
              "id": 149,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "234:4:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 125,
            "mutability": "mutable",
            "name": "active",
            "nameLocation": "266:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 286,
            "src": "261:18:1",
=======
            "id": 153,
            "mutability": "mutable",
            "name": "active",
            "nameLocation": "312:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 333,
            "src": "307:18:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 123,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "261:4:1",
=======
              "id": 151,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "307:4:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
<<<<<<< HEAD
              "id": 124,
=======
              "id": 152,
>>>>>>> main
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
<<<<<<< HEAD
              "src": "275:4:1",
=======
              "src": "321:4:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "CorporateFactory.corporate",
<<<<<<< HEAD
            "id": 132,
            "members": [
              {
                "constant": false,
                "id": 127,
                "mutability": "mutable",
                "name": "corpAddress",
                "nameLocation": "321:11:1",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "313:19:1",
=======
            "id": 160,
            "members": [
              {
                "constant": false,
                "id": 155,
                "mutability": "mutable",
                "name": "corpAddress",
                "nameLocation": "367:11:1",
                "nodeType": "VariableDeclaration",
                "scope": 160,
                "src": "359:19:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 126,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "313:7:1",
=======
                  "id": 154,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "359:7:1",
>>>>>>> main
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 129,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "347:2:1",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "342:7:1",
=======
                "id": 157,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "393:2:1",
                "nodeType": "VariableDeclaration",
                "scope": 160,
                "src": "388:7:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 128,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "342:4:1",
=======
                  "id": 156,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "388:4:1",
>>>>>>> main
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 131,
                "mutability": "mutable",
                "name": "valid",
                "nameLocation": "364:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "359:10:1",
=======
                "id": 159,
                "mutability": "mutable",
                "name": "valid",
                "nameLocation": "410:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 160,
                "src": "405:10:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 130,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "359:4:1",
=======
                  "id": 158,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "405:4:1",
>>>>>>> main
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "corporate",
<<<<<<< HEAD
            "nameLocation": "293:9:1",
            "nodeType": "StructDefinition",
            "scope": 286,
            "src": "286:90:1",
=======
            "nameLocation": "339:9:1",
            "nodeType": "StructDefinition",
            "scope": 333,
            "src": "332:90:1",
>>>>>>> main
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 140,
              "nodeType": "Block",
              "src": "396:35:1",
              "statements": [
                {
                  "expression": {
                    "id": 138,
=======
              "id": 175,
              "nodeType": "Block",
              "src": "454:59:1",
              "statements": [
                {
                  "expression": {
                    "id": 169,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 135,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "406:5:1",
=======
                      "id": 166,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 140,
                      "src": "464:5:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
<<<<<<< HEAD
                        "id": 136,
=======
                        "id": 167,
>>>>>>> main
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                        "src": "414:3:1",
=======
                        "src": "472:3:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
<<<<<<< HEAD
                      "id": 137,
=======
                      "id": 168,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "src": "414:10:1",
=======
                      "src": "472:10:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "src": "406:18:1",
=======
                    "src": "464:18:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "406:18:1"
                }
              ]
            },
            "id": 141,
=======
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "464:18:1"
                },
                {
                  "expression": {
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 171,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "492:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Admin_$134",
                        "typeString": "contract Admin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 172,
                      "name": "admin_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
                      "src": "500:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Admin_$134",
                        "typeString": "contract Admin"
                      }
                    },
                    "src": "492:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Admin_$134",
                      "typeString": "contract Admin"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "492:14:1"
                }
              ]
            },
            "id": 176,
>>>>>>> main
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "393:2:1"
            },
            "returnParameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "396:0:1"
            },
            "scope": 286,
            "src": "382:49:1",
=======
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "admin_",
                  "nameLocation": "446:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "440:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Admin_$134",
                    "typeString": "contract Admin"
                  },
                  "typeName": {
                    "id": 162,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 161,
                      "name": "Admin",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 134,
                      "src": "440:5:1"
                    },
                    "referencedDeclaration": 134,
                    "src": "440:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Admin_$134",
                      "typeString": "contract Admin"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "439:14:1"
            },
            "returnParameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "454:0:1"
            },
            "scope": 333,
            "src": "428:85:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 181,
              "nodeType": "Block",
              "src": "530:186:1",
              "statements": [
                {
                  "assignments": [
                    154
=======
              "id": 220,
              "nodeType": "Block",
              "src": "615:204:1",
              "statements": [
                {
                  "assignments": [
                    189
>>>>>>> main
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 154,
                      "mutability": "mutable",
                      "name": "newCorp",
                      "nameLocation": "550:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 181,
                      "src": "540:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Corporate_$516",
                        "typeString": "contract Corporate"
                      },
                      "typeName": {
                        "id": 153,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 152,
                          "name": "Corporate",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 516,
                          "src": "540:9:1"
                        },
                        "referencedDeclaration": 516,
                        "src": "540:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Corporate_$516",
=======
                      "id": 189,
                      "mutability": "mutable",
                      "name": "newCorp",
                      "nameLocation": "635:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 220,
                      "src": "625:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Corporate_$573",
                        "typeString": "contract Corporate"
                      },
                      "typeName": {
                        "id": 188,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 187,
                          "name": "Corporate",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 573,
                          "src": "625:9:1"
                        },
                        "referencedDeclaration": 573,
                        "src": "625:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Corporate_$573",
>>>>>>> main
                          "typeString": "contract Corporate"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 161,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 158,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "574:5:1",
=======
                  "id": 197,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 193,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "659:5:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 159,
                        "name": "corpName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "580:8:1",
=======
                        "id": 194,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "665:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Admin_$134",
                          "typeString": "contract Admin"
                        }
                      },
                      {
                        "id": 195,
                        "name": "corpName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "671:8:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
<<<<<<< HEAD
=======
                          "typeIdentifier": "t_contract$_Admin_$134",
                          "typeString": "contract Admin"
                        },
                        {
>>>>>>> main
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
<<<<<<< HEAD
                      "id": 157,
=======
                      "id": 192,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
<<<<<<< HEAD
                      "src": "560:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_Corporate_$516_$",
                        "typeString": "function (address,string memory) returns (contract Corporate)"
                      },
                      "typeName": {
                        "id": 156,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 155,
                          "name": "Corporate",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 516,
                          "src": "564:9:1"
                        },
                        "referencedDeclaration": 516,
                        "src": "564:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Corporate_$516",
=======
                      "src": "645:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_contract$_Admin_$134_$_t_string_memory_ptr_$returns$_t_contract$_Corporate_$573_$",
                        "typeString": "function (address,contract Admin,string memory) returns (contract Corporate)"
                      },
                      "typeName": {
                        "id": 191,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 190,
                          "name": "Corporate",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 573,
                          "src": "649:9:1"
                        },
                        "referencedDeclaration": 573,
                        "src": "649:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Corporate_$573",
>>>>>>> main
                          "typeString": "contract Corporate"
                        }
                      }
                    },
<<<<<<< HEAD
                    "id": 160,
=======
                    "id": 196,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "560:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Corporate_$516",
=======
                    "src": "645:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Corporate_$573",
>>>>>>> main
                      "typeString": "contract Corporate"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "540:49:1"
                },
                {
                  "expression": {
                    "id": 173,
=======
                  "src": "625:55:1"
                },
                {
                  "expression": {
                    "id": 209,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 162,
                        "name": "corporates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "599:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$132_storage_$",
                          "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                        }
                      },
                      "id": 164,
                      "indexExpression": {
                        "id": 163,
                        "name": "numCorps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "610:8:1",
=======
                        "id": 198,
                        "name": "corporates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "690:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$160_storage_$",
                          "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                        }
                      },
                      "id": 200,
                      "indexExpression": {
                        "id": 199,
                        "name": "numCorps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150,
                        "src": "701:8:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "599:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$132_storage",
=======
                      "src": "690:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$160_storage",
>>>>>>> main
                        "typeString": "struct CorporateFactory.corporate storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 168,
                              "name": "newCorp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 154,
                              "src": "640:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Corporate_$516",
=======
                              "id": 204,
                              "name": "newCorp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 189,
                              "src": "731:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Corporate_$573",
>>>>>>> main
                                "typeString": "contract Corporate"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
<<<<<<< HEAD
                                "typeIdentifier": "t_contract$_Corporate_$516",
                                "typeString": "contract Corporate"
                              }
                            ],
                            "id": 167,
=======
                                "typeIdentifier": "t_contract$_Corporate_$573",
                                "typeString": "contract Corporate"
                              }
                            ],
                            "id": 203,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "632:7:1",
=======
                            "src": "723:7:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 166,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "632:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 169,
=======
                              "id": 202,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "723:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 205,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "632:16:1",
=======
                          "src": "723:16:1",
>>>>>>> main
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
<<<<<<< HEAD
                          "id": 170,
                          "name": "numCorps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122,
                          "src": "650:8:1",
=======
                          "id": 206,
                          "name": "numCorps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 150,
                          "src": "741:8:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
<<<<<<< HEAD
                          "id": 171,
=======
                          "id": 207,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "660:4:1",
=======
                          "src": "751:4:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
<<<<<<< HEAD
                        "id": 165,
                        "name": "corporate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "622:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_corporate_$132_storage_ptr_$",
                          "typeString": "type(struct CorporateFactory.corporate storage pointer)"
                        }
                      },
                      "id": 172,
=======
                        "id": 201,
                        "name": "corporate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "713:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_corporate_$160_storage_ptr_$",
                          "typeString": "type(struct CorporateFactory.corporate storage pointer)"
                        }
                      },
                      "id": 208,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "622:43:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$132_memory_ptr",
                        "typeString": "struct CorporateFactory.corporate memory"
                      }
                    },
                    "src": "599:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_corporate_$132_storage",
                      "typeString": "struct CorporateFactory.corporate storage ref"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "599:66:1"
                },
                {
                  "expression": {
                    "id": 177,
=======
                      "src": "713:43:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$160_memory_ptr",
                        "typeString": "struct CorporateFactory.corporate memory"
                      }
                    },
                    "src": "690:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_corporate_$160_storage",
                      "typeString": "struct CorporateFactory.corporate storage ref"
                    }
                  },
                  "id": 210,
                  "nodeType": "ExpressionStatement",
                  "src": "690:66:1"
                },
                {
                  "expression": {
                    "id": 213,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 175,
                      "name": "numCorps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122,
                      "src": "675:8:1",
=======
                      "id": 211,
                      "name": "numCorps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "766:8:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
<<<<<<< HEAD
                      "id": 176,
=======
                      "id": 212,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "687:1:1",
=======
                      "src": "778:1:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
<<<<<<< HEAD
                    "src": "675:13:1",
=======
                    "src": "766:13:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "675:13:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "705:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 151,
                  "id": 180,
                  "nodeType": "Return",
                  "src": "698:11:1"
=======
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "766:13:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 217,
                        "name": "newCorp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 189,
                        "src": "804:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Corporate_$573",
                          "typeString": "contract Corporate"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Corporate_$573",
                          "typeString": "contract Corporate"
                        }
                      ],
                      "id": 216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "796:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 215,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "796:7:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "796:16:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 186,
                  "id": 219,
                  "nodeType": "Return",
                  "src": "789:23:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "a5102b37",
<<<<<<< HEAD
            "id": 182,
=======
            "id": 221,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 146,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 145,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 274,
                  "src": "489:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "489:12:1"
              },
              {
                "id": 148,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 147,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 285,
                  "src": "502:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "502:14:1"
              }
            ],
            "name": "createCorp",
            "nameLocation": "446:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 144,
=======
                "id": 181,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 180,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 321,
                  "src": "571:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "571:12:1"
              },
              {
                "id": 183,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 182,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 332,
                  "src": "584:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "584:14:1"
              }
            ],
            "name": "createCorp",
            "nameLocation": "528:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 179,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 143,
                  "mutability": "mutable",
                  "name": "corpName",
                  "nameLocation": "471:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 182,
                  "src": "457:22:1",
=======
                  "id": 178,
                  "mutability": "mutable",
                  "name": "corpName",
                  "nameLocation": "553:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "539:22:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 142,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "457:6:1",
=======
                    "id": 177,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "539:6:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "456:24:1"
            },
            "returnParameters": {
              "id": 151,
=======
              "src": "538:24:1"
            },
            "returnParameters": {
              "id": 186,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 150,
=======
                  "id": 185,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 182,
                  "src": "525:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "525:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
=======
                  "scope": 221,
                  "src": "607:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "607:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
>>>>>>> main
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "524:6:1"
            },
            "scope": 286,
            "src": "437:279:1",
=======
              "src": "606:9:1"
            },
            "scope": 333,
            "src": "519:300:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 198,
              "nodeType": "Block",
              "src": "811:50:1",
=======
              "id": 235,
              "nodeType": "Block",
              "src": "901:50:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 193,
                        "name": "corporates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "828:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$132_storage_$",
                          "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                        }
                      },
                      "id": 195,
                      "indexExpression": {
                        "id": 194,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 184,
                        "src": "839:2:1",
=======
                        "id": 230,
                        "name": "corporates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "918:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$160_storage_$",
                          "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                        }
                      },
                      "id": 232,
                      "indexExpression": {
                        "id": 231,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "929:2:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "828:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$132_storage",
                        "typeString": "struct CorporateFactory.corporate storage ref"
                      }
                    },
                    "id": 196,
=======
                      "src": "918:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$160_storage",
                        "typeString": "struct CorporateFactory.corporate storage ref"
                      }
                    },
                    "id": 233,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "corpAddress",
                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                    "referencedDeclaration": 127,
                    "src": "828:26:1",
=======
                    "referencedDeclaration": 155,
                    "src": "918:26:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 192,
                  "id": 197,
                  "nodeType": "Return",
                  "src": "821:33:1"
=======
                  "functionReturnParameters": 229,
                  "id": 234,
                  "nodeType": "Return",
                  "src": "911:33:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "010d6663",
<<<<<<< HEAD
            "id": 199,
=======
            "id": 236,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 187,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 186,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 274,
                  "src": "765:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "765:12:1"
              },
              {
                "id": 189,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 188,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 285,
                  "src": "778:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "778:14:1"
              }
            ],
            "name": "getCorporate",
            "nameLocation": "731:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 185,
=======
                "id": 226,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 225,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 332,
                  "src": "868:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "868:14:1"
              }
            ],
            "name": "getCorporate",
            "nameLocation": "834:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 224,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 184,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "749:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "744:7:1",
=======
                  "id": 223,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "852:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "847:7:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 183,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "744:4:1",
=======
                    "id": 222,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "847:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "743:9:1"
            },
            "returnParameters": {
              "id": 192,
=======
              "src": "846:9:1"
            },
            "returnParameters": {
              "id": 229,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 191,
=======
                  "id": 228,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 199,
                  "src": "801:7:1",
=======
                  "scope": 236,
                  "src": "891:7:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "801:7:1",
=======
                    "id": 227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "891:7:1",
>>>>>>> main
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "800:9:1"
            },
            "scope": 286,
            "src": "722:139:1",
=======
              "src": "890:9:1"
            },
            "scope": 333,
            "src": "825:126:1",
>>>>>>> main
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 214,
              "nodeType": "Block",
              "src": "937:57:1",
              "statements": [
                {
                  "expression": {
                    "id": 209,
=======
              "id": 251,
              "nodeType": "Block",
              "src": "1027:57:1",
              "statements": [
                {
                  "expression": {
                    "id": 246,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 206,
                      "name": "active",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 125,
                      "src": "947:6:1",
=======
                      "id": 243,
                      "name": "active",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153,
                      "src": "1037:6:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 208,
=======
                      "id": 245,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
<<<<<<< HEAD
                      "src": "956:7:1",
                      "subExpression": {
                        "id": 207,
                        "name": "active",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "957:6:1",
=======
                      "src": "1046:7:1",
                      "subExpression": {
                        "id": 244,
                        "name": "active",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "1047:6:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
<<<<<<< HEAD
                    "src": "947:16:1",
=======
                    "src": "1037:16:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 210,
                  "nodeType": "ExpressionStatement",
                  "src": "947:16:1"
=======
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "1037:16:1"
>>>>>>> main
                },
                {
                  "expression": {
                    "components": [
                      {
<<<<<<< HEAD
                        "id": 211,
                        "name": "active",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "980:6:1",
=======
                        "id": 248,
                        "name": "active",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "1070:6:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
<<<<<<< HEAD
                    "id": 212,
=======
                    "id": 249,
>>>>>>> main
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
<<<<<<< HEAD
                    "src": "979:8:1",
=======
                    "src": "1069:8:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 205,
                  "id": 213,
                  "nodeType": "Return",
                  "src": "973:14:1"
=======
                  "functionReturnParameters": 242,
                  "id": 250,
                  "nodeType": "Return",
                  "src": "1063:14:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "4aa2f240",
<<<<<<< HEAD
            "id": 215,
=======
            "id": 252,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 202,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 201,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 274,
                  "src": "910:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "910:12:1"
              }
            ],
            "name": "toggleContractActivation",
            "nameLocation": "876:24:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "900:2:1"
            },
            "returnParameters": {
              "id": 205,
=======
                "id": 239,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 238,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 321,
                  "src": "1000:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1000:12:1"
              }
            ],
            "name": "toggleContractActivation",
            "nameLocation": "966:24:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "990:2:1"
            },
            "returnParameters": {
              "id": 242,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 204,
=======
                  "id": 241,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 215,
                  "src": "932:4:1",
=======
                  "scope": 252,
                  "src": "1022:4:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 203,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "932:4:1",
=======
                    "id": 240,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1022:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "931:6:1"
            },
            "scope": 286,
            "src": "867:127:1",
=======
              "src": "1021:6:1"
            },
            "scope": 333,
            "src": "957:127:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 233,
              "nodeType": "Block",
              "src": "1084:45:1",
              "statements": [
                {
                  "expression": {
                    "id": 231,
=======
              "id": 272,
              "nodeType": "Block",
              "src": "1174:66:1",
              "statements": [
                {
                  "expression": {
                    "id": 268,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
<<<<<<< HEAD
                          "id": 226,
                          "name": "corporates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120,
                          "src": "1094:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$132_storage_$",
                            "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                          }
                        },
                        "id": 228,
                        "indexExpression": {
                          "id": 227,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 217,
                          "src": "1105:2:1",
=======
                          "id": 263,
                          "name": "corporates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 148,
                          "src": "1184:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$160_storage_$",
                            "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                          }
                        },
                        "id": 265,
                        "indexExpression": {
                          "id": 264,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 254,
                          "src": "1195:2:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                        "src": "1094:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_corporate_$132_storage",
                          "typeString": "struct CorporateFactory.corporate storage ref"
                        }
                      },
                      "id": 229,
=======
                        "src": "1184:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_corporate_$160_storage",
                          "typeString": "struct CorporateFactory.corporate storage ref"
                        }
                      },
                      "id": 266,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "valid",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 131,
                      "src": "1094:20:1",
=======
                      "referencedDeclaration": 159,
                      "src": "1184:20:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
<<<<<<< HEAD
                      "id": 230,
=======
                      "id": 267,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "1117:5:1",
=======
                      "src": "1207:5:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
<<<<<<< HEAD
                    "src": "1094:28:1",
=======
                    "src": "1184:28:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "1094:28:1"
=======
                  "id": 269,
                  "nodeType": "ExpressionStatement",
                  "src": "1184:28:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1229:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 262,
                  "id": 271,
                  "nodeType": "Return",
                  "src": "1222:11:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "1f2e4f06",
<<<<<<< HEAD
            "id": 234,
=======
            "id": 273,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 220,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 219,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 274,
                  "src": "1042:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1042:12:1"
              },
              {
                "id": 222,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 221,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 285,
                  "src": "1055:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1055:14:1"
              }
            ],
            "name": "disableCorporate",
            "nameLocation": "1009:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 218,
=======
                "id": 257,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 256,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 321,
                  "src": "1132:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1132:12:1"
              },
              {
                "id": 259,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 258,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 332,
                  "src": "1145:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1145:14:1"
              }
            ],
            "name": "disableCorporate",
            "nameLocation": "1099:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 255,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 217,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1031:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "1026:7:1",
=======
                  "id": 254,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1121:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "1116:7:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 216,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1026:4:1",
=======
                    "id": 253,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1116:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1025:9:1"
            },
            "returnParameters": {
              "id": 225,
=======
              "src": "1115:9:1"
            },
            "returnParameters": {
              "id": 262,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 224,
=======
                  "id": 261,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 234,
                  "src": "1079:4:1",
=======
                  "scope": 273,
                  "src": "1169:4:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 223,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1079:4:1",
=======
                    "id": 260,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1169:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1078:6:1"
            },
            "scope": 286,
            "src": "1000:129:1",
=======
              "src": "1168:6:1"
            },
            "scope": 333,
            "src": "1090:150:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 261,
              "nodeType": "Block",
              "src": "1216:129:1",
=======
              "id": 300,
              "nodeType": "Block",
              "src": "1327:129:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 252,
=======
                        "id": 291,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
<<<<<<< HEAD
                              "id": 244,
                              "name": "corporates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 120,
                              "src": "1234:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$132_storage_$",
                                "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                              }
                            },
                            "id": 246,
                            "indexExpression": {
                              "id": 245,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 236,
                              "src": "1245:2:1",
=======
                              "id": 283,
                              "name": "corporates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 148,
                              "src": "1345:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$160_storage_$",
                                "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                              }
                            },
                            "id": 285,
                            "indexExpression": {
                              "id": 284,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 275,
                              "src": "1356:2:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "1234:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_corporate_$132_storage",
                              "typeString": "struct CorporateFactory.corporate storage ref"
                            }
                          },
                          "id": 247,
=======
                            "src": "1345:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_corporate_$160_storage",
                              "typeString": "struct CorporateFactory.corporate storage ref"
                            }
                          },
                          "id": 286,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "corpAddress",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 127,
                          "src": "1234:26:1",
=======
                          "referencedDeclaration": 155,
                          "src": "1345:26:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
<<<<<<< HEAD
                              "id": 250,
=======
                              "id": 289,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "1272:1:1",
=======
                              "src": "1383:1:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
<<<<<<< HEAD
                            "id": 249,
=======
                            "id": 288,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "1264:7:1",
=======
                            "src": "1375:7:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 248,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1264:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 251,
=======
                              "id": 287,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1375:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 290,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "1264:10:1",
=======
                          "src": "1375:10:1",
>>>>>>> main
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "1234:40:1",
=======
                        "src": "1345:40:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420612076616c696420636f72706f72617465",
<<<<<<< HEAD
                        "id": 253,
=======
                        "id": 292,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "1276:23:1",
=======
                        "src": "1387:23:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f6bc05d6cfec2f3d11cc140380ae93e4894c4ff78d29d480116a9b54f690ed81",
                          "typeString": "literal_string \"Not a valid corporate\""
                        },
                        "value": "Not a valid corporate"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f6bc05d6cfec2f3d11cc140380ae93e4894c4ff78d29d480116a9b54f690ed81",
                          "typeString": "literal_string \"Not a valid corporate\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 243,
=======
                      "id": 282,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "1226:7:1",
=======
                      "src": "1337:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 254,
=======
                    "id": 293,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1226:74:1",
=======
                    "src": "1337:74:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 255,
                  "nodeType": "ExpressionStatement",
                  "src": "1226:74:1"
=======
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "1337:74:1"
>>>>>>> main
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 256,
                        "name": "corporates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "1317:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$132_storage_$",
                          "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                        }
                      },
                      "id": 258,
                      "indexExpression": {
                        "id": 257,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "1328:2:1",
=======
                        "id": 295,
                        "name": "corporates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "1428:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$160_storage_$",
                          "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                        }
                      },
                      "id": 297,
                      "indexExpression": {
                        "id": 296,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "1439:2:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "1317:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$132_storage",
                        "typeString": "struct CorporateFactory.corporate storage ref"
                      }
                    },
                    "id": 259,
=======
                      "src": "1428:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$160_storage",
                        "typeString": "struct CorporateFactory.corporate storage ref"
                      }
                    },
                    "id": 298,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "valid",
                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                    "referencedDeclaration": 131,
                    "src": "1317:20:1",
=======
                    "referencedDeclaration": 159,
                    "src": "1428:20:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 242,
                  "id": 260,
                  "nodeType": "Return",
                  "src": "1310:27:1"
=======
                  "functionReturnParameters": 281,
                  "id": 299,
                  "nodeType": "Return",
                  "src": "1421:27:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "dad15402",
<<<<<<< HEAD
            "id": 262,
=======
            "id": 301,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 239,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 238,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 285,
                  "src": "1187:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1187:14:1"
              }
            ],
            "name": "checkIfCorporateValid",
            "nameLocation": "1144:21:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 237,
=======
                "id": 278,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 277,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 332,
                  "src": "1298:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1298:14:1"
              }
            ],
            "name": "checkIfCorporateValid",
            "nameLocation": "1255:21:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 276,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 236,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1171:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "1166:7:1",
=======
                  "id": 275,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1282:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 301,
                  "src": "1277:7:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 235,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1166:4:1",
=======
                    "id": 274,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1277:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1165:9:1"
            },
            "returnParameters": {
              "id": 242,
=======
              "src": "1276:9:1"
            },
            "returnParameters": {
              "id": 281,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 241,
=======
                  "id": 280,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 262,
                  "src": "1211:4:1",
=======
                  "scope": 301,
                  "src": "1322:4:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 240,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1211:4:1",
=======
                    "id": 279,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1322:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1210:6:1"
            },
            "scope": 286,
            "src": "1135:210:1",
=======
              "src": "1321:6:1"
            },
            "scope": 333,
            "src": "1246:210:1",
>>>>>>> main
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 273,
              "nodeType": "Block",
              "src": "1377:99:1",
=======
              "id": 320,
              "nodeType": "Block",
              "src": "1488:137:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
<<<<<<< HEAD
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 268,
=======
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 315,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "expression": {
                            "id": 265,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1395:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1395:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 267,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "1409:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1395:19:1",
=======
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 304,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1506:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1506:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 306,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "1520:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1506:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 308,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1529:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 309,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1529:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 312,
                                "name": "admin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 143,
                                "src": "1551:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Admin_$134",
                                  "typeString": "contract Admin"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Admin_$134",
                                  "typeString": "contract Admin"
                                }
                              ],
                              "id": 311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1543:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 310,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1543:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1543:14:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1529:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1506:51:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
<<<<<<< HEAD
                        "hexValue": "4f6e6c7920746865206f776e65722063616e2061636365737320746869732066756e6374696f6e",
                        "id": 269,
=======
                        "hexValue": "4f6e6c7920746865206f776e65722f61646d696e2063616e2061636365737320746869732066756e6374696f6e",
                        "id": 316,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "1416:41:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d16f59b504098a079530c74a740fd9528074bf9303890ee5d92c6cda0f420382",
                          "typeString": "literal_string \"Only the owner can access this function\""
                        },
                        "value": "Only the owner can access this function"
=======
                        "src": "1559:47:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9117372dee0cc0d2de362cb86d76bf0d641de1fdff920d9111bc207da94e8744",
                          "typeString": "literal_string \"Only the owner/admin can access this function\""
                        },
                        "value": "Only the owner/admin can access this function"
>>>>>>> main
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_stringliteral_d16f59b504098a079530c74a740fd9528074bf9303890ee5d92c6cda0f420382",
                          "typeString": "literal_string \"Only the owner can access this function\""
                        }
                      ],
                      "id": 264,
=======
                          "typeIdentifier": "t_stringliteral_9117372dee0cc0d2de362cb86d76bf0d641de1fdff920d9111bc207da94e8744",
                          "typeString": "literal_string \"Only the owner/admin can access this function\""
                        }
                      ],
                      "id": 303,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "1387:7:1",
=======
                      "src": "1498:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 270,
=======
                    "id": 317,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1387:71:1",
=======
                    "src": "1498:109:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "1387:71:1"
                },
                {
                  "id": 272,
                  "nodeType": "PlaceholderStatement",
                  "src": "1468:1:1"
                }
              ]
            },
            "id": 274,
            "name": "permissioned",
            "nameLocation": "1364:12:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1377:0:1"
            },
            "src": "1355:121:1",
=======
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "1498:109:1"
                },
                {
                  "id": 319,
                  "nodeType": "PlaceholderStatement",
                  "src": "1617:1:1"
                }
              ]
            },
            "id": 321,
            "name": "permissioned",
            "nameLocation": "1475:12:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1488:0:1"
            },
            "src": "1466:159:1",
>>>>>>> main
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 284,
              "nodeType": "Block",
              "src": "1505:80:1",
=======
              "id": 331,
              "nodeType": "Block",
              "src": "1654:80:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
<<<<<<< HEAD
                        "id": 279,
=======
                        "id": 326,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 277,
                          "name": "active",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 125,
                          "src": "1523:6:1",
=======
                          "id": 324,
                          "name": "active",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153,
                          "src": "1672:6:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
<<<<<<< HEAD
                          "id": 278,
=======
                          "id": 325,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "1533:4:1",
=======
                          "src": "1682:4:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
<<<<<<< HEAD
                        "src": "1523:14:1",
=======
                        "src": "1672:14:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e7472616374206e6f206c6f6e67657220616374697665",
<<<<<<< HEAD
                        "id": 280,
=======
                        "id": 327,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "1539:27:1",
=======
                        "src": "1688:27:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f58632cc2fd82b679e2eb5e7970f18e723cc77db983190e019e39c32cbac431",
                          "typeString": "literal_string \"Contract no longer active\""
                        },
                        "value": "Contract no longer active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f58632cc2fd82b679e2eb5e7970f18e723cc77db983190e019e39c32cbac431",
                          "typeString": "literal_string \"Contract no longer active\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 276,
=======
                      "id": 323,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "1515:7:1",
=======
                      "src": "1664:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 281,
=======
                    "id": 328,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1515:52:1",
=======
                    "src": "1664:52:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "1515:52:1"
                },
                {
                  "id": 283,
                  "nodeType": "PlaceholderStatement",
                  "src": "1577:1:1"
                }
              ]
            },
            "id": 285,
            "name": "activeContract",
            "nameLocation": "1491:14:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1505:0:1"
            },
            "src": "1482:103:1",
=======
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "1664:52:1"
                },
                {
                  "id": 330,
                  "nodeType": "PlaceholderStatement",
                  "src": "1726:1:1"
                }
              ]
            },
            "id": 332,
            "name": "activeContract",
            "nameLocation": "1640:14:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1654:0:1"
            },
            "src": "1631:103:1",
>>>>>>> main
            "virtual": false,
            "visibility": "internal"
          }
        ],
<<<<<<< HEAD
        "scope": 658,
        "src": "61:1526:1",
=======
        "scope": 726,
        "src": "83:1653:1",
>>>>>>> main
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
<<<<<<< HEAD
          657
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 516,
        "linearizedBaseContracts": [
          516
        ],
        "name": "Corporate",
        "nameLocation": "1598:9:1",
=======
          725
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 573,
        "linearizedBaseContracts": [
          573
        ],
        "name": "Corporate",
        "nameLocation": "1747:9:1",
>>>>>>> main
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "89165e40",
<<<<<<< HEAD
            "id": 288,
            "mutability": "mutable",
            "name": "creator_",
            "nameLocation": "1629:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "1614:23:1",
=======
            "id": 335,
            "mutability": "mutable",
            "name": "creator_",
            "nameLocation": "1778:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "1763:23:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 287,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1614:7:1",
=======
              "id": 334,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1763:7:1",
>>>>>>> main
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
<<<<<<< HEAD
            "id": 290,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "1685:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "1670:20:1",
=======
            "id": 337,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "1834:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "1819:20:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 289,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1670:7:1",
=======
              "id": 336,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1819:7:1",
>>>>>>> main
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "functionSelector": "34929e9a",
            "id": 292,
            "mutability": "mutable",
            "name": "corporate_id",
            "nameLocation": "1751:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "1739:24:1",
=======
            "functionSelector": "f851a440",
            "id": 340,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "1901:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "1888:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Admin_$134",
              "typeString": "contract Admin"
            },
            "typeName": {
              "id": 339,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 338,
                "name": "Admin",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 134,
                "src": "1888:5:1"
              },
              "referencedDeclaration": 134,
              "src": "1888:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Admin_$134",
                "typeString": "contract Admin"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "34929e9a",
            "id": 342,
            "mutability": "mutable",
            "name": "corporate_id",
            "nameLocation": "1924:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "1912:24:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 291,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1739:4:1",
=======
              "id": 341,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1912:4:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8ba4d864",
<<<<<<< HEAD
            "id": 294,
            "mutability": "mutable",
            "name": "corporate_name_",
            "nameLocation": "1783:15:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "1769:29:1",
=======
            "id": 344,
            "mutability": "mutable",
            "name": "corporate_name_",
            "nameLocation": "1956:15:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "1942:29:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 293,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1769:6:1",
=======
              "id": 343,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1942:6:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "869080bf",
<<<<<<< HEAD
            "id": 299,
            "mutability": "mutable",
            "name": "subsidiaries",
            "nameLocation": "1859:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "1828:43:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$314_storage_$",
              "typeString": "mapping(address => struct Corporate.sub)"
            },
            "typeName": {
              "id": 298,
              "keyType": {
                "id": 295,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1836:7:1",
=======
            "id": 349,
            "mutability": "mutable",
            "name": "subsidiaries",
            "nameLocation": "2032:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "2001:43:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$364_storage_$",
              "typeString": "mapping(address => struct Corporate.sub)"
            },
            "typeName": {
              "id": 348,
              "keyType": {
                "id": 345,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2009:7:1",
>>>>>>> main
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "1828:23:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$314_storage_$",
                "typeString": "mapping(address => struct Corporate.sub)"
              },
              "valueType": {
                "id": 297,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 296,
                  "name": "sub",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 314,
                  "src": "1847:3:1"
                },
                "referencedDeclaration": 314,
                "src": "1847:3:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_sub_$314_storage_ptr",
=======
              "src": "2001:23:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$364_storage_$",
                "typeString": "mapping(address => struct Corporate.sub)"
              },
              "valueType": {
                "id": 347,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 346,
                  "name": "sub",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 364,
                  "src": "2020:3:1"
                },
                "referencedDeclaration": 364,
                "src": "2020:3:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_sub_$364_storage_ptr",
>>>>>>> main
                  "typeString": "struct Corporate.sub"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f8a64f9a",
<<<<<<< HEAD
            "id": 302,
            "mutability": "mutable",
            "name": "subs",
            "nameLocation": "1939:4:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "1922:21:1",
=======
            "id": 352,
            "mutability": "mutable",
            "name": "subs",
            "nameLocation": "2112:4:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "2095:21:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
<<<<<<< HEAD
                "id": 300,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1922:7:1",
=======
                "id": 350,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2095:7:1",
>>>>>>> main
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
<<<<<<< HEAD
              "id": 301,
              "nodeType": "ArrayTypeName",
              "src": "1922:9:1",
=======
              "id": 351,
              "nodeType": "ArrayTypeName",
              "src": "2095:9:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "93e59dc1",
<<<<<<< HEAD
            "id": 305,
            "mutability": "mutable",
            "name": "whitelist",
            "nameLocation": "2030:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "2013:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Whitelist_$1298",
              "typeString": "contract Whitelist"
            },
            "typeName": {
              "id": 304,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 303,
                "name": "Whitelist",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1298,
                "src": "2013:9:1"
              },
              "referencedDeclaration": 1298,
              "src": "2013:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Whitelist_$1298",
=======
            "id": 355,
            "mutability": "mutable",
            "name": "whitelist",
            "nameLocation": "2203:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "2186:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Whitelist_$1425",
              "typeString": "contract Whitelist"
            },
            "typeName": {
              "id": 354,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 353,
                "name": "Whitelist",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1425,
                "src": "2186:9:1"
              },
              "referencedDeclaration": 1425,
              "src": "2186:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Whitelist_$1425",
>>>>>>> main
                "typeString": "contract Whitelist"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 307,
            "mutability": "mutable",
            "name": "valid",
            "nameLocation": "2092:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "2087:10:1",
=======
            "id": 357,
            "mutability": "mutable",
            "name": "valid",
            "nameLocation": "2265:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "2260:10:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 306,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2087:4:1",
=======
              "id": 356,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2260:4:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Corporate.sub",
<<<<<<< HEAD
            "id": 314,
            "members": [
              {
                "constant": false,
                "id": 309,
                "mutability": "mutable",
                "name": "subAddress",
                "nameLocation": "2172:10:1",
                "nodeType": "VariableDeclaration",
                "scope": 314,
                "src": "2164:18:1",
=======
            "id": 364,
            "members": [
              {
                "constant": false,
                "id": 359,
                "mutability": "mutable",
                "name": "subAddress",
                "nameLocation": "2345:10:1",
                "nodeType": "VariableDeclaration",
                "scope": 364,
                "src": "2337:18:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 308,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2164:7:1",
=======
                  "id": 358,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2337:7:1",
>>>>>>> main
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 311,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "2197:2:1",
                "nodeType": "VariableDeclaration",
                "scope": 314,
                "src": "2192:7:1",
=======
                "id": 361,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "2370:2:1",
                "nodeType": "VariableDeclaration",
                "scope": 364,
                "src": "2365:7:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 310,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2192:4:1",
=======
                  "id": 360,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2365:4:1",
>>>>>>> main
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 313,
                "mutability": "mutable",
                "name": "valid",
                "nameLocation": "2214:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 314,
                "src": "2209:10:1",
=======
                "id": 363,
                "mutability": "mutable",
                "name": "valid",
                "nameLocation": "2387:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 364,
                "src": "2382:10:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 312,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2209:4:1",
=======
                  "id": 362,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2382:4:1",
>>>>>>> main
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "sub",
<<<<<<< HEAD
            "nameLocation": "2150:3:1",
            "nodeType": "StructDefinition",
            "scope": 516,
            "src": "2143:83:1",
=======
            "nameLocation": "2323:3:1",
            "nodeType": "StructDefinition",
            "scope": 573,
            "src": "2316:83:1",
>>>>>>> main
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 338,
              "nodeType": "Block",
              "src": "2357:121:1",
              "statements": [
                {
                  "expression": {
                    "id": 323,
=======
              "id": 395,
              "nodeType": "Block",
              "src": "2544:145:1",
              "statements": [
                {
                  "expression": {
                    "id": 376,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 321,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 290,
                      "src": "2367:5:1",
=======
                      "id": 374,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 337,
                      "src": "2554:5:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 322,
                      "name": "owner_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 316,
                      "src": "2375:6:1",
=======
                      "id": 375,
                      "name": "owner_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 366,
                      "src": "2562:6:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "src": "2367:14:1",
=======
                    "src": "2554:14:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "2367:14:1"
                },
                {
                  "expression": {
                    "id": 328,
=======
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "2554:14:1"
                },
                {
                  "expression": {
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 378,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 340,
                      "src": "2578:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Admin_$134",
                        "typeString": "contract Admin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 379,
                      "name": "admin_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 369,
                      "src": "2586:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Admin_$134",
                        "typeString": "contract Admin"
                      }
                    },
                    "src": "2578:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Admin_$134",
                      "typeString": "contract Admin"
                    }
                  },
                  "id": 381,
                  "nodeType": "ExpressionStatement",
                  "src": "2578:14:1"
                },
                {
                  "expression": {
                    "id": 385,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 325,
                      "name": "creator_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 288,
                      "src": "2391:8:1",
=======
                      "id": 382,
                      "name": "creator_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 335,
                      "src": "2602:8:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
<<<<<<< HEAD
                        "id": 326,
=======
                        "id": 383,
>>>>>>> main
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                        "src": "2402:3:1",
=======
                        "src": "2613:3:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
<<<<<<< HEAD
                      "id": 327,
=======
                      "id": 384,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "src": "2402:10:1",
=======
                      "src": "2613:10:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "src": "2391:21:1",
=======
                    "src": "2602:21:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "2391:21:1"
                },
                {
                  "expression": {
                    "id": 332,
=======
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "2602:21:1"
                },
                {
                  "expression": {
                    "id": 389,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 330,
                      "name": "corporate_name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 294,
                      "src": "2422:15:1",
=======
                      "id": 387,
                      "name": "corporate_name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 344,
                      "src": "2633:15:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 331,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 318,
                      "src": "2440:4:1",
=======
                      "id": 388,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 371,
                      "src": "2651:4:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "2422:22:1",
=======
                    "src": "2633:22:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
<<<<<<< HEAD
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "2422:22:1"
                },
                {
                  "expression": {
                    "id": 336,
=======
                  "id": 390,
                  "nodeType": "ExpressionStatement",
                  "src": "2633:22:1"
                },
                {
                  "expression": {
                    "id": 393,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 334,
                      "name": "valid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 307,
                      "src": "2455:5:1",
=======
                      "id": 391,
                      "name": "valid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 357,
                      "src": "2666:5:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
<<<<<<< HEAD
                      "id": 335,
=======
                      "id": 392,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "2463:4:1",
=======
                      "src": "2674:4:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
<<<<<<< HEAD
                    "src": "2455:12:1",
=======
                    "src": "2666:12:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "2455:12:1"
                }
              ]
            },
            "id": 339,
=======
                  "id": 394,
                  "nodeType": "ExpressionStatement",
                  "src": "2666:12:1"
                }
              ]
            },
            "id": 396,
>>>>>>> main
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 319,
=======
              "id": 372,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 316,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "2330:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 339,
                  "src": "2322:14:1",
=======
                  "id": 366,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "2503:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 396,
                  "src": "2495:14:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 315,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2322:7:1",
=======
                    "id": 365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2495:7:1",
>>>>>>> main
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 318,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "2352:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 339,
                  "src": "2338:18:1",
=======
                  "id": 369,
                  "mutability": "mutable",
                  "name": "admin_",
                  "nameLocation": "2517:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 396,
                  "src": "2511:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Admin_$134",
                    "typeString": "contract Admin"
                  },
                  "typeName": {
                    "id": 368,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 367,
                      "name": "Admin",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 134,
                      "src": "2511:5:1"
                    },
                    "referencedDeclaration": 134,
                    "src": "2511:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Admin_$134",
                      "typeString": "contract Admin"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 371,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "2539:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 396,
                  "src": "2525:18:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 317,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2338:6:1",
=======
                    "id": 370,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2525:6:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2321:36:1"
            },
            "returnParameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2357:0:1"
            },
            "scope": 516,
            "src": "2310:168:1",
=======
              "src": "2494:50:1"
            },
            "returnParameters": {
              "id": 373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2544:0:1"
            },
            "scope": 573,
            "src": "2483:206:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 400,
              "nodeType": "Block",
              "src": "2657:378:1",
=======
              "id": 457,
              "nodeType": "Block",
              "src": "2871:370:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 358,
=======
                        "id": 415,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "arguments": [
                            {
                              "id": 352,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 341,
                              "src": "2760:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 351,
                            "name": "getSubContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 417,
                            "src": "2745:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2745:18:1",
                          "tryCall": false,
=======
                          "baseExpression": {
                            "id": 408,
                            "name": "subs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 352,
                            "src": "2959:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 410,
                          "indexExpression": {
                            "id": 409,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 398,
                            "src": "2964:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2959:8:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
<<<<<<< HEAD
                        "operator": "!=",
=======
                        "operator": "==",
>>>>>>> main
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
<<<<<<< HEAD
                              "id": 356,
=======
                              "id": 413,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "2775:1:1",
=======
                              "src": "2979:1:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
<<<<<<< HEAD
                            "id": 355,
=======
                            "id": 412,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "2767:7:1",
=======
                            "src": "2971:7:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 354,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2767:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 357,
=======
                              "id": 411,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2971:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 414,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "2767:10:1",
=======
                          "src": "2971:10:1",
>>>>>>> main
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "2745:32:1",
=======
                        "src": "2959:22:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "id": 350,
=======
                      "id": 407,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "2737:7:1",
=======
                      "src": "2951:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 359,
=======
                    "id": 416,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2737:41:1",
=======
                    "src": "2951:31:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "2737:41:1"
                },
                {
                  "assignments": [
                    363
=======
                  "id": 417,
                  "nodeType": "ExpressionStatement",
                  "src": "2951:31:1"
                },
                {
                  "assignments": [
                    420
>>>>>>> main
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 363,
                      "mutability": "mutable",
                      "name": "newSub",
                      "nameLocation": "2799:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 400,
                      "src": "2788:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Subsidiary_$657",
                        "typeString": "contract Subsidiary"
                      },
                      "typeName": {
                        "id": 362,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 361,
                          "name": "Subsidiary",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 657,
                          "src": "2788:10:1"
                        },
                        "referencedDeclaration": 657,
                        "src": "2788:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Subsidiary_$657",
=======
                      "id": 420,
                      "mutability": "mutable",
                      "name": "newSub",
                      "nameLocation": "3003:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 457,
                      "src": "2992:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Subsidiary_$725",
                        "typeString": "contract Subsidiary"
                      },
                      "typeName": {
                        "id": 419,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 418,
                          "name": "Subsidiary",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 725,
                          "src": "2992:10:1"
                        },
                        "referencedDeclaration": 725,
                        "src": "2992:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Subsidiary_$725",
>>>>>>> main
                          "typeString": "contract Subsidiary"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 372,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 369,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2831:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Corporate_$516",
                              "typeString": "contract Corporate"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Corporate_$516",
                              "typeString": "contract Corporate"
                            }
                          ],
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2823:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 367,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2823:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2823:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
=======
                  "id": 426,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 424,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "3027:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Corporate_$573",
                          "typeString": "contract Corporate"
>>>>>>> main
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 366,
=======
                          "typeIdentifier": "t_contract$_Corporate_$573",
                          "typeString": "contract Corporate"
                        }
                      ],
                      "id": 423,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
<<<<<<< HEAD
                      "src": "2808:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Subsidiary_$657_$",
                        "typeString": "function (address) returns (contract Subsidiary)"
                      },
                      "typeName": {
                        "id": 365,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 364,
                          "name": "Subsidiary",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 657,
                          "src": "2812:10:1"
                        },
                        "referencedDeclaration": 657,
                        "src": "2812:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Subsidiary_$657",
=======
                      "src": "3012:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Corporate_$573_$returns$_t_contract$_Subsidiary_$725_$",
                        "typeString": "function (contract Corporate) returns (contract Subsidiary)"
                      },
                      "typeName": {
                        "id": 422,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 421,
                          "name": "Subsidiary",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 725,
                          "src": "3016:10:1"
                        },
                        "referencedDeclaration": 725,
                        "src": "3016:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Subsidiary_$725",
>>>>>>> main
                          "typeString": "contract Subsidiary"
                        }
                      }
                    },
<<<<<<< HEAD
                    "id": 371,
=======
                    "id": 425,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2808:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Subsidiary_$657",
=======
                    "src": "3012:20:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Subsidiary_$725",
>>>>>>> main
                      "typeString": "contract Subsidiary"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "2788:49:1"
=======
                  "src": "2992:40:1"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 378,
                            "name": "newSub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 363,
                            "src": "2865:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Subsidiary_$657",
=======
                            "id": 432,
                            "name": "newSub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 420,
                            "src": "3060:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Subsidiary_$725",
>>>>>>> main
                              "typeString": "contract Subsidiary"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
<<<<<<< HEAD
                              "typeIdentifier": "t_contract$_Subsidiary_$657",
                              "typeString": "contract Subsidiary"
                            }
                          ],
                          "id": 377,
=======
                              "typeIdentifier": "t_contract$_Subsidiary_$725",
                              "typeString": "contract Subsidiary"
                            }
                          ],
                          "id": 431,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "2857:7:1",
=======
                          "src": "3052:7:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 376,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2857:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 379,
=======
                            "id": 430,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3052:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 433,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "2857:15:1",
=======
                        "src": "3052:15:1",
>>>>>>> main
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 373,
                        "name": "subs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "2847:4:1",
=======
                        "id": 427,
                        "name": "subs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "3042:4:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
<<<<<<< HEAD
                      "id": 375,
=======
                      "id": 429,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "src": "2847:9:1",
=======
                      "src": "3042:9:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
<<<<<<< HEAD
                    "id": 380,
=======
                    "id": 434,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2847:26:1",
=======
                    "src": "3042:26:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 381,
                  "nodeType": "ExpressionStatement",
                  "src": "2847:26:1"
                },
                {
                  "expression": {
                    "id": 396,
=======
                  "id": 435,
                  "nodeType": "ExpressionStatement",
                  "src": "3042:26:1"
                },
                {
                  "expression": {
                    "id": 450,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 382,
                        "name": "subsidiaries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "2919:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$314_storage_$",
                          "typeString": "mapping(address => struct Corporate.sub storage ref)"
                        }
                      },
                      "id": 387,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 385,
                            "name": "newSub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 363,
                            "src": "2940:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Subsidiary_$657",
=======
                        "id": 436,
                        "name": "subsidiaries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 349,
                        "src": "3114:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$364_storage_$",
                          "typeString": "mapping(address => struct Corporate.sub storage ref)"
                        }
                      },
                      "id": 441,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 439,
                            "name": "newSub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 420,
                            "src": "3135:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Subsidiary_$725",
>>>>>>> main
                              "typeString": "contract Subsidiary"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
<<<<<<< HEAD
                              "typeIdentifier": "t_contract$_Subsidiary_$657",
                              "typeString": "contract Subsidiary"
                            }
                          ],
                          "id": 384,
=======
                              "typeIdentifier": "t_contract$_Subsidiary_$725",
                              "typeString": "contract Subsidiary"
                            }
                          ],
                          "id": 438,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "2932:7:1",
=======
                          "src": "3127:7:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 383,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2932:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 386,
=======
                            "id": 437,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3127:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 440,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "2932:15:1",
=======
                        "src": "3127:15:1",
>>>>>>> main
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "2919:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_sub_$314_storage",
=======
                      "src": "3114:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_sub_$364_storage",
>>>>>>> main
                        "typeString": "struct Corporate.sub storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 391,
                              "name": "newSub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 363,
                              "src": "2963:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Subsidiary_$657",
=======
                              "id": 445,
                              "name": "newSub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 420,
                              "src": "3158:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Subsidiary_$725",
>>>>>>> main
                                "typeString": "contract Subsidiary"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
<<<<<<< HEAD
                                "typeIdentifier": "t_contract$_Subsidiary_$657",
                                "typeString": "contract Subsidiary"
                              }
                            ],
                            "id": 390,
=======
                                "typeIdentifier": "t_contract$_Subsidiary_$725",
                                "typeString": "contract Subsidiary"
                              }
                            ],
                            "id": 444,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "2955:7:1",
=======
                            "src": "3150:7:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 389,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2955:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 392,
=======
                              "id": 443,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3150:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 446,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "2955:15:1",
=======
                          "src": "3150:15:1",
>>>>>>> main
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
<<<<<<< HEAD
                          "id": 393,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 341,
                          "src": "2972:2:1",
=======
                          "id": 447,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 398,
                          "src": "3167:2:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
<<<<<<< HEAD
                          "id": 394,
=======
                          "id": 448,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "2976:4:1",
=======
                          "src": "3171:4:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
<<<<<<< HEAD
                        "id": 388,
                        "name": "sub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 314,
                        "src": "2951:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_sub_$314_storage_ptr_$",
                          "typeString": "type(struct Corporate.sub storage pointer)"
                        }
                      },
                      "id": 395,
=======
                        "id": 442,
                        "name": "sub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 364,
                        "src": "3146:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_sub_$364_storage_ptr_$",
                          "typeString": "type(struct Corporate.sub storage pointer)"
                        }
                      },
                      "id": 449,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "2951:30:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_sub_$314_memory_ptr",
                        "typeString": "struct Corporate.sub memory"
                      }
                    },
                    "src": "2919:62:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_sub_$314_storage",
                      "typeString": "struct Corporate.sub storage ref"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "2919:62:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3024:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 349,
                  "id": 399,
                  "nodeType": "Return",
                  "src": "3017:11:1"
=======
                      "src": "3146:30:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_sub_$364_memory_ptr",
                        "typeString": "struct Corporate.sub memory"
                      }
                    },
                    "src": "3114:62:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_sub_$364_storage",
                      "typeString": "struct Corporate.sub storage ref"
                    }
                  },
                  "id": 451,
                  "nodeType": "ExpressionStatement",
                  "src": "3114:62:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 454,
                        "name": "newSub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 420,
                        "src": "3227:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Subsidiary_$725",
                          "typeString": "contract Subsidiary"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Subsidiary_$725",
                          "typeString": "contract Subsidiary"
                        }
                      ],
                      "id": 453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3219:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 452,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3219:7:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3219:15:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 406,
                  "id": 456,
                  "nodeType": "Return",
                  "src": "3212:22:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "805f4202",
<<<<<<< HEAD
            "id": 401,
=======
            "id": 458,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 344,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 343,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 505,
                  "src": "2617:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2617:12:1"
              },
              {
                "id": 346,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 345,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 515,
                  "src": "2630:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2630:13:1"
              }
            ],
            "name": "createSub",
            "nameLocation": "2590:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 342,
=======
                "id": 401,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 400,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 562,
                  "src": "2828:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2828:12:1"
              },
              {
                "id": 403,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 402,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "2841:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2841:13:1"
              }
            ],
            "name": "createSub",
            "nameLocation": "2801:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 399,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 341,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2605:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 401,
                  "src": "2600:7:1",
=======
                  "id": 398,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2816:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 458,
                  "src": "2811:7:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 340,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2600:4:1",
=======
                    "id": 397,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2811:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2599:9:1"
            },
            "returnParameters": {
              "id": 349,
=======
              "src": "2810:9:1"
            },
            "returnParameters": {
              "id": 406,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 348,
=======
                  "id": 405,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 401,
                  "src": "2652:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 347,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2652:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
=======
                  "scope": 458,
                  "src": "2863:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2863:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
>>>>>>> main
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2651:6:1"
            },
            "scope": 516,
            "src": "2581:454:1",
=======
              "src": "2862:9:1"
            },
            "scope": 573,
            "src": "2792:449:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 416,
              "nodeType": "Block",
              "src": "3168:32:1",
=======
              "id": 471,
              "nodeType": "Block",
              "src": "3361:32:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
<<<<<<< HEAD
                      "id": 412,
                      "name": "subs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "3185:4:1",
=======
                      "id": 467,
                      "name": "subs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 352,
                      "src": "3378:4:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
<<<<<<< HEAD
                    "id": 414,
                    "indexExpression": {
                      "id": 413,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 403,
                      "src": "3190:2:1",
=======
                    "id": 469,
                    "indexExpression": {
                      "id": 468,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 460,
                      "src": "3383:2:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "3185:8:1",
=======
                    "src": "3378:8:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 411,
                  "id": 415,
                  "nodeType": "Return",
                  "src": "3178:15:1"
=======
                  "functionReturnParameters": 466,
                  "id": 470,
                  "nodeType": "Return",
                  "src": "3371:15:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "f4111496",
<<<<<<< HEAD
            "id": 417,
=======
            "id": 472,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 406,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 405,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 505,
                  "src": "3123:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3123:12:1"
              },
              {
                "id": 408,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 407,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 515,
                  "src": "3136:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3136:13:1"
              }
            ],
            "name": "getSubContract",
            "nameLocation": "3087:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 404,
=======
                "id": 463,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 462,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "3329:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3329:13:1"
              }
            ],
            "name": "getSubContract",
            "nameLocation": "3293:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 461,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 403,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3107:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 417,
                  "src": "3102:7:1",
=======
                  "id": 460,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3313:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 472,
                  "src": "3308:7:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 402,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3102:4:1",
=======
                    "id": 459,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3308:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3101:9:1"
            },
            "returnParameters": {
              "id": 411,
=======
              "src": "3307:9:1"
            },
            "returnParameters": {
              "id": 466,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 410,
=======
                  "id": 465,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 417,
                  "src": "3158:7:1",
=======
                  "scope": 472,
                  "src": "3351:7:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 409,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3158:7:1",
=======
                    "id": 464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3351:7:1",
>>>>>>> main
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3157:9:1"
            },
            "scope": 516,
            "src": "3078:122:1",
=======
              "src": "3350:9:1"
            },
            "scope": 573,
            "src": "3284:109:1",
>>>>>>> main
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 444,
              "nodeType": "Block",
              "src": "3294:144:1",
=======
              "id": 499,
              "nodeType": "Block",
              "src": "3487:144:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 435,
=======
                        "id": 490,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
<<<<<<< HEAD
                              "id": 427,
                              "name": "subsidiaries",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "3312:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$314_storage_$",
                                "typeString": "mapping(address => struct Corporate.sub storage ref)"
                              }
                            },
                            "id": 429,
                            "indexExpression": {
                              "id": 428,
                              "name": "toCheck",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 419,
                              "src": "3325:7:1",
=======
                              "id": 482,
                              "name": "subsidiaries",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 349,
                              "src": "3505:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$364_storage_$",
                                "typeString": "mapping(address => struct Corporate.sub storage ref)"
                              }
                            },
                            "id": 484,
                            "indexExpression": {
                              "id": 483,
                              "name": "toCheck",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 474,
                              "src": "3518:7:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "3312:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_sub_$314_storage",
                              "typeString": "struct Corporate.sub storage ref"
                            }
                          },
                          "id": 430,
=======
                            "src": "3505:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_sub_$364_storage",
                              "typeString": "struct Corporate.sub storage ref"
                            }
                          },
                          "id": 485,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "subAddress",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 309,
                          "src": "3312:32:1",
=======
                          "referencedDeclaration": 359,
                          "src": "3505:32:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
<<<<<<< HEAD
                              "id": 433,
=======
                              "id": 488,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "3356:1:1",
=======
                              "src": "3549:1:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
<<<<<<< HEAD
                            "id": 432,
=======
                            "id": 487,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "3348:7:1",
=======
                            "src": "3541:7:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 431,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3348:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 434,
=======
                              "id": 486,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3541:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 489,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "3348:10:1",
=======
                          "src": "3541:10:1",
>>>>>>> main
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "3312:46:1",
=======
                        "src": "3505:46:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f74206120737562736964696172792061646472657373",
<<<<<<< HEAD
                        "id": 436,
=======
                        "id": 491,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "3360:26:1",
=======
                        "src": "3553:26:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_00e7c86a76d6b37cd7c008118063d660e33a645a376ceac3e4508a2776cb0688",
                          "typeString": "literal_string \"Not a subsidiary address\""
                        },
                        "value": "Not a subsidiary address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_00e7c86a76d6b37cd7c008118063d660e33a645a376ceac3e4508a2776cb0688",
                          "typeString": "literal_string \"Not a subsidiary address\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 426,
=======
                      "id": 481,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "3304:7:1",
=======
                      "src": "3497:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 437,
=======
                    "id": 492,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3304:83:1",
=======
                    "src": "3497:83:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 438,
                  "nodeType": "ExpressionStatement",
                  "src": "3304:83:1"
=======
                  "id": 493,
                  "nodeType": "ExpressionStatement",
                  "src": "3497:83:1"
>>>>>>> main
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 439,
                        "name": "subsidiaries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "3404:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$314_storage_$",
                          "typeString": "mapping(address => struct Corporate.sub storage ref)"
                        }
                      },
                      "id": 441,
                      "indexExpression": {
                        "id": 440,
                        "name": "toCheck",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 419,
                        "src": "3417:7:1",
=======
                        "id": 494,
                        "name": "subsidiaries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 349,
                        "src": "3597:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$364_storage_$",
                          "typeString": "mapping(address => struct Corporate.sub storage ref)"
                        }
                      },
                      "id": 496,
                      "indexExpression": {
                        "id": 495,
                        "name": "toCheck",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 474,
                        "src": "3610:7:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "3404:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_sub_$314_storage",
                        "typeString": "struct Corporate.sub storage ref"
                      }
                    },
                    "id": 442,
=======
                      "src": "3597:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_sub_$364_storage",
                        "typeString": "struct Corporate.sub storage ref"
                      }
                    },
                    "id": 497,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "valid",
                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                    "referencedDeclaration": 313,
                    "src": "3404:27:1",
=======
                    "referencedDeclaration": 363,
                    "src": "3597:27:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 425,
                  "id": 443,
                  "nodeType": "Return",
                  "src": "3397:34:1"
=======
                  "functionReturnParameters": 480,
                  "id": 498,
                  "nodeType": "Return",
                  "src": "3590:34:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "6fdbaf43",
<<<<<<< HEAD
            "id": 445,
=======
            "id": 500,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 422,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 421,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 515,
                  "src": "3267:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3267:13:1"
              }
            ],
            "name": "checkIfSubsidiaryValid",
            "nameLocation": "3215:22:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 420,
=======
                "id": 477,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 476,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "3460:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3460:13:1"
              }
            ],
            "name": "checkIfSubsidiaryValid",
            "nameLocation": "3408:22:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 475,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 419,
                  "mutability": "mutable",
                  "name": "toCheck",
                  "nameLocation": "3246:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 445,
                  "src": "3238:15:1",
=======
                  "id": 474,
                  "mutability": "mutable",
                  "name": "toCheck",
                  "nameLocation": "3439:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 500,
                  "src": "3431:15:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3238:7:1",
=======
                    "id": 473,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3431:7:1",
>>>>>>> main
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3237:17:1"
            },
            "returnParameters": {
              "id": 425,
=======
              "src": "3430:17:1"
            },
            "returnParameters": {
              "id": 480,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 424,
=======
                  "id": 479,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 445,
                  "src": "3289:4:1",
=======
                  "scope": 500,
                  "src": "3482:4:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 423,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3289:4:1",
=======
                    "id": 478,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3482:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3288:6:1"
            },
            "scope": 516,
            "src": "3206:232:1",
=======
              "src": "3481:6:1"
            },
            "scope": 573,
            "src": "3399:232:1",
>>>>>>> main
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 474,
              "nodeType": "Block",
              "src": "3555:158:1",
=======
              "id": 529,
              "nodeType": "Block",
              "src": "3748:158:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
<<<<<<< HEAD
                        "id": 466,
=======
                        "id": 521,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
<<<<<<< HEAD
                          "id": 460,
=======
                          "id": 515,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
<<<<<<< HEAD
                                "id": 456,
                                "name": "whitelist_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 448,
                                "src": "3573:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Whitelist_$1298",
                                  "typeString": "contract Whitelist"
                                }
                              },
                              "id": 457,
=======
                                "id": 511,
                                "name": "whitelist_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 503,
                                "src": "3766:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Whitelist_$1425",
                                  "typeString": "contract Whitelist"
                                }
                              },
                              "id": 512,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 1280,
                              "src": "3573:16:1",
=======
                              "referencedDeclaration": 1407,
                              "src": "3766:16:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
<<<<<<< HEAD
                            "id": 458,
=======
                            "id": 513,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "3573:18:1",
=======
                            "src": "3766:18:1",
>>>>>>> main
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
<<<<<<< HEAD
                            "id": 459,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 290,
                            "src": "3595:5:1",
=======
                            "id": 514,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 337,
                            "src": "3788:5:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
<<<<<<< HEAD
                          "src": "3573:27:1",
=======
                          "src": "3766:27:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
<<<<<<< HEAD
                          "id": 465,
=======
                          "id": 520,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
<<<<<<< HEAD
                                "id": 461,
                                "name": "whitelist",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 305,
                                "src": "3604:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Whitelist_$1298",
                                  "typeString": "contract Whitelist"
                                }
                              },
                              "id": 462,
=======
                                "id": 516,
                                "name": "whitelist",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 355,
                                "src": "3797:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Whitelist_$1425",
                                  "typeString": "contract Whitelist"
                                }
                              },
                              "id": 517,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 1280,
                              "src": "3604:15:1",
=======
                              "referencedDeclaration": 1407,
                              "src": "3797:15:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
<<<<<<< HEAD
                            "id": 463,
=======
                            "id": 518,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "3604:17:1",
=======
                            "src": "3797:17:1",
>>>>>>> main
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
<<<<<<< HEAD
                            "id": 464,
                            "name": "creator_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 288,
                            "src": "3625:8:1",
=======
                            "id": 519,
                            "name": "creator_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 335,
                            "src": "3818:8:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
<<<<<<< HEAD
                          "src": "3604:29:1",
=======
                          "src": "3797:29:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD
                        "src": "3573:60:1",
=======
                        "src": "3766:60:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c697374206e6f742063726561746564206279206b6e6f776e207061727479",
<<<<<<< HEAD
                        "id": 467,
=======
                        "id": 522,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "3635:38:1",
=======
                        "src": "3828:38:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cf9dd211e1ca90d9268a7ae8097b7e406e991130fcf3aad7805d3e2292c4115c",
                          "typeString": "literal_string \"Whitelist not created by known party\""
                        },
                        "value": "Whitelist not created by known party"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cf9dd211e1ca90d9268a7ae8097b7e406e991130fcf3aad7805d3e2292c4115c",
                          "typeString": "literal_string \"Whitelist not created by known party\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 455,
=======
                      "id": 510,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "3565:7:1",
=======
                      "src": "3758:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 468,
=======
                    "id": 523,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3565:109:1",
=======
                    "src": "3758:109:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "3565:109:1"
                },
                {
                  "expression": {
                    "id": 472,
=======
                  "id": 524,
                  "nodeType": "ExpressionStatement",
                  "src": "3758:109:1"
                },
                {
                  "expression": {
                    "id": 527,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 470,
                      "name": "whitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 305,
                      "src": "3684:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$1298",
=======
                      "id": 525,
                      "name": "whitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 355,
                      "src": "3877:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$1425",
>>>>>>> main
                        "typeString": "contract Whitelist"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 471,
                      "name": "whitelist_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 448,
                      "src": "3696:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$1298",
                        "typeString": "contract Whitelist"
                      }
                    },
                    "src": "3684:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$1298",
                      "typeString": "contract Whitelist"
                    }
                  },
                  "id": 473,
                  "nodeType": "ExpressionStatement",
                  "src": "3684:22:1"
=======
                      "id": 526,
                      "name": "whitelist_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 503,
                      "src": "3889:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$1425",
                        "typeString": "contract Whitelist"
                      }
                    },
                    "src": "3877:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$1425",
                      "typeString": "contract Whitelist"
                    }
                  },
                  "id": 528,
                  "nodeType": "ExpressionStatement",
                  "src": "3877:22:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "3d0f963e",
<<<<<<< HEAD
            "id": 475,
=======
            "id": 530,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 451,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 450,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 505,
                  "src": "3528:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3528:12:1"
              },
              {
                "id": 453,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 452,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 515,
                  "src": "3541:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3541:13:1"
              }
            ],
            "name": "updateWhitelist",
            "nameLocation": "3483:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 449,
=======
                "id": 506,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 505,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 562,
                  "src": "3721:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3721:12:1"
              },
              {
                "id": 508,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 507,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "3734:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3734:13:1"
              }
            ],
            "name": "updateWhitelist",
            "nameLocation": "3676:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 504,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 448,
                  "mutability": "mutable",
                  "name": "whitelist_",
                  "nameLocation": "3509:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "3499:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Whitelist_$1298",
                    "typeString": "contract Whitelist"
                  },
                  "typeName": {
                    "id": 447,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 446,
                      "name": "Whitelist",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1298,
                      "src": "3499:9:1"
                    },
                    "referencedDeclaration": 1298,
                    "src": "3499:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$1298",
=======
                  "id": 503,
                  "mutability": "mutable",
                  "name": "whitelist_",
                  "nameLocation": "3702:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "3692:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Whitelist_$1425",
                    "typeString": "contract Whitelist"
                  },
                  "typeName": {
                    "id": 502,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 501,
                      "name": "Whitelist",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1425,
                      "src": "3692:9:1"
                    },
                    "referencedDeclaration": 1425,
                    "src": "3692:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$1425",
>>>>>>> main
                      "typeString": "contract Whitelist"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3498:22:1"
            },
            "returnParameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3555:0:1"
            },
            "scope": 516,
            "src": "3474:239:1",
=======
              "src": "3691:22:1"
            },
            "returnParameters": {
              "id": 509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3748:0:1"
            },
            "scope": 573,
            "src": "3667:239:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 488,
              "nodeType": "Block",
              "src": "3822:30:1",
              "statements": [
                {
                  "expression": {
                    "id": 486,
=======
              "id": 545,
              "nodeType": "Block",
              "src": "4015:52:1",
              "statements": [
                {
                  "expression": {
                    "id": 541,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 484,
                      "name": "valid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 307,
                      "src": "3832:5:1",
=======
                      "id": 539,
                      "name": "valid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 357,
                      "src": "4025:5:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
<<<<<<< HEAD
                      "id": 485,
=======
                      "id": 540,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "3840:5:1",
=======
                      "src": "4033:5:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
<<<<<<< HEAD
                    "src": "3832:13:1",
=======
                    "src": "4025:13:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 487,
                  "nodeType": "ExpressionStatement",
                  "src": "3832:13:1"
=======
                  "id": 542,
                  "nodeType": "ExpressionStatement",
                  "src": "4025:13:1"
                },
                {
                  "expression": {
                    "id": 543,
                    "name": "valid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 357,
                    "src": "4055:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 538,
                  "id": 544,
                  "nodeType": "Return",
                  "src": "4048:12:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "98f4448a",
<<<<<<< HEAD
            "id": 489,
=======
            "id": 546,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 478,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 477,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 505,
                  "src": "3782:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3782:12:1"
              },
              {
                "id": 480,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 479,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 515,
                  "src": "3795:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3795:13:1"
              }
            ],
            "name": "disableCorporate",
            "nameLocation": "3756:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3772:2:1"
            },
            "returnParameters": {
              "id": 483,
=======
                "id": 533,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 532,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 562,
                  "src": "3975:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3975:12:1"
              },
              {
                "id": 535,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 534,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "3988:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3988:13:1"
              }
            ],
            "name": "disableCorporate",
            "nameLocation": "3949:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3965:2:1"
            },
            "returnParameters": {
              "id": 538,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 482,
=======
                  "id": 537,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 489,
                  "src": "3817:4:1",
=======
                  "scope": 546,
                  "src": "4010:4:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 481,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3817:4:1",
=======
                    "id": 536,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4010:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3816:6:1"
            },
            "scope": 516,
            "src": "3747:105:1",
=======
              "src": "4009:6:1"
            },
            "scope": 573,
            "src": "3940:127:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 504,
              "nodeType": "Block",
              "src": "3880:82:1",
=======
              "id": 561,
              "nodeType": "Block",
              "src": "4095:82:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
<<<<<<< HEAD
                        "id": 500,
=======
                        "id": 557,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
<<<<<<< HEAD
                          "id": 495,
=======
                          "id": 552,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
<<<<<<< HEAD
                              "id": 492,
=======
                              "id": 549,
>>>>>>> main
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                              "src": "3898:3:1",
=======
                              "src": "4113:3:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
<<<<<<< HEAD
                            "id": 493,
=======
                            "id": 550,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "src": "3898:10:1",
=======
                            "src": "4113:10:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
<<<<<<< HEAD
                            "id": 494,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 290,
                            "src": "3912:5:1",
=======
                            "id": 551,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 337,
                            "src": "4127:5:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
<<<<<<< HEAD
                          "src": "3898:19:1",
=======
                          "src": "4113:19:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
<<<<<<< HEAD
                          "id": 499,
=======
                          "id": 556,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
<<<<<<< HEAD
                              "id": 496,
=======
                              "id": 553,
>>>>>>> main
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                              "src": "3921:3:1",
=======
                              "src": "4136:3:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
<<<<<<< HEAD
                            "id": 497,
=======
                            "id": 554,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "src": "3921:10:1",
=======
                            "src": "4136:10:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
<<<<<<< HEAD
                            "id": 498,
                            "name": "creator_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 288,
                            "src": "3935:8:1",
=======
                            "id": 555,
                            "name": "creator_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 335,
                            "src": "4150:8:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
<<<<<<< HEAD
                          "src": "3921:22:1",
=======
                          "src": "4136:22:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD
                        "src": "3898:45:1",
=======
                        "src": "4113:45:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "id": 491,
=======
                      "id": 548,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "3890:7:1",
=======
                      "src": "4105:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 501,
=======
                    "id": 558,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3890:54:1",
=======
                    "src": "4105:54:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 502,
                  "nodeType": "ExpressionStatement",
                  "src": "3890:54:1"
                },
                {
                  "id": 503,
                  "nodeType": "PlaceholderStatement",
                  "src": "3954:1:1"
                }
              ]
            },
            "id": 505,
            "name": "permissioned",
            "nameLocation": "3867:12:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3880:0:1"
            },
            "src": "3858:104:1",
=======
                  "id": 559,
                  "nodeType": "ExpressionStatement",
                  "src": "4105:54:1"
                },
                {
                  "id": 560,
                  "nodeType": "PlaceholderStatement",
                  "src": "4169:1:1"
                }
              ]
            },
            "id": 562,
            "name": "permissioned",
            "nameLocation": "4082:12:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4095:0:1"
            },
            "src": "4073:104:1",
>>>>>>> main
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 514,
              "nodeType": "Block",
              "src": "3991:50:1",
=======
              "id": 571,
              "nodeType": "Block",
              "src": "4206:50:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
<<<<<<< HEAD
                        "id": 510,
=======
                        "id": 567,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 508,
                          "name": "valid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "4009:5:1",
=======
                          "id": 565,
                          "name": "valid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 357,
                          "src": "4224:5:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
<<<<<<< HEAD
                          "id": 509,
=======
                          "id": 566,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "4018:4:1",
=======
                          "src": "4233:4:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
<<<<<<< HEAD
                        "src": "4009:13:1",
=======
                        "src": "4224:13:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "id": 507,
=======
                      "id": 564,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "4001:7:1",
=======
                      "src": "4216:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 511,
=======
                    "id": 568,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4001:22:1",
=======
                    "src": "4216:22:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 512,
                  "nodeType": "ExpressionStatement",
                  "src": "4001:22:1"
                },
                {
                  "id": 513,
                  "nodeType": "PlaceholderStatement",
                  "src": "4033:1:1"
                }
              ]
            },
            "id": 515,
            "name": "validContract",
            "nameLocation": "3977:13:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3991:0:1"
            },
            "src": "3968:73:1",
=======
                  "id": 569,
                  "nodeType": "ExpressionStatement",
                  "src": "4216:22:1"
                },
                {
                  "id": 570,
                  "nodeType": "PlaceholderStatement",
                  "src": "4248:1:1"
                }
              ]
            },
            "id": 572,
            "name": "validContract",
            "nameLocation": "4192:13:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 563,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4206:0:1"
            },
            "src": "4183:73:1",
>>>>>>> main
            "virtual": false,
            "visibility": "internal"
          }
        ],
<<<<<<< HEAD
        "scope": 658,
        "src": "1589:2454:1",
=======
        "scope": 726,
        "src": "1738:2520:1",
>>>>>>> main
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
<<<<<<< HEAD
        "id": 657,
        "linearizedBaseContracts": [
          657
        ],
        "name": "Subsidiary",
        "nameLocation": "4119:10:1",
=======
        "id": 725,
        "linearizedBaseContracts": [
          725
        ],
        "name": "Subsidiary",
        "nameLocation": "4334:10:1",
>>>>>>> main
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "b119a9d6",
<<<<<<< HEAD
            "id": 518,
            "mutability": "mutable",
            "name": "parent_",
            "nameLocation": "4159:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 657,
            "src": "4136:30:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 517,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4136:15:1",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
=======
            "id": 576,
            "mutability": "mutable",
            "name": "parent_",
            "nameLocation": "4368:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 725,
            "src": "4351:24:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Corporate_$573",
              "typeString": "contract Corporate"
            },
            "typeName": {
              "id": 575,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 574,
                "name": "Corporate",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 573,
                "src": "4351:9:1"
              },
              "referencedDeclaration": 573,
              "src": "4351:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Corporate_$573",
                "typeString": "contract Corporate"
>>>>>>> main
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 520,
            "mutability": "mutable",
            "name": "amount",
            "nameLocation": "4199:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 657,
            "src": "4194:11:1",
=======
            "id": 578,
            "mutability": "mutable",
            "name": "amount",
            "nameLocation": "4408:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 725,
            "src": "4403:11:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 519,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "4194:4:1",
=======
              "id": 577,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "4403:4:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 524,
            "mutability": "mutable",
            "name": "permissionedAddress",
            "nameLocation": "4255:19:1",
            "nodeType": "VariableDeclaration",
            "scope": 657,
            "src": "4222:52:1",
=======
            "id": 582,
            "mutability": "mutable",
            "name": "permissionedAddress",
            "nameLocation": "4464:19:1",
            "nodeType": "VariableDeclaration",
            "scope": 725,
            "src": "4431:52:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 523,
              "keyType": {
                "id": 521,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4230:7:1",
=======
              "id": 581,
              "keyType": {
                "id": 579,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4439:7:1",
>>>>>>> main
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "4222:24:1",
=======
              "src": "4431:24:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
<<<<<<< HEAD
                "id": 522,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "4241:4:1",
=======
                "id": 580,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "4450:4:1",
>>>>>>> main
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
<<<<<<< HEAD
            "id": 530,
            "name": "ValueReceived",
            "nameLocation": "4349:13:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 529,
=======
            "id": 588,
            "name": "ValueReceived",
            "nameLocation": "4558:13:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 587,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 526,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "4371:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "4363:12:1",
=======
                  "id": 584,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "4580:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "4572:12:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 525,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4363:7:1",
=======
                    "id": 583,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4572:7:1",
>>>>>>> main
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 528,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4382:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "4377:11:1",
=======
                  "id": 586,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4591:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "4586:11:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 527,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4377:4:1",
=======
                    "id": 585,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4586:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4362:27:1"
            },
            "src": "4343:47:1"
          },
          {
            "canonicalName": "Subsidiary.transaction",
            "id": 537,
            "members": [
              {
                "constant": false,
                "id": 532,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "4430:2:1",
                "nodeType": "VariableDeclaration",
                "scope": 537,
                "src": "4425:7:1",
=======
              "src": "4571:27:1"
            },
            "src": "4552:47:1"
          },
          {
            "canonicalName": "Subsidiary.transaction",
            "id": 595,
            "members": [
              {
                "constant": false,
                "id": 590,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "4639:2:1",
                "nodeType": "VariableDeclaration",
                "scope": 595,
                "src": "4634:7:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 531,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "4425:4:1",
=======
                  "id": 589,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "4634:4:1",
>>>>>>> main
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 534,
                "mutability": "mutable",
                "name": "receiver_id",
                "nameLocation": "4451:11:1",
                "nodeType": "VariableDeclaration",
                "scope": 537,
                "src": "4443:19:1",
=======
                "id": 592,
                "mutability": "mutable",
                "name": "receiver_id",
                "nameLocation": "4660:11:1",
                "nodeType": "VariableDeclaration",
                "scope": 595,
                "src": "4652:19:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 533,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "4443:7:1",
=======
                  "id": 591,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "4652:7:1",
>>>>>>> main
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 536,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "4477:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 537,
                "src": "4472:11:1",
=======
                "id": 594,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "4686:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 595,
                "src": "4681:11:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 535,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "4472:4:1",
=======
                  "id": 593,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "4681:4:1",
>>>>>>> main
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "transaction",
<<<<<<< HEAD
            "nameLocation": "4404:11:1",
            "nodeType": "StructDefinition",
            "scope": 657,
            "src": "4397:93:1",
=======
            "nameLocation": "4613:11:1",
            "nodeType": "StructDefinition",
            "scope": 725,
            "src": "4606:93:1",
>>>>>>> main
            "visibility": "public"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 542,
            "mutability": "mutable",
            "name": "transactions",
            "nameLocation": "4560:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 657,
            "src": "4531:41:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_transaction_$537_storage_$",
              "typeString": "mapping(uint256 => struct Subsidiary.transaction)"
            },
            "typeName": {
              "id": 541,
              "keyType": {
                "id": 538,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "4539:4:1",
=======
            "id": 600,
            "mutability": "mutable",
            "name": "transactions",
            "nameLocation": "4769:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 725,
            "src": "4740:41:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_transaction_$595_storage_$",
              "typeString": "mapping(uint256 => struct Subsidiary.transaction)"
            },
            "typeName": {
              "id": 599,
              "keyType": {
                "id": 596,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "4748:4:1",
>>>>>>> main
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "4531:28:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_transaction_$537_storage_$",
                "typeString": "mapping(uint256 => struct Subsidiary.transaction)"
              },
              "valueType": {
                "id": 540,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 539,
                  "name": "transaction",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 537,
                  "src": "4547:11:1"
                },
                "referencedDeclaration": 537,
                "src": "4547:11:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_transaction_$537_storage_ptr",
=======
              "src": "4740:28:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_transaction_$595_storage_$",
                "typeString": "mapping(uint256 => struct Subsidiary.transaction)"
              },
              "valueType": {
                "id": 598,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 597,
                  "name": "transaction",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 595,
                  "src": "4756:11:1"
                },
                "referencedDeclaration": 595,
                "src": "4756:11:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_transaction_$595_storage_ptr",
>>>>>>> main
                  "typeString": "struct Subsidiary.transaction"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 544,
            "mutability": "mutable",
            "name": "numOfTransactions",
            "nameLocation": "4675:17:1",
            "nodeType": "VariableDeclaration",
            "scope": 657,
            "src": "4670:22:1",
=======
            "id": 602,
            "mutability": "mutable",
            "name": "numOfTransactions",
            "nameLocation": "4884:17:1",
            "nodeType": "VariableDeclaration",
            "scope": 725,
            "src": "4879:22:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 543,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "4670:4:1",
=======
              "id": 601,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "4879:4:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 560,
              "nodeType": "Block",
              "src": "4726:62:1",
              "statements": [
                {
                  "expression": {
                    "id": 554,
=======
              "id": 616,
              "nodeType": "Block",
              "src": "4936:51:1",
              "statements": [
                {
                  "expression": {
                    "id": 610,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 549,
                      "name": "parent_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "4736:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
=======
                      "id": 608,
                      "name": "parent_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 576,
                      "src": "4946:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Corporate_$573",
                        "typeString": "contract Corporate"
>>>>>>> main
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "arguments": [
                        {
                          "id": 552,
                          "name": "parent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 546,
                          "src": "4754:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4746:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 550,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4746:8:1",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4746:15:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4736:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 555,
                  "nodeType": "ExpressionStatement",
                  "src": "4736:25:1"
                },
                {
                  "expression": {
                    "id": 558,
=======
                      "id": 609,
                      "name": "corp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 605,
                      "src": "4956:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Corporate_$573",
                        "typeString": "contract Corporate"
                      }
                    },
                    "src": "4946:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Corporate_$573",
                      "typeString": "contract Corporate"
                    }
                  },
                  "id": 611,
                  "nodeType": "ExpressionStatement",
                  "src": "4946:14:1"
                },
                {
                  "expression": {
                    "id": 614,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 556,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 520,
                      "src": "4771:6:1",
=======
                      "id": 612,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 578,
                      "src": "4970:6:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
<<<<<<< HEAD
                      "id": 557,
=======
                      "id": 613,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "4780:1:1",
=======
                      "src": "4979:1:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
<<<<<<< HEAD
                    "src": "4771:10:1",
=======
                    "src": "4970:10:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 559,
                  "nodeType": "ExpressionStatement",
                  "src": "4771:10:1"
                }
              ]
            },
            "id": 561,
=======
                  "id": 615,
                  "nodeType": "ExpressionStatement",
                  "src": "4970:10:1"
                }
              ]
            },
            "id": 617,
>>>>>>> main
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 547,
=======
              "id": 606,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 546,
                  "mutability": "mutable",
                  "name": "parent",
                  "nameLocation": "4718:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 561,
                  "src": "4710:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4710:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
=======
                  "id": 605,
                  "mutability": "mutable",
                  "name": "corp",
                  "nameLocation": "4930:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "4920:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Corporate_$573",
                    "typeString": "contract Corporate"
                  },
                  "typeName": {
                    "id": 604,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 603,
                      "name": "Corporate",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 573,
                      "src": "4920:9:1"
                    },
                    "referencedDeclaration": 573,
                    "src": "4920:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Corporate_$573",
                      "typeString": "contract Corporate"
>>>>>>> main
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4709:16:1"
            },
            "returnParameters": {
              "id": 548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4726:0:1"
            },
            "scope": 657,
            "src": "4698:90:1",
=======
              "src": "4919:16:1"
            },
            "returnParameters": {
              "id": 607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4936:0:1"
            },
            "scope": 725,
            "src": "4908:79:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 581,
              "nodeType": "Block",
              "src": "5005:154:1",
              "statements": [
                {
                  "assignments": [
                    569
=======
              "id": 643,
              "nodeType": "Block",
              "src": "5204:172:1",
              "statements": [
                {
                  "assignments": [
                    625
>>>>>>> main
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 569,
                      "mutability": "mutable",
                      "name": "prevAmount",
                      "nameLocation": "5020:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 581,
                      "src": "5015:15:1",
=======
                      "id": 625,
                      "mutability": "mutable",
                      "name": "prevAmount",
                      "nameLocation": "5219:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 643,
                      "src": "5214:15:1",
>>>>>>> main
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 568,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5015:4:1",
=======
                        "id": 624,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5214:4:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 571,
                  "initialValue": {
                    "id": 570,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 520,
                    "src": "5033:6:1",
=======
                  "id": 627,
                  "initialValue": {
                    "id": 626,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 578,
                    "src": "5232:6:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "5015:24:1"
                },
                {
                  "expression": {
                    "id": 574,
=======
                  "src": "5214:24:1"
                },
                {
                  "expression": {
                    "id": 630,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 572,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 520,
                      "src": "5049:6:1",
=======
                      "id": 628,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 578,
                      "src": "5248:6:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
<<<<<<< HEAD
                      "id": 573,
=======
                      "id": 629,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "5058:1:1",
=======
                      "src": "5257:1:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
<<<<<<< HEAD
                    "src": "5049:10:1",
=======
                    "src": "5248:10:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 575,
                  "nodeType": "ExpressionStatement",
                  "src": "5049:10:1"
=======
                  "id": 631,
                  "nodeType": "ExpressionStatement",
                  "src": "5248:10:1"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 578,
                        "name": "prevAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 569,
                        "src": "5089:10:1",
=======
                        "id": 640,
                        "name": "prevAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 625,
                        "src": "5306:10:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 576,
                        "name": "parent_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 518,
                        "src": "5076:7:1",
=======
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 636,
                                "name": "parent_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 576,
                                "src": "5291:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Corporate_$573",
                                  "typeString": "contract Corporate"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Corporate_$573",
                                  "typeString": "contract Corporate"
                                }
                              ],
                              "id": 635,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5283:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 634,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5283:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5283:16:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5275:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 632,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5275:8:1",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5275:25:1",
                        "tryCall": false,
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
<<<<<<< HEAD
                      "id": 577,
=======
                      "id": 639,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "send",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "src": "5076:12:1",
=======
                      "src": "5275:30:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
<<<<<<< HEAD
                    "id": 579,
=======
                    "id": 641,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5076:24:1",
=======
                    "src": "5275:42:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 567,
                  "id": 580,
                  "nodeType": "Return",
                  "src": "5069:31:1"
=======
                  "functionReturnParameters": 623,
                  "id": 642,
                  "nodeType": "Return",
                  "src": "5268:49:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "8b734233",
<<<<<<< HEAD
            "id": 582,
=======
            "id": 644,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 564,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 563,
                  "name": "accountsAccess",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 656,
                  "src": "4975:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4975:14:1"
              }
            ],
            "name": "getTake",
            "nameLocation": "4950:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4957:2:1"
            },
            "returnParameters": {
              "id": 567,
=======
                "id": 620,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 619,
                  "name": "accountsAccess",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 724,
                  "src": "5174:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "5174:14:1"
              }
            ],
            "name": "getTake",
            "nameLocation": "5149:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5156:2:1"
            },
            "returnParameters": {
              "id": 623,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 566,
=======
                  "id": 622,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 582,
                  "src": "4998:4:1",
=======
                  "scope": 644,
                  "src": "5197:4:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 565,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4998:4:1",
=======
                    "id": 621,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5197:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4997:6:1"
            },
            "scope": 657,
            "src": "4941:218:1",
=======
              "src": "5196:6:1"
            },
            "scope": 725,
            "src": "5140:236:1",
>>>>>>> main
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 615,
              "nodeType": "Block",
              "src": "5355:230:1",
=======
              "id": 677,
              "nodeType": "Block",
              "src": "5572:230:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 599,
=======
                        "id": 661,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
<<<<<<< HEAD
                            "id": 596,
                            "name": "person_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 586,
                            "src": "5373:9:1",
=======
                            "id": 658,
                            "name": "person_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 648,
                            "src": "5590:9:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
<<<<<<< HEAD
                          "id": 597,
=======
                          "id": 659,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "src": "5373:17:1",
=======
                          "src": "5590:17:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
<<<<<<< HEAD
                          "id": 598,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 520,
                          "src": "5394:6:1",
=======
                          "id": 660,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 578,
                          "src": "5611:6:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "src": "5373:27:1",
=======
                        "src": "5590:27:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520526563656976657220636f6e747261637420646f6573206e6f7420686176652073756666696369656e742062616c616e636520666f722074686973207472616e73616374696f6e",
<<<<<<< HEAD
                        "id": 600,
=======
                        "id": 662,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "5402:77:1",
=======
                        "src": "5619:77:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d4a4ee7a07ecef3c3534871c9565519b24ca382dbfc79331d46c1dd632076b2",
                          "typeString": "literal_string \"The Receiver contract does not have sufficient balance for this transaction\""
                        },
                        "value": "The Receiver contract does not have sufficient balance for this transaction"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d4a4ee7a07ecef3c3534871c9565519b24ca382dbfc79331d46c1dd632076b2",
                          "typeString": "literal_string \"The Receiver contract does not have sufficient balance for this transaction\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 595,
=======
                      "id": 657,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "5365:7:1",
=======
                      "src": "5582:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 601,
=======
                    "id": 663,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5365:115:1",
=======
                    "src": "5582:115:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 602,
                  "nodeType": "ExpressionStatement",
                  "src": "5365:115:1"
                },
                {
                  "expression": {
                    "id": 611,
=======
                  "id": 664,
                  "nodeType": "ExpressionStatement",
                  "src": "5582:115:1"
                },
                {
                  "expression": {
                    "id": 673,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 603,
                        "name": "transactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 542,
                        "src": "5491:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_transaction_$537_storage_$",
                          "typeString": "mapping(uint256 => struct Subsidiary.transaction storage ref)"
                        }
                      },
                      "id": 605,
                      "indexExpression": {
                        "id": 604,
                        "name": "transID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 584,
                        "src": "5504:7:1",
=======
                        "id": 665,
                        "name": "transactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 600,
                        "src": "5708:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_transaction_$595_storage_$",
                          "typeString": "mapping(uint256 => struct Subsidiary.transaction storage ref)"
                        }
                      },
                      "id": 667,
                      "indexExpression": {
                        "id": 666,
                        "name": "transID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 646,
                        "src": "5721:7:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "5491:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_transaction_$537_storage",
=======
                      "src": "5708:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_transaction_$595_storage",
>>>>>>> main
                        "typeString": "struct Subsidiary.transaction storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
<<<<<<< HEAD
                          "id": 607,
                          "name": "transID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 584,
                          "src": "5527:7:1",
=======
                          "id": 669,
                          "name": "transID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 646,
                          "src": "5744:7:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
<<<<<<< HEAD
                          "id": 608,
                          "name": "person_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 586,
                          "src": "5536:9:1",
=======
                          "id": 670,
                          "name": "person_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 648,
                          "src": "5753:9:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
<<<<<<< HEAD
                          "id": 609,
                          "name": "tx_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 588,
                          "src": "5547:9:1",
=======
                          "id": 671,
                          "name": "tx_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 650,
                          "src": "5764:9:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
<<<<<<< HEAD
                        "id": 606,
                        "name": "transaction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "5515:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_transaction_$537_storage_ptr_$",
                          "typeString": "type(struct Subsidiary.transaction storage pointer)"
                        }
                      },
                      "id": 610,
=======
                        "id": 668,
                        "name": "transaction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 595,
                        "src": "5732:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_transaction_$595_storage_ptr_$",
                          "typeString": "type(struct Subsidiary.transaction storage pointer)"
                        }
                      },
                      "id": 672,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "5515:42:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_transaction_$537_memory_ptr",
                        "typeString": "struct Subsidiary.transaction memory"
                      }
                    },
                    "src": "5491:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_transaction_$537_storage",
                      "typeString": "struct Subsidiary.transaction storage ref"
                    }
                  },
                  "id": 612,
                  "nodeType": "ExpressionStatement",
                  "src": "5491:66:1"
=======
                      "src": "5732:42:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_transaction_$595_memory_ptr",
                        "typeString": "struct Subsidiary.transaction memory"
                      }
                    },
                    "src": "5708:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_transaction_$595_storage",
                      "typeString": "struct Subsidiary.transaction storage ref"
                    }
                  },
                  "id": 674,
                  "nodeType": "ExpressionStatement",
                  "src": "5708:66:1"
>>>>>>> main
                },
                {
                  "expression": {
                    "hexValue": "74727565",
<<<<<<< HEAD
                    "id": 613,
=======
                    "id": 675,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
<<<<<<< HEAD
                    "src": "5574:4:1",
=======
                    "src": "5791:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 594,
                  "id": 614,
                  "nodeType": "Return",
                  "src": "5567:11:1"
=======
                  "functionReturnParameters": 656,
                  "id": 676,
                  "nodeType": "Return",
                  "src": "5784:11:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "ef5ea07c",
<<<<<<< HEAD
            "id": 616,
=======
            "id": 678,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 591,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 590,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 645,
                  "src": "5323:10:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "5323:10:1"
              }
            ],
            "name": "insertTransaction",
            "nameLocation": "5256:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 589,
=======
                "id": 653,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 652,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 710,
                  "src": "5540:10:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "5540:10:1"
              }
            ],
            "name": "insertTransaction",
            "nameLocation": "5473:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 651,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 584,
                  "mutability": "mutable",
                  "name": "transID",
                  "nameLocation": "5279:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 616,
                  "src": "5274:12:1",
=======
                  "id": 646,
                  "mutability": "mutable",
                  "name": "transID",
                  "nameLocation": "5496:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 678,
                  "src": "5491:12:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 583,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5274:4:1",
=======
                    "id": 645,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5491:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 586,
                  "mutability": "mutable",
                  "name": "person_id",
                  "nameLocation": "5296:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 616,
                  "src": "5288:17:1",
=======
                  "id": 648,
                  "mutability": "mutable",
                  "name": "person_id",
                  "nameLocation": "5513:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 678,
                  "src": "5505:17:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 585,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5288:7:1",
=======
                    "id": 647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5505:7:1",
>>>>>>> main
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 588,
                  "mutability": "mutable",
                  "name": "tx_amount",
                  "nameLocation": "5312:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 616,
                  "src": "5307:14:1",
=======
                  "id": 650,
                  "mutability": "mutable",
                  "name": "tx_amount",
                  "nameLocation": "5529:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 678,
                  "src": "5524:14:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 587,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5307:4:1",
=======
                    "id": 649,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5524:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5273:49:1"
            },
            "returnParameters": {
              "id": 594,
=======
              "src": "5490:49:1"
            },
            "returnParameters": {
              "id": 656,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 593,
=======
                  "id": 655,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 616,
                  "src": "5349:4:1",
=======
                  "scope": 678,
                  "src": "5566:4:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 592,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5349:4:1",
=======
                    "id": 654,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5566:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5348:6:1"
            },
            "scope": 657,
            "src": "5247:338:1",
=======
              "src": "5565:6:1"
            },
            "scope": 725,
            "src": "5464:338:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 626,
              "nodeType": "Block",
              "src": "5664:58:1",
=======
              "id": 688,
              "nodeType": "Block",
              "src": "5881:58:1",
>>>>>>> main
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
<<<<<<< HEAD
                          "id": 620,
=======
                          "id": 682,
>>>>>>> main
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                          "src": "5693:3:1",
=======
                          "src": "5910:3:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
<<<<<<< HEAD
                        "id": 621,
=======
                        "id": 683,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "src": "5693:10:1",
=======
                        "src": "5910:10:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
<<<<<<< HEAD
                          "id": 622,
=======
                          "id": 684,
>>>>>>> main
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                          "src": "5705:3:1",
=======
                          "src": "5922:3:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
<<<<<<< HEAD
                        "id": 623,
=======
                        "id": 685,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "src": "5705:9:1",
=======
                        "src": "5922:9:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
<<<<<<< HEAD
                      "id": 619,
                      "name": "ValueReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 530,
                      "src": "5679:13:1",
=======
                      "id": 681,
                      "name": "ValueReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "5896:13:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 624,
=======
                    "id": 686,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5679:36:1",
=======
                    "src": "5896:36:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 625,
                  "nodeType": "EmitStatement",
                  "src": "5674:41:1"
                }
              ]
            },
            "id": 627,
=======
                  "id": 687,
                  "nodeType": "EmitStatement",
                  "src": "5891:41:1"
                }
              ]
            },
            "id": 689,
>>>>>>> main
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 617,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5645:2:1"
            },
            "returnParameters": {
              "id": 618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5664:0:1"
            },
            "scope": 657,
            "src": "5638:84:1",
=======
              "id": 679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5862:2:1"
            },
            "returnParameters": {
              "id": 680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5881:0:1"
            },
            "scope": 725,
            "src": "5855:84:1",
>>>>>>> main
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 644,
              "nodeType": "Block",
              "src": "5752:101:1",
=======
              "id": 709,
              "nodeType": "Block",
              "src": "5969:110:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
<<<<<<< HEAD
                        "id": 640,
=======
                        "id": 705,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
<<<<<<< HEAD
                          "id": 633,
=======
                          "id": 698,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
<<<<<<< HEAD
                              "id": 630,
=======
                              "id": 692,
>>>>>>> main
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                              "src": "5770:3:1",
=======
                              "src": "5987:3:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
<<<<<<< HEAD
                            "id": 631,
=======
                            "id": 693,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "src": "5770:10:1",
=======
                            "src": "5987:10:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
<<<<<<< HEAD
                            "id": 632,
                            "name": "parent_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 518,
                            "src": "5784:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "5770:21:1",
=======
                            "arguments": [
                              {
                                "id": 696,
                                "name": "parent_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 576,
                                "src": "6009:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Corporate_$573",
                                  "typeString": "contract Corporate"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Corporate_$573",
                                  "typeString": "contract Corporate"
                                }
                              ],
                              "id": 695,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6001:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 694,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6001:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6001:16:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5987:30:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
<<<<<<< HEAD
                          "id": 639,
=======
                          "id": 704,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
<<<<<<< HEAD
                              "id": 634,
                              "name": "permissionedAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 524,
                              "src": "5795:19:1",
=======
                              "id": 699,
                              "name": "permissionedAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 582,
                              "src": "6021:19:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
<<<<<<< HEAD
                            "id": 637,
                            "indexExpression": {
                              "expression": {
                                "id": 635,
=======
                            "id": 702,
                            "indexExpression": {
                              "expression": {
                                "id": 700,
>>>>>>> main
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                                "src": "5815:3:1",
=======
                                "src": "6041:3:1",
>>>>>>> main
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
<<<<<<< HEAD
                              "id": 636,
=======
                              "id": 701,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "src": "5815:10:1",
=======
                              "src": "6041:10:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "5795:31:1",
=======
                            "src": "6021:31:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "74727565",
<<<<<<< HEAD
                            "id": 638,
=======
                            "id": 703,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "5830:4:1",
=======
                            "src": "6056:4:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
<<<<<<< HEAD
                          "src": "5795:39:1",
=======
                          "src": "6021:39:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD
                        "src": "5770:64:1",
=======
                        "src": "5987:73:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "id": 629,
=======
                      "id": 691,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "5762:7:1",
=======
                      "src": "5979:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 641,
=======
                    "id": 706,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5762:73:1",
=======
                    "src": "5979:82:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 642,
                  "nodeType": "ExpressionStatement",
                  "src": "5762:73:1"
                },
                {
                  "id": 643,
                  "nodeType": "PlaceholderStatement",
                  "src": "5845:1:1"
                }
              ]
            },
            "id": 645,
            "name": "restricted",
            "nameLocation": "5741:10:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5752:0:1"
            },
            "src": "5732:121:1",
=======
                  "id": 707,
                  "nodeType": "ExpressionStatement",
                  "src": "5979:82:1"
                },
                {
                  "id": 708,
                  "nodeType": "PlaceholderStatement",
                  "src": "6071:1:1"
                }
              ]
            },
            "id": 710,
            "name": "restricted",
            "nameLocation": "5958:10:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5969:0:1"
            },
            "src": "5949:130:1",
>>>>>>> main
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 655,
              "nodeType": "Block",
              "src": "5883:58:1",
=======
              "id": 723,
              "nodeType": "Block",
              "src": "6109:67:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 651,
=======
                        "id": 719,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
<<<<<<< HEAD
                            "id": 648,
=======
                            "id": 713,
>>>>>>> main
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                            "src": "5901:3:1",
=======
                            "src": "6127:3:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
<<<<<<< HEAD
                          "id": 649,
=======
                          "id": 714,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "src": "5901:10:1",
=======
                          "src": "6127:10:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
<<<<<<< HEAD
                          "id": 650,
                          "name": "parent_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 518,
                          "src": "5915:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5901:21:1",
=======
                          "arguments": [
                            {
                              "id": 717,
                              "name": "parent_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 576,
                              "src": "6149:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Corporate_$573",
                                "typeString": "contract Corporate"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Corporate_$573",
                                "typeString": "contract Corporate"
                              }
                            ],
                            "id": 716,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6141:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 715,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6141:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6141:16:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6127:30:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "id": 647,
=======
                      "id": 712,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "5893:7:1",
=======
                      "src": "6119:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 652,
=======
                    "id": 720,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5893:30:1",
=======
                    "src": "6119:39:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 653,
                  "nodeType": "ExpressionStatement",
                  "src": "5893:30:1"
                },
                {
                  "id": 654,
                  "nodeType": "PlaceholderStatement",
                  "src": "5933:1:1"
                }
              ]
            },
            "id": 656,
            "name": "accountsAccess",
            "nameLocation": "5868:14:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5883:0:1"
            },
            "src": "5859:82:1",
=======
                  "id": 721,
                  "nodeType": "ExpressionStatement",
                  "src": "6119:39:1"
                },
                {
                  "id": 722,
                  "nodeType": "PlaceholderStatement",
                  "src": "6168:1:1"
                }
              ]
            },
            "id": 724,
            "name": "accountsAccess",
            "nameLocation": "6094:14:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6109:0:1"
            },
            "src": "6085:91:1",
>>>>>>> main
            "virtual": false,
            "visibility": "internal"
          }
        ],
<<<<<<< HEAD
        "scope": 658,
        "src": "4110:1833:1",
        "usedErrors": []
      }
    ],
    "src": "0:5943:1"
=======
        "scope": 726,
        "src": "4325:1853:1",
        "usedErrors": []
      }
    ],
    "src": "0:6178:1"
>>>>>>> main
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
<<<<<<< HEAD
  "networks": {},
  "schemaVersion": "3.4.2",
  "updatedAt": "2021-07-29T03:31:40.813Z",
=======
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x4924cbBff7A60ba56E7E8b3A242Cb5338c34AC4C",
      "transactionHash": "0x451b6855a48f0fc79a3ed761a3c60305d9f4d2edcf26b604ee7494b4a4fad182"
    }
  },
  "schemaVersion": "3.4.2",
  "updatedAt": "2021-07-29T06:07:25.550Z",
>>>>>>> main
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}