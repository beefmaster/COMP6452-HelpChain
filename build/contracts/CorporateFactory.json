{
  "contractName": "CorporateFactory",
  "abi": [
    {
<<<<<<< HEAD
      "inputs": [],
=======
      "inputs": [
        {
          "internalType": "contract Admin",
          "name": "admin_",
          "type": "address"
        }
      ],
>>>>>>> main
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
<<<<<<< HEAD
=======
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "contract Admin",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
>>>>>>> main
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "corporates",
      "outputs": [
        {
          "internalType": "address",
          "name": "corpAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
<<<<<<< HEAD
      "type": "function",
      "constant": true
=======
      "type": "function"
>>>>>>> main
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
<<<<<<< HEAD
      "type": "function",
      "constant": true
=======
      "type": "function"
>>>>>>> main
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "corpName",
          "type": "string"
        }
      ],
      "name": "createCorp",
      "outputs": [
        {
<<<<<<< HEAD
          "internalType": "bool",
          "name": "",
          "type": "bool"
=======
          "internalType": "address",
          "name": "",
          "type": "address"
>>>>>>> main
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getCorporate",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
<<<<<<< HEAD
      "type": "function",
      "constant": true
=======
      "type": "function"
>>>>>>> main
    },
    {
      "inputs": [],
      "name": "toggleContractActivation",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "disableCorporate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "checkIfCorporateValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
<<<<<<< HEAD
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"checkIfCorporateValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"corporates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"corpAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"corpName\",\"type\":\"string\"}],\"name\":\"createCorp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"disableCorporate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getCorporate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggleContractActivation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CorporateFactory.sol\":\"CorporateFactory\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/CorporateFactory.sol\":{\"keccak256\":\"0x7dee83257bd9f0137db6acb4c638a2bbafafef70a37755130fa6f717a2f08b08\",\"urls\":[\"bzz-raw://8d13a47611cd65485871a0237b45449d2aaf74330bd30aa1637fafb21804750d\",\"dweb:/ipfs/QmQexnmJYwJK23Rkgj6QAXztP15VLu1QjrAZs1A1bCLEHN\"]},\"project:/contracts/Whitelist.sol\":{\"keccak256\":\"0xfa0d024de0f022f219cd144b478590a34ec849ff4e0806a1030c4f953cdeab1e\",\"urls\":[\"bzz-raw://e46cfbcee151b30e3d9b92a5ce06e6c8791323dedfa48749e7ef4701b2b1487a\",\"dweb:/ipfs/Qmdef9QTZbeUsPHcHygWWpNL8yz1RuUoHYKsRbS71r9tVx\"]}},\"version\":1}",
  "bytecode": "0x60806040526001600360006101000a81548160ff02191690831515021790555034801561002b57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612d568061007b6000396000f3fe60806040523480156200001157600080fd5b5060043610620000885760003560e01c806368a0b4e7116200006357806368a0b4e7146200011b5780638da5cb5b1462000153578063a5102b371462000175578063dad1540214620001ab5762000088565b8063010d6663146200008d5780631f2e4f0614620000c35780634aa2f24014620000f9575b600080fd5b620000ab6004803603810190620000a59190620009d0565b620001e1565b604051620000ba919062000aeb565b60405180910390f35b620000e16004803603810190620000db9190620009d0565b6200030c565b604051620000f0919062000b79565b60405180910390f35b620001036200042d565b60405162000112919062000b79565b60405180910390f35b620001396004803603810190620001339190620009d0565b62000500565b6040516200014a9392919062000b3c565b60405180910390f35b6200015d62000557565b6040516200016c919062000aeb565b60405180910390f35b6200019360048036038101906200018d91906200097f565b6200057b565b604051620001a2919062000b79565b60405180910390f35b620001c96004803603810190620001c39190620009d0565b620007ad565b604051620001d8919062000b79565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000275576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200026c9062000bb8565b60405180910390fd5b60011515600360009054906101000a900460ff16151514620002ce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002c59062000b96565b60405180910390fd5b6001600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620003a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003979062000bb8565b60405180910390fd5b60011515600360009054906101000a900460ff16151514620003f9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003f09062000b96565b60405180910390fd5b60006001600084815260200190815260200160002060020160006101000a81548160ff021916908315150217905550919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620004c1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004b89062000bb8565b60405180910390fd5b600360009054906101000a900460ff1615600360006101000a81548160ff021916908315150217905550600360009054906101000a900460ff16905090565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900460ff16905083565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200060f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620006069062000bb8565b60405180910390fd5b60011515600360009054906101000a900460ff1615151462000668576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200065f9062000b96565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040516200069b90620008dc565b620006a892919062000b08565b604051809103906000f080158015620006c5573d6000803e3d6000fd5b50905060405180606001604052808273ffffffffffffffffffffffffffffffffffffffff16815260200160025481526020016001151581525060016000600254815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055509050506001600260008282546200079c919062000c77565b925050819055506001915050919050565b600060011515600360009054906101000a900460ff1615151462000808576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620007ff9062000b96565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166001600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415620008b1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620008a89062000bda565b60405180910390fd5b6001600083815260200190815260200160002060020160009054906101000a900460ff169050919050565b611e498062000ed883390190565b600062000901620008fb8462000c25565b62000bfc565b90508281526020810184848401111562000920576200091f62000dfc565b5b6200092d84828562000d1e565b509392505050565b600082601f8301126200094d576200094c62000df7565b5b81356200095f848260208601620008ea565b91505092915050565b600081359050620009798162000ebd565b92915050565b60006020828403121562000998576200099762000e06565b5b600082013567ffffffffffffffff811115620009b957620009b862000e01565b5b620009c78482850162000935565b91505092915050565b600060208284031215620009e957620009e862000e06565b5b6000620009f98482850162000968565b91505092915050565b62000a0d8162000cd4565b82525050565b62000a1e8162000ce8565b82525050565b600062000a318262000c5b565b62000a3d818562000c66565b935062000a4f81856020860162000d2d565b62000a5a8162000e0b565b840191505092915050565b600062000a7460198362000c66565b915062000a818262000e1c565b602082019050919050565b600062000a9b60278362000c66565b915062000aa88262000e45565b604082019050919050565b600062000ac260158362000c66565b915062000acf8262000e94565b602082019050919050565b62000ae58162000d14565b82525050565b600060208201905062000b02600083018462000a02565b92915050565b600060408201905062000b1f600083018562000a02565b818103602083015262000b33818462000a24565b90509392505050565b600060608201905062000b53600083018662000a02565b62000b62602083018562000ada565b62000b71604083018462000a13565b949350505050565b600060208201905062000b90600083018462000a13565b92915050565b6000602082019050818103600083015262000bb18162000a65565b9050919050565b6000602082019050818103600083015262000bd38162000a8c565b9050919050565b6000602082019050818103600083015262000bf58162000ab3565b9050919050565b600062000c0862000c1b565b905062000c16828262000d63565b919050565b6000604051905090565b600067ffffffffffffffff82111562000c435762000c4262000dc8565b5b62000c4e8262000e0b565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600062000c848262000d14565b915062000c918362000d14565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000cc95762000cc862000d99565b5b828201905092915050565b600062000ce18262000cf4565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101562000d4d57808201518184015260208101905062000d30565b8381111562000d5d576000848401525b50505050565b62000d6e8262000e0b565b810181811067ffffffffffffffff8211171562000d905762000d8f62000dc8565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f436f6e7472616374206e6f206c6f6e6765722061637469766500000000000000600082015250565b7f4f6e6c7920746865206f776e65722063616e206163636573732074686973206660008201527f756e6374696f6e00000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420612076616c696420636f72706f726174650000000000000000000000600082015250565b62000ec88162000d14565b811462000ed457600080fd5b5056fe60806040523480156200001157600080fd5b5060405162001e4938038062001e49833981810160405281019062000037919062000239565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060039080519060200190620000d0929190620000f4565b506001600660146101000a81548160ff021916908315150217905550505062000471565b828054620001029062000368565b90600052602060002090601f01602090048101928262000126576000855562000172565b82601f106200014157805160ff191683800117855562000172565b8280016001018555821562000172579182015b828111156200017157825182559160200191906001019062000154565b5b50905062000181919062000185565b5090565b5b80821115620001a057600081600090555060010162000186565b5090565b6000620001bb620001b584620002c8565b6200029f565b905082815260208101848484011115620001da57620001d962000437565b5b620001e784828562000332565b509392505050565b600081519050620002008162000457565b92915050565b600082601f8301126200021e576200021d62000432565b5b815162000230848260208601620001a4565b91505092915050565b6000806040838503121562000253576200025262000441565b5b60006200026385828601620001ef565b925050602083015167ffffffffffffffff8111156200028757620002866200043c565b5b620002958582860162000206565b9150509250929050565b6000620002ab620002be565b9050620002b982826200039e565b919050565b6000604051905090565b600067ffffffffffffffff821115620002e657620002e562000403565b5b620002f18262000446565b9050602081019050919050565b60006200030b8262000312565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156200035257808201518184015260208101905062000335565b8381111562000362576000848401525b50505050565b600060028204905060018216806200038157607f821691505b60208210811415620003985762000397620003d4565b5b50919050565b620003a98262000446565b810181811067ffffffffffffffff82111715620003cb57620003ca62000403565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6200046281620002fe565b81146200046e57600080fd5b50565b6119c880620004816000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638ba4d864116100715780638ba4d864146101a35780638da5cb5b146101c157806393e59dc1146101df57806398f4448a146101fd578063f41114961461021b578063f8a64f9a1461024b576100b4565b806334929e9a146100b95780633d0f963e146100d75780636fdbaf43146100f3578063805f420214610123578063869080bf1461015357806389165e4014610185575b600080fd5b6100c161027b565b6040516100ce9190610fd9565b60405180910390f35b6100f160048036038101906100ec9190610dda565b610281565b005b61010d60048036038101906101089190610d80565b610597565b60405161011a9190610f41565b60405180910390f35b61013d60048036038101906101389190610e07565b6106e2565b60405161014a9190610f41565b60405180910390f35b61016d60048036038101906101689190610d80565b610982565b60405161017c93929190610f0a565b60405180910390f35b61018d6109d9565b60405161019a9190610eef565b60405180910390f35b6101ab6109fd565b6040516101b89190610f77565b60405180910390f35b6101c9610a8b565b6040516101d69190610eef565b60405180910390f35b6101e7610ab1565b6040516101f49190610f5c565b60405180910390f35b610205610ad7565b6040516102129190610f41565b60405180910390f35b61023560048036038101906102309190610e07565b610bc7565b6040516102429190610eef565b60405180910390f35b61026560048036038101906102609190610e07565b610cdf565b6040516102729190610eef565b60405180910390f35b60025481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610328575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61033157600080fd5b60011515600660149054906101000a900460ff1615151461035157600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103d057600080fd5b505afa1580156103e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104089190610dad565b73ffffffffffffffffffffffffffffffffffffffff161480610514575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104c457600080fd5b505afa1580156104d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fc9190610dad565b73ffffffffffffffffffffffffffffffffffffffff16145b610553576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054a90610fb9565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060011515600660149054906101000a900460ff161515146105b957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561068b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068290610f99565b60405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff169050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061078b575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61079457600080fd5b60011515600660149054906101000a900460ff161515146107b457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166107d583610bc7565b73ffffffffffffffffffffffffffffffffffffffff1614156107f657600080fd5b60003060405161080590610d1e565b61080f9190610eef565b604051809103906000f08015801561082b573d6000803e3d6000fd5b5090506005819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060405180606001604052808273ffffffffffffffffffffffffffffffffffffffff16815260200184815260200160011515815250600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055509050506001915050919050565b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900460ff16905083565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60038054610a0a906110c1565b80601f0160208091040260200160405190810160405280929190818152602001828054610a36906110c1565b8015610a835780601f10610a5857610100808354040283529160200191610a83565b820191906000526020600020905b815481529060010190602001808311610a6657829003601f168201915b505050505081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610b80575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610b8957600080fd5b60011515600660149054906101000a900460ff16151514610ba957600080fd5b6000600660146101000a81548160ff02191690831515021790555090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610c70575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610c7957600080fd5b60011515600660149054906101000a900460ff16151514610c9957600080fd5b60058281548110610cad57610cac611122565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60058181548110610cef57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61076e806200122583390190565b600081359050610d3b816111df565b92915050565b600081519050610d50816111df565b92915050565b600081359050610d65816111f6565b92915050565b600081359050610d7a8161120d565b92915050565b600060208284031215610d9657610d95611151565b5b6000610da484828501610d2c565b91505092915050565b600060208284031215610dc357610dc2611151565b5b6000610dd184828501610d41565b91505092915050565b600060208284031215610df057610def611151565b5b6000610dfe84828501610d56565b91505092915050565b600060208284031215610e1d57610e1c611151565b5b6000610e2b84828501610d6b565b91505092915050565b610e3d81611010565b82525050565b610e4c81611022565b82525050565b610e5b8161106a565b82525050565b6000610e6c82610ff4565b610e768185610fff565b9350610e8681856020860161108e565b610e8f81611156565b840191505092915050565b6000610ea7601883610fff565b9150610eb282611167565b602082019050919050565b6000610eca602483610fff565b9150610ed582611190565b604082019050919050565b610ee981611060565b82525050565b6000602082019050610f046000830184610e34565b92915050565b6000606082019050610f1f6000830186610e34565b610f2c6020830185610ee0565b610f396040830184610e43565b949350505050565b6000602082019050610f566000830184610e43565b92915050565b6000602082019050610f716000830184610e52565b92915050565b60006020820190508181036000830152610f918184610e61565b905092915050565b60006020820190508181036000830152610fb281610e9a565b9050919050565b60006020820190508181036000830152610fd281610ebd565b9050919050565b6000602082019050610fee6000830184610ee0565b92915050565b600081519050919050565b600082825260208201905092915050565b600061101b82611040565b9050919050565b60008115159050919050565b600061103982611010565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006110758261107c565b9050919050565b600061108782611040565b9050919050565b60005b838110156110ac578082015181840152602081019050611091565b838111156110bb576000848401525b50505050565b600060028204905060018216806110d957607f821691505b602082108114156110ed576110ec6110f3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f742061207375627369646961727920616464726573730000000000000000600082015250565b7f57686974656c697374206e6f742063726561746564206279206b6e6f776e207060008201527f6172747900000000000000000000000000000000000000000000000000000000602082015250565b6111e881611010565b81146111f357600080fd5b50565b6111ff8161102e565b811461120a57600080fd5b50565b61121681611060565b811461122157600080fd5b5056fe608060405234801561001057600080fd5b5060405161076e38038061076e83398181016040528101906100329190610095565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060018190555050610110565b60008151905061008f816100f9565b92915050565b6000602082840312156100ab576100aa6100f4565b5b60006100b984828501610080565b91505092915050565b60006100cd826100d4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610102816100c2565b811461010d57600080fd5b50565b61064f8061011f6000396000f3fe6080604052600436106100385760003560e01c80638b7342331461007d578063b119a9d61461009b578063ef5ea07c146100c657610078565b36610078577f7e71433ddf847725166244795048ecf3e3f9f35628254ecbf736056664233493333460405161006e9291906104a2565b60405180910390a1005b600080fd5b610085610103565b60405161009291906104cb565b60405180910390f35b3480156100a757600080fd5b506100b06101c8565b6040516100bd9190610487565b60405180910390f35b3480156100d257600080fd5b506100ed60048036038101906100e891906103d5565b6101ec565b6040516100fa91906104cb565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461015e57600080fd5b60006001549050600060018190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505091505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610299575060011515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b6102a257600080fd5b6001548373ffffffffffffffffffffffffffffffffffffffff163110156102fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f5906104e6565b60405180910390fd5b60405180606001604052808581526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815250600360008681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155905050600190509392505050565b6000813590506103ba816105eb565b92915050565b6000813590506103cf81610602565b92915050565b6000806000606084860312156103ee576103ed610571565b5b60006103fc868287016103c0565b935050602061040d868287016103ab565b925050604061041e868287016103c0565b9150509250925092565b61043181610529565b82525050565b61044081610517565b82525050565b61044f8161053b565b82525050565b6000610462604b83610506565b915061046d82610576565b606082019050919050565b61048181610567565b82525050565b600060208201905061049c6000830184610428565b92915050565b60006040820190506104b76000830185610437565b6104c46020830184610478565b9392505050565b60006020820190506104e06000830184610446565b92915050565b600060208201905081810360008301526104ff81610455565b9050919050565b600082825260208201905092915050565b600061052282610547565b9050919050565b600061053482610547565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f54686520526563656976657220636f6e747261637420646f6573206e6f74206860008201527f6176652073756666696369656e742062616c616e636520666f7220746869732060208201527f7472616e73616374696f6e000000000000000000000000000000000000000000604082015250565b6105f481610517565b81146105ff57600080fd5b50565b61060b81610567565b811461061657600080fd5b5056fea26469706673582212206a7da6a8945d2457f0dff77d1f1a26e1b4efd6fc825d7588597faf3033e4b90764736f6c63430008060033a264697066735822122019739bbfd04c9248bea45cb86a2014de7cbb755e1c2908bedd6fee1f6060492764736f6c63430008060033a2646970667358221220af245843f2b93e38bffc68179620919a12ccfea25c9a8b5410ab79a0b2bb3d5b64736f6c63430008060033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000885760003560e01c806368a0b4e7116200006357806368a0b4e7146200011b5780638da5cb5b1462000153578063a5102b371462000175578063dad1540214620001ab5762000088565b8063010d6663146200008d5780631f2e4f0614620000c35780634aa2f24014620000f9575b600080fd5b620000ab6004803603810190620000a59190620009d0565b620001e1565b604051620000ba919062000aeb565b60405180910390f35b620000e16004803603810190620000db9190620009d0565b6200030c565b604051620000f0919062000b79565b60405180910390f35b620001036200042d565b60405162000112919062000b79565b60405180910390f35b620001396004803603810190620001339190620009d0565b62000500565b6040516200014a9392919062000b3c565b60405180910390f35b6200015d62000557565b6040516200016c919062000aeb565b60405180910390f35b6200019360048036038101906200018d91906200097f565b6200057b565b604051620001a2919062000b79565b60405180910390f35b620001c96004803603810190620001c39190620009d0565b620007ad565b604051620001d8919062000b79565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000275576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200026c9062000bb8565b60405180910390fd5b60011515600360009054906101000a900460ff16151514620002ce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002c59062000b96565b60405180910390fd5b6001600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620003a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003979062000bb8565b60405180910390fd5b60011515600360009054906101000a900460ff16151514620003f9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003f09062000b96565b60405180910390fd5b60006001600084815260200190815260200160002060020160006101000a81548160ff021916908315150217905550919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620004c1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004b89062000bb8565b60405180910390fd5b600360009054906101000a900460ff1615600360006101000a81548160ff021916908315150217905550600360009054906101000a900460ff16905090565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900460ff16905083565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200060f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620006069062000bb8565b60405180910390fd5b60011515600360009054906101000a900460ff1615151462000668576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200065f9062000b96565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040516200069b90620008dc565b620006a892919062000b08565b604051809103906000f080158015620006c5573d6000803e3d6000fd5b50905060405180606001604052808273ffffffffffffffffffffffffffffffffffffffff16815260200160025481526020016001151581525060016000600254815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055509050506001600260008282546200079c919062000c77565b925050819055506001915050919050565b600060011515600360009054906101000a900460ff1615151462000808576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620007ff9062000b96565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166001600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415620008b1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620008a89062000bda565b60405180910390fd5b6001600083815260200190815260200160002060020160009054906101000a900460ff169050919050565b611e498062000ed883390190565b600062000901620008fb8462000c25565b62000bfc565b90508281526020810184848401111562000920576200091f62000dfc565b5b6200092d84828562000d1e565b509392505050565b600082601f8301126200094d576200094c62000df7565b5b81356200095f848260208601620008ea565b91505092915050565b600081359050620009798162000ebd565b92915050565b60006020828403121562000998576200099762000e06565b5b600082013567ffffffffffffffff811115620009b957620009b862000e01565b5b620009c78482850162000935565b91505092915050565b600060208284031215620009e957620009e862000e06565b5b6000620009f98482850162000968565b91505092915050565b62000a0d8162000cd4565b82525050565b62000a1e8162000ce8565b82525050565b600062000a318262000c5b565b62000a3d818562000c66565b935062000a4f81856020860162000d2d565b62000a5a8162000e0b565b840191505092915050565b600062000a7460198362000c66565b915062000a818262000e1c565b602082019050919050565b600062000a9b60278362000c66565b915062000aa88262000e45565b604082019050919050565b600062000ac260158362000c66565b915062000acf8262000e94565b602082019050919050565b62000ae58162000d14565b82525050565b600060208201905062000b02600083018462000a02565b92915050565b600060408201905062000b1f600083018562000a02565b818103602083015262000b33818462000a24565b90509392505050565b600060608201905062000b53600083018662000a02565b62000b62602083018562000ada565b62000b71604083018462000a13565b949350505050565b600060208201905062000b90600083018462000a13565b92915050565b6000602082019050818103600083015262000bb18162000a65565b9050919050565b6000602082019050818103600083015262000bd38162000a8c565b9050919050565b6000602082019050818103600083015262000bf58162000ab3565b9050919050565b600062000c0862000c1b565b905062000c16828262000d63565b919050565b6000604051905090565b600067ffffffffffffffff82111562000c435762000c4262000dc8565b5b62000c4e8262000e0b565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600062000c848262000d14565b915062000c918362000d14565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000cc95762000cc862000d99565b5b828201905092915050565b600062000ce18262000cf4565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101562000d4d57808201518184015260208101905062000d30565b8381111562000d5d576000848401525b50505050565b62000d6e8262000e0b565b810181811067ffffffffffffffff8211171562000d905762000d8f62000dc8565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f436f6e7472616374206e6f206c6f6e6765722061637469766500000000000000600082015250565b7f4f6e6c7920746865206f776e65722063616e206163636573732074686973206660008201527f756e6374696f6e00000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420612076616c696420636f72706f726174650000000000000000000000600082015250565b62000ec88162000d14565b811462000ed457600080fd5b5056fe60806040523480156200001157600080fd5b5060405162001e4938038062001e49833981810160405281019062000037919062000239565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060039080519060200190620000d0929190620000f4565b506001600660146101000a81548160ff021916908315150217905550505062000471565b828054620001029062000368565b90600052602060002090601f01602090048101928262000126576000855562000172565b82601f106200014157805160ff191683800117855562000172565b8280016001018555821562000172579182015b828111156200017157825182559160200191906001019062000154565b5b50905062000181919062000185565b5090565b5b80821115620001a057600081600090555060010162000186565b5090565b6000620001bb620001b584620002c8565b6200029f565b905082815260208101848484011115620001da57620001d962000437565b5b620001e784828562000332565b509392505050565b600081519050620002008162000457565b92915050565b600082601f8301126200021e576200021d62000432565b5b815162000230848260208601620001a4565b91505092915050565b6000806040838503121562000253576200025262000441565b5b60006200026385828601620001ef565b925050602083015167ffffffffffffffff8111156200028757620002866200043c565b5b620002958582860162000206565b9150509250929050565b6000620002ab620002be565b9050620002b982826200039e565b919050565b6000604051905090565b600067ffffffffffffffff821115620002e657620002e562000403565b5b620002f18262000446565b9050602081019050919050565b60006200030b8262000312565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156200035257808201518184015260208101905062000335565b8381111562000362576000848401525b50505050565b600060028204905060018216806200038157607f821691505b60208210811415620003985762000397620003d4565b5b50919050565b620003a98262000446565b810181811067ffffffffffffffff82111715620003cb57620003ca62000403565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6200046281620002fe565b81146200046e57600080fd5b50565b6119c880620004816000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638ba4d864116100715780638ba4d864146101a35780638da5cb5b146101c157806393e59dc1146101df57806398f4448a146101fd578063f41114961461021b578063f8a64f9a1461024b576100b4565b806334929e9a146100b95780633d0f963e146100d75780636fdbaf43146100f3578063805f420214610123578063869080bf1461015357806389165e4014610185575b600080fd5b6100c161027b565b6040516100ce9190610fd9565b60405180910390f35b6100f160048036038101906100ec9190610dda565b610281565b005b61010d60048036038101906101089190610d80565b610597565b60405161011a9190610f41565b60405180910390f35b61013d60048036038101906101389190610e07565b6106e2565b60405161014a9190610f41565b60405180910390f35b61016d60048036038101906101689190610d80565b610982565b60405161017c93929190610f0a565b60405180910390f35b61018d6109d9565b60405161019a9190610eef565b60405180910390f35b6101ab6109fd565b6040516101b89190610f77565b60405180910390f35b6101c9610a8b565b6040516101d69190610eef565b60405180910390f35b6101e7610ab1565b6040516101f49190610f5c565b60405180910390f35b610205610ad7565b6040516102129190610f41565b60405180910390f35b61023560048036038101906102309190610e07565b610bc7565b6040516102429190610eef565b60405180910390f35b61026560048036038101906102609190610e07565b610cdf565b6040516102729190610eef565b60405180910390f35b60025481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610328575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61033157600080fd5b60011515600660149054906101000a900460ff1615151461035157600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103d057600080fd5b505afa1580156103e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104089190610dad565b73ffffffffffffffffffffffffffffffffffffffff161480610514575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104c457600080fd5b505afa1580156104d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fc9190610dad565b73ffffffffffffffffffffffffffffffffffffffff16145b610553576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054a90610fb9565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060011515600660149054906101000a900460ff161515146105b957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561068b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068290610f99565b60405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff169050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061078b575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61079457600080fd5b60011515600660149054906101000a900460ff161515146107b457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166107d583610bc7565b73ffffffffffffffffffffffffffffffffffffffff1614156107f657600080fd5b60003060405161080590610d1e565b61080f9190610eef565b604051809103906000f08015801561082b573d6000803e3d6000fd5b5090506005819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060405180606001604052808273ffffffffffffffffffffffffffffffffffffffff16815260200184815260200160011515815250600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055509050506001915050919050565b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900460ff16905083565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60038054610a0a906110c1565b80601f0160208091040260200160405190810160405280929190818152602001828054610a36906110c1565b8015610a835780601f10610a5857610100808354040283529160200191610a83565b820191906000526020600020905b815481529060010190602001808311610a6657829003601f168201915b505050505081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610b80575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610b8957600080fd5b60011515600660149054906101000a900460ff16151514610ba957600080fd5b6000600660146101000a81548160ff02191690831515021790555090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610c70575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610c7957600080fd5b60011515600660149054906101000a900460ff16151514610c9957600080fd5b60058281548110610cad57610cac611122565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60058181548110610cef57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61076e806200122583390190565b600081359050610d3b816111df565b92915050565b600081519050610d50816111df565b92915050565b600081359050610d65816111f6565b92915050565b600081359050610d7a8161120d565b92915050565b600060208284031215610d9657610d95611151565b5b6000610da484828501610d2c565b91505092915050565b600060208284031215610dc357610dc2611151565b5b6000610dd184828501610d41565b91505092915050565b600060208284031215610df057610def611151565b5b6000610dfe84828501610d56565b91505092915050565b600060208284031215610e1d57610e1c611151565b5b6000610e2b84828501610d6b565b91505092915050565b610e3d81611010565b82525050565b610e4c81611022565b82525050565b610e5b8161106a565b82525050565b6000610e6c82610ff4565b610e768185610fff565b9350610e8681856020860161108e565b610e8f81611156565b840191505092915050565b6000610ea7601883610fff565b9150610eb282611167565b602082019050919050565b6000610eca602483610fff565b9150610ed582611190565b604082019050919050565b610ee981611060565b82525050565b6000602082019050610f046000830184610e34565b92915050565b6000606082019050610f1f6000830186610e34565b610f2c6020830185610ee0565b610f396040830184610e43565b949350505050565b6000602082019050610f566000830184610e43565b92915050565b6000602082019050610f716000830184610e52565b92915050565b60006020820190508181036000830152610f918184610e61565b905092915050565b60006020820190508181036000830152610fb281610e9a565b9050919050565b60006020820190508181036000830152610fd281610ebd565b9050919050565b6000602082019050610fee6000830184610ee0565b92915050565b600081519050919050565b600082825260208201905092915050565b600061101b82611040565b9050919050565b60008115159050919050565b600061103982611010565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006110758261107c565b9050919050565b600061108782611040565b9050919050565b60005b838110156110ac578082015181840152602081019050611091565b838111156110bb576000848401525b50505050565b600060028204905060018216806110d957607f821691505b602082108114156110ed576110ec6110f3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f742061207375627369646961727920616464726573730000000000000000600082015250565b7f57686974656c697374206e6f742063726561746564206279206b6e6f776e207060008201527f6172747900000000000000000000000000000000000000000000000000000000602082015250565b6111e881611010565b81146111f357600080fd5b50565b6111ff8161102e565b811461120a57600080fd5b50565b61121681611060565b811461122157600080fd5b5056fe608060405234801561001057600080fd5b5060405161076e38038061076e83398181016040528101906100329190610095565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060018190555050610110565b60008151905061008f816100f9565b92915050565b6000602082840312156100ab576100aa6100f4565b5b60006100b984828501610080565b91505092915050565b60006100cd826100d4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610102816100c2565b811461010d57600080fd5b50565b61064f8061011f6000396000f3fe6080604052600436106100385760003560e01c80638b7342331461007d578063b119a9d61461009b578063ef5ea07c146100c657610078565b36610078577f7e71433ddf847725166244795048ecf3e3f9f35628254ecbf736056664233493333460405161006e9291906104a2565b60405180910390a1005b600080fd5b610085610103565b60405161009291906104cb565b60405180910390f35b3480156100a757600080fd5b506100b06101c8565b6040516100bd9190610487565b60405180910390f35b3480156100d257600080fd5b506100ed60048036038101906100e891906103d5565b6101ec565b6040516100fa91906104cb565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461015e57600080fd5b60006001549050600060018190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505091505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610299575060011515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b6102a257600080fd5b6001548373ffffffffffffffffffffffffffffffffffffffff163110156102fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f5906104e6565b60405180910390fd5b60405180606001604052808581526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815250600360008681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155905050600190509392505050565b6000813590506103ba816105eb565b92915050565b6000813590506103cf81610602565b92915050565b6000806000606084860312156103ee576103ed610571565b5b60006103fc868287016103c0565b935050602061040d868287016103ab565b925050604061041e868287016103c0565b9150509250925092565b61043181610529565b82525050565b61044081610517565b82525050565b61044f8161053b565b82525050565b6000610462604b83610506565b915061046d82610576565b606082019050919050565b61048181610567565b82525050565b600060208201905061049c6000830184610428565b92915050565b60006040820190506104b76000830185610437565b6104c46020830184610478565b9392505050565b60006020820190506104e06000830184610446565b92915050565b600060208201905081810360008301526104ff81610455565b9050919050565b600082825260208201905092915050565b600061052282610547565b9050919050565b600061053482610547565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f54686520526563656976657220636f6e747261637420646f6573206e6f74206860008201527f6176652073756666696369656e742062616c616e636520666f7220746869732060208201527f7472616e73616374696f6e000000000000000000000000000000000000000000604082015250565b6105f481610517565b81146105ff57600080fd5b50565b61060b81610567565b811461061657600080fd5b5056fea26469706673582212206a7da6a8945d2457f0dff77d1f1a26e1b4efd6fc825d7588597faf3033e4b90764736f6c63430008060033a264697066735822122019739bbfd04c9248bea45cb86a2014de7cbb755e1c2908bedd6fee1f6060492764736f6c63430008060033a2646970667358221220af245843f2b93e38bffc68179620919a12ccfea25c9a8b5410ab79a0b2bb3d5b64736f6c63430008060033",
  "immutableReferences": {},
  "generatedSources": [],
=======
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Admin\",\"name\":\"admin_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"contract Admin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"checkIfCorporateValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"corporates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"corpAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"corpName\",\"type\":\"string\"}],\"name\":\"createCorp\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"disableCorporate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getCorporate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggleContractActivation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CorporateFactory.sol\":\"CorporateFactory\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Admin.sol\":{\"keccak256\":\"0xb7d2d551c1fd90bd0101c7b424d76a819f03655f88d03a845d72c3863776128f\",\"urls\":[\"bzz-raw://861c063cb4c0305fd961af50d2099e0c1aef78ec347680cb17ce1b2697958926\",\"dweb:/ipfs/QmRjx5twmEnR6m4DvfKfuWZryBzQUSE71uHq8kNEfm2GcR\"]},\"project:/contracts/CorporateFactory.sol\":{\"keccak256\":\"0x85f69673a556be5da424034827fc7df5e6919a8caef9a8481c6655f673c8c387\",\"urls\":[\"bzz-raw://fbda6b9907c1d7f8eab1a2d851b513b734484c9fc609ea5a1a1697e51745eb31\",\"dweb:/ipfs/QmPZZBjwLGmpVNCUbusVzC4Yp9wTRQ5rVsvJpHxKBmLkJ6\"]},\"project:/contracts/FundsPool.sol\":{\"keccak256\":\"0xc45f2844e3751b1067a4a80523cee6e8503819a87c4685b0eaea4bd64dc32733\",\"urls\":[\"bzz-raw://fa893d4530c290b3d0d7b21f4b115d3a98aa6437075d1b51730afd81600e8985\",\"dweb:/ipfs/QmUAFzN5PQ6eaVhhPkwvGCodrbqdqg9YHbzN8kBnSxMH7w\"]},\"project:/contracts/GiverFactory.sol\":{\"keccak256\":\"0x407f3d7849b386f5a4dbf997d4563f4f6ee2d966f67dbb43769f66b32b5f063d\",\"urls\":[\"bzz-raw://e91505602a76026ab3a5faae5f786b741137f366f75b1d5af194523233bc7103\",\"dweb:/ipfs/QmTKfzcTMFmHAoBjuodu89CyCrrjGAyeMHmErnMzVhpHGW\"]},\"project:/contracts/ReceiverFactory.sol\":{\"keccak256\":\"0x6d0b15835daaef37a6f7f6418ef615294d7790ab958ca11ee36950d0a9b7ab45\",\"urls\":[\"bzz-raw://b3afe0c513b61f6ac214e58d2caa685b595804816fb19c3c1f456c2f057e7c96\",\"dweb:/ipfs/QmXx74DuVeHFWS3WpKRK3kvd4X32Yd89xuVZUP6SycHriK\"]},\"project:/contracts/Whitelist.sol\":{\"keccak256\":\"0x692bdfad1d15e852adc20980e627a0ec38b195975df8b8c1a5d15b63884f848a\",\"urls\":[\"bzz-raw://ee70e20928351b069ff828d8d5cc43bebae3e2602a24fc2673e862a10ca4872a\",\"dweb:/ipfs/QmUEAEjUKhQAsnydyr96xiQyngbGkgdmRxEFt8hymYgLSY\"]}},\"version\":1}",
  "bytecode": "0x60806040526001600460006101000a81548160ff0219169083151502179055503480156200002c57600080fd5b506040516200328b3803806200328b8339818101604052810190620000529190620000f1565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200018a565b600081519050620000eb8162000170565b92915050565b6000602082840312156200010a57620001096200016b565b5b60006200011a84828501620000da565b91505092915050565b600062000130826200014b565b9050919050565b6000620001448262000123565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200017b8162000137565b81146200018757600080fd5b50565b6130f1806200019a6000396000f3fe60806040523480156200001157600080fd5b5060043610620000945760003560e01c80638da5cb5b11620000635780638da5cb5b146200015f578063a5102b371462000181578063dad1540214620001b7578063f851a44014620001ed5762000094565b8063010d666314620000995780631f2e4f0614620000cf5780634aa2f240146200010557806368a0b4e71462000127575b600080fd5b620000b76004803603810190620000b1919062000ac4565b6200020f565b604051620000c6919062000bf0565b60405180910390f35b620000ed6004803603810190620000e7919062000ac4565b620002a8565b604051620000fc919062000c8e565b60405180910390f35b6200010f62000426565b6040516200011e919062000c8e565b60405180910390f35b6200014560048036038101906200013f919062000ac4565b62000552565b604051620001569392919062000c51565b60405180910390f35b62000169620005a9565b60405162000178919062000bf0565b60405180910390f35b6200019f600480360381019062000199919062000a73565b620005cd565b604051620001ae919062000bf0565b60405180910390f35b620001d56004803603810190620001cf919062000ac4565b6200087b565b604051620001e4919062000c8e565b60405180910390f35b620001f7620009aa565b60405162000206919062000cab565b60405180910390f35b600060011515600460009054906101000a900460ff161515146200026a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002619062000cc8565b60405180910390fd5b6002600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480620003535750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b62000395576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200038c9062000cea565b60405180910390fd5b60011515600460009054906101000a900460ff16151514620003ee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003e59062000cc8565b60405180910390fd5b60006002600084815260200190815260200160002060020160006101000a81548160ff02191690831515021790555060019050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480620004d15750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b62000513576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200050a9062000cea565b60405180910390fd5b600460009054906101000a900460ff1615600460006101000a81548160ff021916908315150217905550600460009054906101000a900460ff16905090565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900460ff16905083565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480620006785750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b620006ba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620006b19062000cea565b60405180910390fd5b60011515600460009054906101000a900460ff1615151462000713576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200070a9062000cc8565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040516200076990620009d0565b620007779392919062000c0d565b604051809103906000f08015801562000794573d6000803e3d6000fd5b50905060405180606001604052808273ffffffffffffffffffffffffffffffffffffffff16815260200160035481526020016001151581525060026000600354815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055509050506001600360008282546200086b919062000da9565b9250508190555080915050919050565b600060011515600460009054906101000a900460ff16151514620008d6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620008cd9062000cc8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156200097f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620009769062000d0c565b60405180910390fd5b6002600083815260200190815260200160002060020160009054906101000a900460ff169050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61208a806200103283390190565b6000620009f5620009ef8462000d57565b62000d2e565b90508281526020810184848401111562000a145762000a1362000f56565b5b62000a2184828562000e78565b509392505050565b600082601f83011262000a415762000a4062000f51565b5b813562000a53848260208601620009de565b91505092915050565b60008135905062000a6d8162001017565b92915050565b60006020828403121562000a8c5762000a8b62000f60565b5b600082013567ffffffffffffffff81111562000aad5762000aac62000f5b565b5b62000abb8482850162000a29565b91505092915050565b60006020828403121562000add5762000adc62000f60565b5b600062000aed8482850162000a5c565b91505092915050565b62000b018162000e06565b82525050565b62000b128162000e1a565b82525050565b62000b238162000e50565b82525050565b600062000b368262000d8d565b62000b42818562000d98565b935062000b5481856020860162000e87565b62000b5f8162000f65565b840191505092915050565b600062000b7960198362000d98565b915062000b868262000f76565b602082019050919050565b600062000ba0602d8362000d98565b915062000bad8262000f9f565b604082019050919050565b600062000bc760158362000d98565b915062000bd48262000fee565b602082019050919050565b62000bea8162000e46565b82525050565b600060208201905062000c07600083018462000af6565b92915050565b600060608201905062000c24600083018662000af6565b62000c33602083018562000b18565b818103604083015262000c47818462000b29565b9050949350505050565b600060608201905062000c68600083018662000af6565b62000c77602083018562000bdf565b62000c86604083018462000b07565b949350505050565b600060208201905062000ca5600083018462000b07565b92915050565b600060208201905062000cc2600083018462000b18565b92915050565b6000602082019050818103600083015262000ce38162000b6a565b9050919050565b6000602082019050818103600083015262000d058162000b91565b9050919050565b6000602082019050818103600083015262000d278162000bb8565b9050919050565b600062000d3a62000d4d565b905062000d48828262000ebd565b919050565b6000604051905090565b600067ffffffffffffffff82111562000d755762000d7462000f22565b5b62000d808262000f65565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600062000db68262000e46565b915062000dc38362000e46565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000dfb5762000dfa62000ef3565b5b828201905092915050565b600062000e138262000e26565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600062000e5d8262000e64565b9050919050565b600062000e718262000e26565b9050919050565b82818337600083830152505050565b60005b8381101562000ea757808201518184015260208101905062000e8a565b8381111562000eb7576000848401525b50505050565b62000ec88262000f65565b810181811067ffffffffffffffff8211171562000eea5762000ee962000f22565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f436f6e7472616374206e6f206c6f6e6765722061637469766500000000000000600082015250565b7f4f6e6c7920746865206f776e65722f61646d696e2063616e206163636573732060008201527f746869732066756e6374696f6e00000000000000000000000000000000000000602082015250565b7f4e6f7420612076616c696420636f72706f726174650000000000000000000000600082015250565b620010228162000e46565b81146200102e57600080fd5b5056fe60806040523480156200001157600080fd5b506040516200208a3803806200208a833981810160405281019062000037919062000292565b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600490805190602001906200011192919062000136565b506001600760146101000a81548160ff0219169083151502179055505050506200050d565b8280546200014490620003ea565b90600052602060002090601f016020900481019282620001685760008555620001b4565b82601f106200018357805160ff1916838001178555620001b4565b82800160010185558215620001b4579182015b82811115620001b357825182559160200191906001019062000196565b5b509050620001c39190620001c7565b5090565b5b80821115620001e2576000816000905550600101620001c8565b5090565b6000620001fd620001f78462000336565b6200030d565b9050828152602081018484840111156200021c576200021b620004b9565b5b62000229848285620003b4565b509392505050565b6000815190506200024281620004d9565b92915050565b6000815190506200025981620004f3565b92915050565b600082601f830112620002775762000276620004b4565b5b815162000289848260208601620001e6565b91505092915050565b600080600060608486031215620002ae57620002ad620004c3565b5b6000620002be8682870162000231565b9350506020620002d18682870162000248565b925050604084015167ffffffffffffffff811115620002f557620002f4620004be565b5b62000303868287016200025f565b9150509250925092565b6000620003196200032c565b905062000327828262000420565b919050565b6000604051905090565b600067ffffffffffffffff82111562000354576200035362000485565b5b6200035f82620004c8565b9050602081019050919050565b6000620003798262000394565b9050919050565b60006200038d826200036c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015620003d4578082015181840152602081019050620003b7565b83811115620003e4576000848401525b50505050565b600060028204905060018216806200040357607f821691505b602082108114156200041a576200041962000456565b5b50919050565b6200042b82620004c8565b810181811067ffffffffffffffff821117156200044d576200044c62000485565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b620004e4816200036c565b8114620004f057600080fd5b50565b620004fe8162000380565b81146200050a57600080fd5b50565b611b6d806200051d6000396000f3fe60806040523480156200001157600080fd5b5060043610620000e25760003560e01c80638ba4d864116200009957806398f4448a116200006f57806398f4448a1462000255578063f41114961462000277578063f851a44014620002ad578063f8a64f9a14620002cf57620000e2565b80638ba4d86414620001ef5780638da5cb5b146200021157806393e59dc1146200023357620000e2565b806334929e9a14620000e75780633d0f963e14620001095780636fdbaf431462000129578063805f4202146200015f578063869080bf146200019557806389165e4014620001cd575b600080fd5b620000f162000305565b604051620001009190620010f0565b60405180910390f35b62000127600480360381019062000121919062000e61565b6200030b565b005b62000147600480360381019062000141919062000dfd565b62000630565b60405162000156919062001014565b60405180910390f35b6200017d600480360381019062000177919062000e93565b6200077f565b6040516200018c919062000fba565b60405180910390f35b620001b36004803603810190620001ad919062000dfd565b62000a5f565b604051620001c49392919062000fd7565b60405180910390f35b620001d762000ab6565b604051620001e6919062000fba565b60405180910390f35b620001f962000ada565b60405162000208919062001088565b60405180910390f35b6200021b62000b70565b6040516200022a919062000fba565b60405180910390f35b6200023d62000b96565b6040516200024c91906200106b565b60405180910390f35b6200025f62000bbc565b6040516200026e919062001014565b60405180910390f35b6200029560048036038101906200028f919062000e93565b62000cc1565b604051620002a4919062000fba565b60405180910390f35b620002b762000d2d565b604051620002c6919062001031565b60405180910390f35b620002ed6004803603810190620002e7919062000e93565b62000d53565b604051620002fc919062000fba565b60405180910390f35b60035481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480620003b3575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b620003bd57600080fd5b60011515600760149054906101000a900460ff16151514620003de57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200045e57600080fd5b505afa15801562000473573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000499919062000e2f565b73ffffffffffffffffffffffffffffffffffffffff161480620005aa575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200055757600080fd5b505afa1580156200056c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000592919062000e2f565b73ffffffffffffffffffffffffffffffffffffffff16145b620005ec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005e390620010ce565b60405180910390fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060011515600760149054906101000a900460ff161515146200065357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141562000728576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200071f90620010ac565b60405180910390fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff169050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148062000829575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6200083357600080fd5b60011515600760149054906101000a900460ff161515146200085457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600683815481106200088357620008826200129a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614620008cf57600080fd5b600030604051620008e09062000d93565b620008ec91906200104e565b604051809103906000f08015801562000909573d6000803e3d6000fd5b5090506006819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060405180606001604052808273ffffffffffffffffffffffffffffffffffffffff16815260200184815260200160011515815250600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff02191690831515021790555090505080915050919050565b60056020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900460ff16905083565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6004805462000ae99062001235565b80601f016020809104026020016040519081016040528092919081815260200182805462000b179062001235565b801562000b685780601f1062000b3c5761010080835404028352916020019162000b68565b820191906000526020600020905b81548152906001019060200180831162000b4a57829003601f168201915b505050505081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148062000c66575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b62000c7057600080fd5b60011515600760149054906101000a900460ff1615151462000c9157600080fd5b6000600760146101000a81548160ff021916908315150217905550600760149054906101000a900460ff16905090565b600060011515600760149054906101000a900460ff1615151462000ce457600080fd5b6006828154811062000cfb5762000cfa6200129a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6006818154811062000d6457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61079280620013a683390190565b60008135905062000db28162001357565b92915050565b60008151905062000dc98162001357565b92915050565b60008135905062000de08162001371565b92915050565b60008135905062000df7816200138b565b92915050565b60006020828403121562000e165762000e15620012c9565b5b600062000e268482850162000da1565b91505092915050565b60006020828403121562000e485762000e47620012c9565b5b600062000e588482850162000db8565b91505092915050565b60006020828403121562000e7a5762000e79620012c9565b5b600062000e8a8482850162000dcf565b91505092915050565b60006020828403121562000eac5762000eab620012c9565b5b600062000ebc8482850162000de6565b91505092915050565b62000ed08162001129565b82525050565b62000ee1816200113d565b82525050565b62000ef28162001187565b82525050565b62000f0381620011af565b82525050565b62000f1481620011d7565b82525050565b600062000f27826200110d565b62000f33818562001118565b935062000f45818560208601620011ff565b62000f5081620012ce565b840191505092915050565b600062000f6a60188362001118565b915062000f7782620012df565b602082019050919050565b600062000f9160248362001118565b915062000f9e8262001308565b604082019050919050565b62000fb4816200117d565b82525050565b600060208201905062000fd1600083018462000ec5565b92915050565b600060608201905062000fee600083018662000ec5565b62000ffd602083018562000fa9565b6200100c604083018462000ed6565b949350505050565b60006020820190506200102b600083018462000ed6565b92915050565b600060208201905062001048600083018462000ee7565b92915050565b600060208201905062001065600083018462000ef8565b92915050565b600060208201905062001082600083018462000f09565b92915050565b60006020820190508181036000830152620010a4818462000f1a565b905092915050565b60006020820190508181036000830152620010c78162000f5b565b9050919050565b60006020820190508181036000830152620010e98162000f82565b9050919050565b600060208201905062001107600083018462000fa9565b92915050565b600081519050919050565b600082825260208201905092915050565b600062001136826200115d565b9050919050565b60008115159050919050565b6000620011568262001129565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600062001194826200119b565b9050919050565b6000620011a8826200115d565b9050919050565b6000620011bc82620011c3565b9050919050565b6000620011d0826200115d565b9050919050565b6000620011e482620011eb565b9050919050565b6000620011f8826200115d565b9050919050565b60005b838110156200121f57808201518184015260208101905062001202565b838111156200122f576000848401525b50505050565b600060028204905060018216806200124e57607f821691505b602082108114156200126557620012646200126b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f742061207375627369646961727920616464726573730000000000000000600082015250565b7f57686974656c697374206e6f742063726561746564206279206b6e6f776e207060008201527f6172747900000000000000000000000000000000000000000000000000000000602082015250565b620013628162001129565b81146200136e57600080fd5b50565b6200137c8162001149565b81146200138857600080fd5b50565b62001396816200117d565b8114620013a257600080fd5b5056fe608060405234801561001057600080fd5b5060405161079238038061079283398181016040528101906100329190610095565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060018190555050610122565b60008151905061008f8161010b565b92915050565b6000602082840312156100ab576100aa610106565b5b60006100b984828501610080565b91505092915050565b60006100cd826100e6565b9050919050565b60006100df826100c2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610114816100d4565b811461011f57600080fd5b50565b610661806101316000396000f3fe6080604052600436106100385760003560e01c80638b7342331461007d578063b119a9d61461009b578063ef5ea07c146100c657610078565b36610078577f7e71433ddf847725166244795048ecf3e3f9f35628254ecbf736056664233493333460405161006e929190610487565b60405180910390a1005b600080fd5b610085610103565b60405161009291906104b0565b60405180910390f35b3480156100a757600080fd5b506100b06101c8565b6040516100bd91906104cb565b60405180910390f35b3480156100d257600080fd5b506100ed60048036038101906100e891906103d5565b6101ec565b6040516100fa91906104b0565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461015e57600080fd5b60006001549050600060018190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505091505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610299575060011515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b6102a257600080fd5b6001548373ffffffffffffffffffffffffffffffffffffffff163110156102fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f5906104e6565b60405180910390fd5b60405180606001604052808581526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815250600360008681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155905050600190509392505050565b6000813590506103ba816105fd565b92915050565b6000813590506103cf81610614565b92915050565b6000806000606084860312156103ee576103ed610583565b5b60006103fc868287016103c0565b935050602061040d868287016103ab565b925050604061041e868287016103c0565b9150509250925092565b61043181610517565b82525050565b61044081610529565b82525050565b61044f8161055f565b82525050565b6000610462604b83610506565b915061046d82610588565b606082019050919050565b61048181610555565b82525050565b600060408201905061049c6000830185610428565b6104a96020830184610478565b9392505050565b60006020820190506104c56000830184610437565b92915050565b60006020820190506104e06000830184610446565b92915050565b600060208201905081810360008301526104ff81610455565b9050919050565b600082825260208201905092915050565b600061052282610535565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061056a82610571565b9050919050565b600061057c82610535565b9050919050565b600080fd5b7f54686520526563656976657220636f6e747261637420646f6573206e6f74206860008201527f6176652073756666696369656e742062616c616e636520666f7220746869732060208201527f7472616e73616374696f6e000000000000000000000000000000000000000000604082015250565b61060681610517565b811461061157600080fd5b50565b61061d81610555565b811461062857600080fd5b5056fea26469706673582212203f2b42576879cdd5557f3dc83a92f0f8b03abc3b0f67e774f308b0a94f7dc22864736f6c63430008060033a264697066735822122064431c5cc66068f043b0084d02dd15e681c554a643b8b861f26955cc491f21c264736f6c63430008060033a2646970667358221220562ddc2733730d48998a7902761a4ef2e20e8865758940583123f740c00318a664736f6c63430008060033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000945760003560e01c80638da5cb5b11620000635780638da5cb5b146200015f578063a5102b371462000181578063dad1540214620001b7578063f851a44014620001ed5762000094565b8063010d666314620000995780631f2e4f0614620000cf5780634aa2f240146200010557806368a0b4e71462000127575b600080fd5b620000b76004803603810190620000b1919062000ac4565b6200020f565b604051620000c6919062000bf0565b60405180910390f35b620000ed6004803603810190620000e7919062000ac4565b620002a8565b604051620000fc919062000c8e565b60405180910390f35b6200010f62000426565b6040516200011e919062000c8e565b60405180910390f35b6200014560048036038101906200013f919062000ac4565b62000552565b604051620001569392919062000c51565b60405180910390f35b62000169620005a9565b60405162000178919062000bf0565b60405180910390f35b6200019f600480360381019062000199919062000a73565b620005cd565b604051620001ae919062000bf0565b60405180910390f35b620001d56004803603810190620001cf919062000ac4565b6200087b565b604051620001e4919062000c8e565b60405180910390f35b620001f7620009aa565b60405162000206919062000cab565b60405180910390f35b600060011515600460009054906101000a900460ff161515146200026a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002619062000cc8565b60405180910390fd5b6002600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480620003535750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b62000395576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200038c9062000cea565b60405180910390fd5b60011515600460009054906101000a900460ff16151514620003ee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003e59062000cc8565b60405180910390fd5b60006002600084815260200190815260200160002060020160006101000a81548160ff02191690831515021790555060019050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480620004d15750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b62000513576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200050a9062000cea565b60405180910390fd5b600460009054906101000a900460ff1615600460006101000a81548160ff021916908315150217905550600460009054906101000a900460ff16905090565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900460ff16905083565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480620006785750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b620006ba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620006b19062000cea565b60405180910390fd5b60011515600460009054906101000a900460ff1615151462000713576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200070a9062000cc8565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040516200076990620009d0565b620007779392919062000c0d565b604051809103906000f08015801562000794573d6000803e3d6000fd5b50905060405180606001604052808273ffffffffffffffffffffffffffffffffffffffff16815260200160035481526020016001151581525060026000600354815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055509050506001600360008282546200086b919062000da9565b9250508190555080915050919050565b600060011515600460009054906101000a900460ff16151514620008d6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620008cd9062000cc8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156200097f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620009769062000d0c565b60405180910390fd5b6002600083815260200190815260200160002060020160009054906101000a900460ff169050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61208a806200103283390190565b6000620009f5620009ef8462000d57565b62000d2e565b90508281526020810184848401111562000a145762000a1362000f56565b5b62000a2184828562000e78565b509392505050565b600082601f83011262000a415762000a4062000f51565b5b813562000a53848260208601620009de565b91505092915050565b60008135905062000a6d8162001017565b92915050565b60006020828403121562000a8c5762000a8b62000f60565b5b600082013567ffffffffffffffff81111562000aad5762000aac62000f5b565b5b62000abb8482850162000a29565b91505092915050565b60006020828403121562000add5762000adc62000f60565b5b600062000aed8482850162000a5c565b91505092915050565b62000b018162000e06565b82525050565b62000b128162000e1a565b82525050565b62000b238162000e50565b82525050565b600062000b368262000d8d565b62000b42818562000d98565b935062000b5481856020860162000e87565b62000b5f8162000f65565b840191505092915050565b600062000b7960198362000d98565b915062000b868262000f76565b602082019050919050565b600062000ba0602d8362000d98565b915062000bad8262000f9f565b604082019050919050565b600062000bc760158362000d98565b915062000bd48262000fee565b602082019050919050565b62000bea8162000e46565b82525050565b600060208201905062000c07600083018462000af6565b92915050565b600060608201905062000c24600083018662000af6565b62000c33602083018562000b18565b818103604083015262000c47818462000b29565b9050949350505050565b600060608201905062000c68600083018662000af6565b62000c77602083018562000bdf565b62000c86604083018462000b07565b949350505050565b600060208201905062000ca5600083018462000b07565b92915050565b600060208201905062000cc2600083018462000b18565b92915050565b6000602082019050818103600083015262000ce38162000b6a565b9050919050565b6000602082019050818103600083015262000d058162000b91565b9050919050565b6000602082019050818103600083015262000d278162000bb8565b9050919050565b600062000d3a62000d4d565b905062000d48828262000ebd565b919050565b6000604051905090565b600067ffffffffffffffff82111562000d755762000d7462000f22565b5b62000d808262000f65565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600062000db68262000e46565b915062000dc38362000e46565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000dfb5762000dfa62000ef3565b5b828201905092915050565b600062000e138262000e26565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600062000e5d8262000e64565b9050919050565b600062000e718262000e26565b9050919050565b82818337600083830152505050565b60005b8381101562000ea757808201518184015260208101905062000e8a565b8381111562000eb7576000848401525b50505050565b62000ec88262000f65565b810181811067ffffffffffffffff8211171562000eea5762000ee962000f22565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f436f6e7472616374206e6f206c6f6e6765722061637469766500000000000000600082015250565b7f4f6e6c7920746865206f776e65722f61646d696e2063616e206163636573732060008201527f746869732066756e6374696f6e00000000000000000000000000000000000000602082015250565b7f4e6f7420612076616c696420636f72706f726174650000000000000000000000600082015250565b620010228162000e46565b81146200102e57600080fd5b5056fe60806040523480156200001157600080fd5b506040516200208a3803806200208a833981810160405281019062000037919062000292565b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600490805190602001906200011192919062000136565b506001600760146101000a81548160ff0219169083151502179055505050506200050d565b8280546200014490620003ea565b90600052602060002090601f016020900481019282620001685760008555620001b4565b82601f106200018357805160ff1916838001178555620001b4565b82800160010185558215620001b4579182015b82811115620001b357825182559160200191906001019062000196565b5b509050620001c39190620001c7565b5090565b5b80821115620001e2576000816000905550600101620001c8565b5090565b6000620001fd620001f78462000336565b6200030d565b9050828152602081018484840111156200021c576200021b620004b9565b5b62000229848285620003b4565b509392505050565b6000815190506200024281620004d9565b92915050565b6000815190506200025981620004f3565b92915050565b600082601f830112620002775762000276620004b4565b5b815162000289848260208601620001e6565b91505092915050565b600080600060608486031215620002ae57620002ad620004c3565b5b6000620002be8682870162000231565b9350506020620002d18682870162000248565b925050604084015167ffffffffffffffff811115620002f557620002f4620004be565b5b62000303868287016200025f565b9150509250925092565b6000620003196200032c565b905062000327828262000420565b919050565b6000604051905090565b600067ffffffffffffffff82111562000354576200035362000485565b5b6200035f82620004c8565b9050602081019050919050565b6000620003798262000394565b9050919050565b60006200038d826200036c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015620003d4578082015181840152602081019050620003b7565b83811115620003e4576000848401525b50505050565b600060028204905060018216806200040357607f821691505b602082108114156200041a576200041962000456565b5b50919050565b6200042b82620004c8565b810181811067ffffffffffffffff821117156200044d576200044c62000485565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b620004e4816200036c565b8114620004f057600080fd5b50565b620004fe8162000380565b81146200050a57600080fd5b50565b611b6d806200051d6000396000f3fe60806040523480156200001157600080fd5b5060043610620000e25760003560e01c80638ba4d864116200009957806398f4448a116200006f57806398f4448a1462000255578063f41114961462000277578063f851a44014620002ad578063f8a64f9a14620002cf57620000e2565b80638ba4d86414620001ef5780638da5cb5b146200021157806393e59dc1146200023357620000e2565b806334929e9a14620000e75780633d0f963e14620001095780636fdbaf431462000129578063805f4202146200015f578063869080bf146200019557806389165e4014620001cd575b600080fd5b620000f162000305565b604051620001009190620010f0565b60405180910390f35b62000127600480360381019062000121919062000e61565b6200030b565b005b62000147600480360381019062000141919062000dfd565b62000630565b60405162000156919062001014565b60405180910390f35b6200017d600480360381019062000177919062000e93565b6200077f565b6040516200018c919062000fba565b60405180910390f35b620001b36004803603810190620001ad919062000dfd565b62000a5f565b604051620001c49392919062000fd7565b60405180910390f35b620001d762000ab6565b604051620001e6919062000fba565b60405180910390f35b620001f962000ada565b60405162000208919062001088565b60405180910390f35b6200021b62000b70565b6040516200022a919062000fba565b60405180910390f35b6200023d62000b96565b6040516200024c91906200106b565b60405180910390f35b6200025f62000bbc565b6040516200026e919062001014565b60405180910390f35b6200029560048036038101906200028f919062000e93565b62000cc1565b604051620002a4919062000fba565b60405180910390f35b620002b762000d2d565b604051620002c6919062001031565b60405180910390f35b620002ed6004803603810190620002e7919062000e93565b62000d53565b604051620002fc919062000fba565b60405180910390f35b60035481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480620003b3575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b620003bd57600080fd5b60011515600760149054906101000a900460ff16151514620003de57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200045e57600080fd5b505afa15801562000473573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000499919062000e2f565b73ffffffffffffffffffffffffffffffffffffffff161480620005aa575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200055757600080fd5b505afa1580156200056c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000592919062000e2f565b73ffffffffffffffffffffffffffffffffffffffff16145b620005ec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005e390620010ce565b60405180910390fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060011515600760149054906101000a900460ff161515146200065357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141562000728576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200071f90620010ac565b60405180910390fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff169050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148062000829575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6200083357600080fd5b60011515600760149054906101000a900460ff161515146200085457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600683815481106200088357620008826200129a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614620008cf57600080fd5b600030604051620008e09062000d93565b620008ec91906200104e565b604051809103906000f08015801562000909573d6000803e3d6000fd5b5090506006819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060405180606001604052808273ffffffffffffffffffffffffffffffffffffffff16815260200184815260200160011515815250600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff02191690831515021790555090505080915050919050565b60056020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900460ff16905083565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6004805462000ae99062001235565b80601f016020809104026020016040519081016040528092919081815260200182805462000b179062001235565b801562000b685780601f1062000b3c5761010080835404028352916020019162000b68565b820191906000526020600020905b81548152906001019060200180831162000b4a57829003601f168201915b505050505081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148062000c66575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b62000c7057600080fd5b60011515600760149054906101000a900460ff1615151462000c9157600080fd5b6000600760146101000a81548160ff021916908315150217905550600760149054906101000a900460ff16905090565b600060011515600760149054906101000a900460ff1615151462000ce457600080fd5b6006828154811062000cfb5762000cfa6200129a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6006818154811062000d6457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61079280620013a683390190565b60008135905062000db28162001357565b92915050565b60008151905062000dc98162001357565b92915050565b60008135905062000de08162001371565b92915050565b60008135905062000df7816200138b565b92915050565b60006020828403121562000e165762000e15620012c9565b5b600062000e268482850162000da1565b91505092915050565b60006020828403121562000e485762000e47620012c9565b5b600062000e588482850162000db8565b91505092915050565b60006020828403121562000e7a5762000e79620012c9565b5b600062000e8a8482850162000dcf565b91505092915050565b60006020828403121562000eac5762000eab620012c9565b5b600062000ebc8482850162000de6565b91505092915050565b62000ed08162001129565b82525050565b62000ee1816200113d565b82525050565b62000ef28162001187565b82525050565b62000f0381620011af565b82525050565b62000f1481620011d7565b82525050565b600062000f27826200110d565b62000f33818562001118565b935062000f45818560208601620011ff565b62000f5081620012ce565b840191505092915050565b600062000f6a60188362001118565b915062000f7782620012df565b602082019050919050565b600062000f9160248362001118565b915062000f9e8262001308565b604082019050919050565b62000fb4816200117d565b82525050565b600060208201905062000fd1600083018462000ec5565b92915050565b600060608201905062000fee600083018662000ec5565b62000ffd602083018562000fa9565b6200100c604083018462000ed6565b949350505050565b60006020820190506200102b600083018462000ed6565b92915050565b600060208201905062001048600083018462000ee7565b92915050565b600060208201905062001065600083018462000ef8565b92915050565b600060208201905062001082600083018462000f09565b92915050565b60006020820190508181036000830152620010a4818462000f1a565b905092915050565b60006020820190508181036000830152620010c78162000f5b565b9050919050565b60006020820190508181036000830152620010e98162000f82565b9050919050565b600060208201905062001107600083018462000fa9565b92915050565b600081519050919050565b600082825260208201905092915050565b600062001136826200115d565b9050919050565b60008115159050919050565b6000620011568262001129565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600062001194826200119b565b9050919050565b6000620011a8826200115d565b9050919050565b6000620011bc82620011c3565b9050919050565b6000620011d0826200115d565b9050919050565b6000620011e482620011eb565b9050919050565b6000620011f8826200115d565b9050919050565b60005b838110156200121f57808201518184015260208101905062001202565b838111156200122f576000848401525b50505050565b600060028204905060018216806200124e57607f821691505b602082108114156200126557620012646200126b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f742061207375627369646961727920616464726573730000000000000000600082015250565b7f57686974656c697374206e6f742063726561746564206279206b6e6f776e207060008201527f6172747900000000000000000000000000000000000000000000000000000000602082015250565b620013628162001129565b81146200136e57600080fd5b50565b6200137c8162001149565b81146200138857600080fd5b50565b62001396816200117d565b8114620013a257600080fd5b5056fe608060405234801561001057600080fd5b5060405161079238038061079283398181016040528101906100329190610095565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060018190555050610122565b60008151905061008f8161010b565b92915050565b6000602082840312156100ab576100aa610106565b5b60006100b984828501610080565b91505092915050565b60006100cd826100e6565b9050919050565b60006100df826100c2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610114816100d4565b811461011f57600080fd5b50565b610661806101316000396000f3fe6080604052600436106100385760003560e01c80638b7342331461007d578063b119a9d61461009b578063ef5ea07c146100c657610078565b36610078577f7e71433ddf847725166244795048ecf3e3f9f35628254ecbf736056664233493333460405161006e929190610487565b60405180910390a1005b600080fd5b610085610103565b60405161009291906104b0565b60405180910390f35b3480156100a757600080fd5b506100b06101c8565b6040516100bd91906104cb565b60405180910390f35b3480156100d257600080fd5b506100ed60048036038101906100e891906103d5565b6101ec565b6040516100fa91906104b0565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461015e57600080fd5b60006001549050600060018190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505091505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610299575060011515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b6102a257600080fd5b6001548373ffffffffffffffffffffffffffffffffffffffff163110156102fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f5906104e6565b60405180910390fd5b60405180606001604052808581526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815250600360008681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155905050600190509392505050565b6000813590506103ba816105fd565b92915050565b6000813590506103cf81610614565b92915050565b6000806000606084860312156103ee576103ed610583565b5b60006103fc868287016103c0565b935050602061040d868287016103ab565b925050604061041e868287016103c0565b9150509250925092565b61043181610517565b82525050565b61044081610529565b82525050565b61044f8161055f565b82525050565b6000610462604b83610506565b915061046d82610588565b606082019050919050565b61048181610555565b82525050565b600060408201905061049c6000830185610428565b6104a96020830184610478565b9392505050565b60006020820190506104c56000830184610437565b92915050565b60006020820190506104e06000830184610446565b92915050565b600060208201905081810360008301526104ff81610455565b9050919050565b600082825260208201905092915050565b600061052282610535565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061056a82610571565b9050919050565b600061057c82610535565b9050919050565b600080fd5b7f54686520526563656976657220636f6e747261637420646f6573206e6f74206860008201527f6176652073756666696369656e742062616c616e636520666f7220746869732060208201527f7472616e73616374696f6e000000000000000000000000000000000000000000604082015250565b61060681610517565b811461061157600080fd5b50565b61061d81610555565b811461062857600080fd5b5056fea26469706673582212203f2b42576879cdd5557f3dc83a92f0f8b03abc3b0f67e774f308b0a94f7dc22864736f6c63430008060033a264697066735822122064431c5cc66068f043b0084d02dd15e681c554a643b8b861f26955cc491f21c264736f6c63430008060033a2646970667358221220562ddc2733730d48998a7902761a4ef2e20e8865758940583123f740c00318a664736f6c63430008060033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1392:6",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "83:93:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "93:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "108:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "102:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "102:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "164:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_Admin_$134",
                      "nodeType": "YulIdentifier",
                      "src": "124:39:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "124:46:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "124:46:6"
                }
              ]
            },
            "name": "abi_decode_t_contract$_Admin_$134_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "61:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "69:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "77:5:6",
                "type": ""
              }
            ],
            "src": "7:169:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "272:287:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "318:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "320:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "320:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "320:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "293:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "302:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "289:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "289:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "314:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "285:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "285:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "282:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "411:141:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "426:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "440:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "430:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "455:87:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "514:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "525:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "510:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "510:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "534:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Admin_$134_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "465:44:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "465:77:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "455:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Admin_$134_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "242:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "253:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "265:6:6",
                "type": ""
              }
            ],
            "src": "182:377:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "605:35:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "615:19:6",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "631:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "625:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "625:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "615:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "598:6:6",
                "type": ""
              }
            ],
            "src": "565:75:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "691:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "701:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "730:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "712:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "712:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "701:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "673:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "683:7:6",
                "type": ""
              }
            ],
            "src": "646:96:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "806:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "816:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "845:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "827:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "827:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "816:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_Admin_$134",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "788:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "798:7:6",
                "type": ""
              }
            ],
            "src": "748:109:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "908:81:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "918:65:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "933:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "940:42:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "929:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "929:54:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "918:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "890:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "900:7:6",
                "type": ""
              }
            ],
            "src": "863:126:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1084:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1101:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1104:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1094:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1094:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1094:12:6"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "995:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1207:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1224:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1227:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1217:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1217:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1217:12:6"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "1118:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1297:92:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1367:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1376:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1379:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1369:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1369:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1369:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1320:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1358:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_Admin_$134",
                              "nodeType": "YulIdentifier",
                              "src": "1327:30:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1327:37:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1317:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1317:48:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1310:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1310:56:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1307:2:6"
                }
              ]
            },
            "name": "validator_revert_t_contract$_Admin_$134",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1290:5:6",
                "type": ""
              }
            ],
            "src": "1241:148:6"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_contract$_Admin_$134_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_Admin_$134(value)\n    }\n\n    function abi_decode_tuple_t_contract$_Admin_$134_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Admin_$134_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_Admin_$134(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_contract$_Admin_$134(value) {\n        if iszero(eq(value, cleanup_t_contract$_Admin_$134(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
>>>>>>> main
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
<<<<<<< HEAD
        "src": "0:10194:7",
=======
        "src": "0:11043:6",
>>>>>>> main
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "91:328:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "101:75:7",
=======
              "src": "91:328:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "101:75:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "168:6:7"
=======
                            "src": "168:6:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "126:41:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "126:49:7"
=======
                          "src": "126:41:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "126:49:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "110:15:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "110:66:7"
=======
                      "src": "110:15:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "110:66:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "101:5:7"
=======
                      "src": "101:5:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "192:5:7"
=======
                        "src": "192:5:6"
>>>>>>> main
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "199:6:7"
=======
                        "src": "199:6:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "185:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "185:21:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "185:21:7"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "215:27:7",
=======
                      "src": "185:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "185:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "185:21:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "215:27:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "230:5:7"
=======
                        "src": "230:5:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "237:4:7",
=======
                        "src": "237:4:6",
>>>>>>> main
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "226:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "226:16:7"
=======
                      "src": "226:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "226:16:6"
>>>>>>> main
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
<<<<<<< HEAD
                      "src": "219:3:7",
=======
                      "src": "219:3:6",
>>>>>>> main
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "280:83:7",
=======
                    "src": "280:83:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "282:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "282:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "282:79:7"
=======
                            "src": "282:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "282:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "282:79:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "261:3:7"
=======
                            "src": "261:3:6"
>>>>>>> main
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "266:6:7"
=======
                            "src": "266:6:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "257:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "257:16:7"
=======
                          "src": "257:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "257:16:6"
>>>>>>> main
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "275:3:7"
=======
                        "src": "275:3:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "254:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "254:25:7"
                  },
                  "nodeType": "YulIf",
                  "src": "251:2:7"
=======
                      "src": "254:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "254:25:6"
                  },
                  "nodeType": "YulIf",
                  "src": "251:2:6"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "396:3:7"
=======
                        "src": "396:3:6"
>>>>>>> main
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "401:3:7"
=======
                        "src": "401:3:6"
>>>>>>> main
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "406:6:7"
=======
                        "src": "406:6:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "372:23:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "372:41:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "372:41:7"
=======
                      "src": "372:23:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "372:41:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "372:41:6"
>>>>>>> main
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "64:3:7",
=======
                "src": "64:3:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "69:6:7",
=======
                "src": "69:6:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "77:3:7",
=======
                "src": "77:3:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "85:5:7",
                "type": ""
              }
            ],
            "src": "7:412:7"
=======
                "src": "85:5:6",
                "type": ""
              }
            ],
            "src": "7:412:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "501:278:7",
=======
              "src": "501:278:6",
>>>>>>> main
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "550:83:7",
=======
                    "src": "550:83:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "552:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "552:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "552:79:7"
=======
                            "src": "552:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "552:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "552:79:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "529:6:7"
=======
                                "src": "529:6:6"
>>>>>>> main
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
<<<<<<< HEAD
                                "src": "537:4:7",
=======
                                "src": "537:4:6",
>>>>>>> main
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
                              "src": "525:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "525:17:7"
=======
                              "src": "525:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "525:17:6"
>>>>>>> main
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "544:3:7"
=======
                            "src": "544:3:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "521:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "521:27:7"
=======
                          "src": "521:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "521:27:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "514:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "514:35:7"
                  },
                  "nodeType": "YulIf",
                  "src": "511:2:7"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "642:34:7",
=======
                      "src": "514:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "514:35:6"
                  },
                  "nodeType": "YulIf",
                  "src": "511:2:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "642:34:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "669:6:7"
=======
                        "src": "669:6:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "656:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "656:20:7"
=======
                      "src": "656:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "656:20:6"
>>>>>>> main
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
<<<<<<< HEAD
                      "src": "646:6:7",
=======
                      "src": "646:6:6",
>>>>>>> main
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
                  "src": "685:88:7",
=======
                  "src": "685:88:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "746:6:7"
=======
                            "src": "746:6:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "754:4:7",
=======
                            "src": "754:4:6",
>>>>>>> main
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "742:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "742:17:7"
=======
                          "src": "742:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "742:17:6"
>>>>>>> main
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "761:6:7"
=======
                        "src": "761:6:6"
>>>>>>> main
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "769:3:7"
=======
                        "src": "769:3:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "694:47:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "694:79:7"
=======
                      "src": "694:47:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "694:79:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "685:5:7"
=======
                      "src": "685:5:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "479:6:7",
=======
                "src": "479:6:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "487:3:7",
=======
                "src": "487:3:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "495:5:7",
                "type": ""
              }
            ],
            "src": "439:340:7"
=======
                "src": "495:5:6",
                "type": ""
              }
            ],
            "src": "439:340:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "837:87:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "847:29:7",
=======
              "src": "837:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "847:29:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "869:6:7"
=======
                        "src": "869:6:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "856:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "856:20:7"
=======
                      "src": "856:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "856:20:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "847:5:7"
=======
                      "src": "847:5:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "912:5:7"
=======
                        "src": "912:5:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "885:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "885:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "885:33:7"
=======
                      "src": "885:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "885:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "885:33:6"
>>>>>>> main
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "815:6:7",
=======
                "src": "815:6:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "823:3:7",
=======
                "src": "823:3:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "831:5:7",
                "type": ""
              }
            ],
            "src": "785:139:7"
=======
                "src": "831:5:6",
                "type": ""
              }
            ],
            "src": "785:139:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "1006:433:7",
=======
              "src": "1006:433:6",
>>>>>>> main
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "1052:83:7",
=======
                    "src": "1052:83:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1054:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1054:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1054:79:7"
=======
                            "src": "1054:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1054:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1054:79:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1027:7:7"
=======
                            "src": "1027:7:6"
>>>>>>> main
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1036:9:7"
=======
                            "src": "1036:9:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1023:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1023:23:7"
=======
                          "src": "1023:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1023:23:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "1048:2:7",
=======
                        "src": "1048:2:6",
>>>>>>> main
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "1019:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1019:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1016:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1145:287:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1160:45:7",
=======
                      "src": "1019:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1019:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1016:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1145:287:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1160:45:6",
>>>>>>> main
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "1191:9:7"
=======
                                "src": "1191:9:6"
>>>>>>> main
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
<<<<<<< HEAD
                                "src": "1202:1:7",
=======
                                "src": "1202:1:6",
>>>>>>> main
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
                              "src": "1187:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1187:17:7"
=======
                              "src": "1187:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1187:17:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1174:12:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1174:31:7"
=======
                          "src": "1174:12:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1174:31:6"
>>>>>>> main
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
<<<<<<< HEAD
                          "src": "1164:6:7",
=======
                          "src": "1164:6:6",
>>>>>>> main
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
<<<<<<< HEAD
                        "src": "1252:83:7",
=======
                        "src": "1252:83:6",
>>>>>>> main
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "1254:77:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1254:79:7"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1254:79:7"
=======
                                "src": "1254:77:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1254:79:6"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1254:79:6"
>>>>>>> main
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1224:6:7"
=======
                            "src": "1224:6:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "1232:18:7",
=======
                            "src": "1232:18:6",
>>>>>>> main
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1221:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1221:30:7"
                      },
                      "nodeType": "YulIf",
                      "src": "1218:2:7"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1349:73:7",
=======
                          "src": "1221:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1221:30:6"
                      },
                      "nodeType": "YulIf",
                      "src": "1218:2:6"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1349:73:6",
>>>>>>> main
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "1394:9:7"
=======
                                "src": "1394:9:6"
>>>>>>> main
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "1405:6:7"
=======
                                "src": "1405:6:6"
>>>>>>> main
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
                              "src": "1390:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1390:22:7"
=======
                              "src": "1390:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1390:22:6"
>>>>>>> main
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1414:7:7"
=======
                            "src": "1414:7:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1359:30:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1359:63:7"
=======
                          "src": "1359:30:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1359:63:6"
>>>>>>> main
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1349:6:7"
=======
                          "src": "1349:6:6"
>>>>>>> main
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "976:9:7",
=======
                "src": "976:9:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "987:7:7",
=======
                "src": "987:7:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "999:6:7",
                "type": ""
              }
            ],
            "src": "930:509:7"
=======
                "src": "999:6:6",
                "type": ""
              }
            ],
            "src": "930:509:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "1511:263:7",
=======
              "src": "1511:263:6",
>>>>>>> main
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "1557:83:7",
=======
                    "src": "1557:83:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1559:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1559:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1559:79:7"
=======
                            "src": "1559:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1559:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1559:79:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1532:7:7"
=======
                            "src": "1532:7:6"
>>>>>>> main
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1541:9:7"
=======
                            "src": "1541:9:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1528:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1528:23:7"
=======
                          "src": "1528:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1528:23:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "1553:2:7",
=======
                        "src": "1553:2:6",
>>>>>>> main
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "1524:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1524:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1521:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1650:117:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1665:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1679:1:7",
=======
                      "src": "1524:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1524:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1521:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1650:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1665:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1679:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
<<<<<<< HEAD
                          "src": "1669:6:7",
=======
                          "src": "1669:6:6",
>>>>>>> main
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
<<<<<<< HEAD
                      "src": "1694:63:7",
=======
                      "src": "1694:63:6",
>>>>>>> main
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "1729:9:7"
=======
                                "src": "1729:9:6"
>>>>>>> main
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "1740:6:7"
=======
                                "src": "1740:6:6"
>>>>>>> main
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
                              "src": "1725:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1725:22:7"
=======
                              "src": "1725:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1725:22:6"
>>>>>>> main
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1749:7:7"
=======
                            "src": "1749:7:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1704:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1704:53:7"
=======
                          "src": "1704:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1704:53:6"
>>>>>>> main
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1694:6:7"
=======
                          "src": "1694:6:6"
>>>>>>> main
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1481:9:7",
=======
                "src": "1481:9:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1492:7:7",
=======
                "src": "1492:7:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1504:6:7",
                "type": ""
              }
            ],
            "src": "1445:329:7"
=======
                "src": "1504:6:6",
                "type": ""
              }
            ],
            "src": "1445:329:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "1845:53:7",
=======
              "src": "1845:53:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "1862:3:7"
=======
                        "src": "1862:3:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1885:5:7"
=======
                            "src": "1885:5:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1867:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1867:24:7"
=======
                          "src": "1867:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1867:24:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "1855:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1855:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1855:37:7"
=======
                      "src": "1855:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1855:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1855:37:6"
>>>>>>> main
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1833:5:7",
=======
                "src": "1833:5:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1840:3:7",
                "type": ""
              }
            ],
            "src": "1780:118:7"
=======
                "src": "1840:3:6",
                "type": ""
              }
            ],
            "src": "1780:118:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "1963:50:7",
=======
              "src": "1963:50:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "1980:3:7"
=======
                        "src": "1980:3:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "2000:5:7"
=======
                            "src": "2000:5:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1985:14:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1985:21:7"
=======
                          "src": "1985:14:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1985:21:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "1973:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1973:34:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1973:34:7"
=======
                      "src": "1973:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1973:34:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1973:34:6"
>>>>>>> main
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1951:5:7",
=======
                "src": "1951:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1958:3:6",
                "type": ""
              }
            ],
            "src": "1904:109:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2097:79:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2114:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2163:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_Admin_$134_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2119:43:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2119:50:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2107:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2107:63:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2107:63:6"
                }
              ]
            },
            "name": "abi_encode_t_contract$_Admin_$134_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2085:5:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1958:3:7",
                "type": ""
              }
            ],
            "src": "1904:109:7"
=======
                "src": "2092:3:6",
                "type": ""
              }
            ],
            "src": "2019:157:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "2111:272:7",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2121:53:7",
=======
              "src": "2274:272:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2284:53:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2168:5:7"
=======
                        "src": "2331:5:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2135:32:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2135:39:7"
=======
                      "src": "2298:32:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2298:39:6"
>>>>>>> main
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
<<<<<<< HEAD
                      "src": "2125:6:7",
=======
                      "src": "2288:6:6",
>>>>>>> main
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
                  "src": "2183:78:7",
=======
                  "src": "2346:78:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2249:3:7"
=======
                        "src": "2412:3:6"
>>>>>>> main
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2254:6:7"
=======
                        "src": "2417:6:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2190:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2190:71:7"
=======
                      "src": "2353:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2353:71:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2183:3:7"
=======
                      "src": "2346:3:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "2296:5:7"
=======
                            "src": "2459:5:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "2303:4:7",
=======
                            "src": "2466:4:6",
>>>>>>> main
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "2292:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2292:16:7"
=======
                          "src": "2455:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2455:16:6"
>>>>>>> main
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2310:3:7"
=======
                        "src": "2473:3:6"
>>>>>>> main
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2315:6:7"
=======
                        "src": "2478:6:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2270:21:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2270:52:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2270:52:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2331:46:7",
=======
                      "src": "2433:21:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2433:52:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2433:52:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2494:46:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2342:3:7"
=======
                        "src": "2505:3:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "2369:6:7"
=======
                            "src": "2532:6:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "2347:21:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2347:29:7"
=======
                          "src": "2510:21:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2510:29:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2338:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2338:39:7"
=======
                      "src": "2501:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2501:39:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2331:3:7"
=======
                      "src": "2494:3:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2092:5:7",
=======
                "src": "2255:5:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2099:3:7",
=======
                "src": "2262:3:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2107:3:7",
                "type": ""
              }
            ],
            "src": "2019:364:7"
=======
                "src": "2270:3:6",
                "type": ""
              }
            ],
            "src": "2182:364:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "2535:220:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2545:74:7",
=======
              "src": "2698:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2708:74:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2611:3:7"
=======
                        "src": "2774:3:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "2616:2:7",
=======
                        "src": "2779:2:6",
>>>>>>> main
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2552:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2552:67:7"
=======
                      "src": "2715:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2715:67:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2545:3:7"
=======
                      "src": "2708:3:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2717:3:7"
=======
                        "src": "2880:3:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_6f58632cc2fd82b679e2eb5e7970f18e723cc77db983190e019e39c32cbac431",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2628:88:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2628:93:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2628:93:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2730:19:7",
=======
                      "src": "2791:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2791:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2791:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2893:19:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2741:3:7"
=======
                        "src": "2904:3:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "2746:2:7",
=======
                        "src": "2909:2:6",
>>>>>>> main
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2737:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2737:12:7"
=======
                      "src": "2900:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2900:12:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2730:3:7"
=======
                      "src": "2893:3:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_6f58632cc2fd82b679e2eb5e7970f18e723cc77db983190e019e39c32cbac431_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2523:3:7",
=======
                "src": "2686:3:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2531:3:7",
                "type": ""
              }
            ],
            "src": "2389:366:7"
=======
                "src": "2694:3:6",
                "type": ""
              }
            ],
            "src": "2552:366:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "2907:220:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2917:74:7",
=======
              "src": "3070:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3080:74:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2983:3:7"
=======
                        "src": "3146:3:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "2988:2:7",
                        "type": "",
                        "value": "39"
=======
                        "src": "3151:2:6",
                        "type": "",
                        "value": "45"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2924:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2924:67:7"
=======
                      "src": "3087:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3087:67:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2917:3:7"
=======
                      "src": "3080:3:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3089:3:7"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d16f59b504098a079530c74a740fd9528074bf9303890ee5d92c6cda0f420382",
                      "nodeType": "YulIdentifier",
                      "src": "3000:88:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3000:93:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3000:93:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3102:19:7",
=======
                        "src": "3252:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9117372dee0cc0d2de362cb86d76bf0d641de1fdff920d9111bc207da94e8744",
                      "nodeType": "YulIdentifier",
                      "src": "3163:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3163:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3163:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3265:19:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3113:3:7"
=======
                        "src": "3276:3:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "3118:2:7",
=======
                        "src": "3281:2:6",
>>>>>>> main
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3109:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3109:12:7"
=======
                      "src": "3272:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3272:12:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3102:3:7"
=======
                      "src": "3265:3:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
<<<<<<< HEAD
            "name": "abi_encode_t_stringliteral_d16f59b504098a079530c74a740fd9528074bf9303890ee5d92c6cda0f420382_to_t_string_memory_ptr_fromStack",
=======
            "name": "abi_encode_t_stringliteral_9117372dee0cc0d2de362cb86d76bf0d641de1fdff920d9111bc207da94e8744_to_t_string_memory_ptr_fromStack",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2895:3:7",
=======
                "src": "3058:3:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2903:3:7",
                "type": ""
              }
            ],
            "src": "2761:366:7"
=======
                "src": "3066:3:6",
                "type": ""
              }
            ],
            "src": "2924:366:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "3279:220:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3289:74:7",
=======
              "src": "3442:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3452:74:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3355:3:7"
=======
                        "src": "3518:3:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "3360:2:7",
=======
                        "src": "3523:2:6",
>>>>>>> main
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3296:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3296:67:7"
=======
                      "src": "3459:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3459:67:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3289:3:7"
=======
                      "src": "3452:3:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3461:3:7"
=======
                        "src": "3624:3:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_f6bc05d6cfec2f3d11cc140380ae93e4894c4ff78d29d480116a9b54f690ed81",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3372:88:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3372:93:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3372:93:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3474:19:7",
=======
                      "src": "3535:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3535:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3535:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3637:19:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3485:3:7"
=======
                        "src": "3648:3:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "3490:2:7",
=======
                        "src": "3653:2:6",
>>>>>>> main
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3481:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3481:12:7"
=======
                      "src": "3644:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3644:12:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3474:3:7"
=======
                      "src": "3637:3:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f6bc05d6cfec2f3d11cc140380ae93e4894c4ff78d29d480116a9b54f690ed81_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3267:3:7",
=======
                "src": "3430:3:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3275:3:7",
                "type": ""
              }
            ],
            "src": "3133:366:7"
=======
                "src": "3438:3:6",
                "type": ""
              }
            ],
            "src": "3296:366:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "3570:53:7",
=======
              "src": "3733:53:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3587:3:7"
=======
                        "src": "3750:3:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "3610:5:7"
=======
                            "src": "3773:5:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "3592:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3592:24:7"
=======
                          "src": "3755:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3755:24:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3580:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3580:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3580:37:7"
=======
                      "src": "3743:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3743:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3743:37:6"
>>>>>>> main
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3558:5:7",
=======
                "src": "3721:5:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3565:3:7",
                "type": ""
              }
            ],
            "src": "3505:118:7"
=======
                "src": "3728:3:6",
                "type": ""
              }
            ],
            "src": "3668:118:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "3727:124:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3737:26:7",
=======
              "src": "3890:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3900:26:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3749:9:7"
=======
                        "src": "3912:9:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "3760:2:7",
=======
                        "src": "3923:2:6",
>>>>>>> main
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3745:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3745:18:7"
=======
                      "src": "3908:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3908:18:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3737:4:7"
=======
                      "src": "3900:4:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3817:6:7"
=======
                        "src": "3980:6:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "3830:9:7"
=======
                            "src": "3993:9:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "3841:1:7",
=======
                            "src": "4004:1:6",
>>>>>>> main
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "3826:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3826:17:7"
=======
                          "src": "3989:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3989:17:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3773:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3773:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3773:71:7"
=======
                      "src": "3936:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3936:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3936:71:6"
>>>>>>> main
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3699:9:7",
=======
                "src": "3862:9:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3711:6:7",
=======
                "src": "3874:6:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3722:4:7",
                "type": ""
              }
            ],
            "src": "3629:222:7"
=======
                "src": "3885:4:6",
                "type": ""
              }
            ],
            "src": "3792:222:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "4003:277:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4013:26:7",
=======
              "src": "4207:372:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4217:26:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "4025:9:7"
=======
                        "src": "4229:9:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "4036:2:7",
                        "type": "",
                        "value": "64"
=======
                        "src": "4240:2:6",
                        "type": "",
                        "value": "96"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4021:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4021:18:7"
=======
                      "src": "4225:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4225:18:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4013:4:7"
=======
                      "src": "4217:4:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "4093:6:7"
=======
                        "src": "4297:6:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "4106:9:7"
=======
                            "src": "4310:9:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "4117:1:7",
=======
                            "src": "4321:1:6",
>>>>>>> main
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "4102:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4102:17:7"
=======
                          "src": "4306:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4306:17:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4049:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4049:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4049:71:7"
=======
                      "src": "4253:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4253:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4253:71:6"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
=======
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4391:6:6"
                      },
                      {
>>>>>>> main
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "4141:9:7"
=======
                            "src": "4404:9:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "4152:2:7",
=======
                            "src": "4415:2:6",
>>>>>>> main
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "4137:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4137:18:7"
=======
                          "src": "4400:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4400:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Admin_$134_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4334:56:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4334:85:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4334:85:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4440:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4451:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4436:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4436:18:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "4161:4:7"
=======
                            "src": "4460:4:6"
>>>>>>> main
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "4167:9:7"
=======
                            "src": "4466:9:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "4157:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4157:20:7"
=======
                          "src": "4456:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4456:20:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4130:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4130:48:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4130:48:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4187:86:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4259:6:7"
=======
                      "src": "4429:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4429:48:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4429:48:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4486:86:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4558:6:6"
>>>>>>> main
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "4268:4:7"
=======
                        "src": "4567:4:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4195:63:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4195:78:7"
=======
                      "src": "4494:63:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4494:78:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4187:4:7"
=======
                      "src": "4486:4:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
<<<<<<< HEAD
            "name": "abi_encode_tuple_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__fromStack_reversed",
=======
            "name": "abi_encode_tuple_t_address_t_contract$_Admin_$134_t_string_memory_ptr__to_t_address_t_address_t_string_memory_ptr__fromStack_reversed",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3967:9:7",
=======
                "src": "4163:9:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4175:6:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3979:6:7",
=======
                "src": "4183:6:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3987:6:7",
=======
                "src": "4191:6:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3998:4:7",
                "type": ""
              }
            ],
            "src": "3857:423:7"
=======
                "src": "4202:4:6",
                "type": ""
              }
            ],
            "src": "4020:559:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "4434:282:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4444:26:7",
=======
              "src": "4733:282:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4743:26:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "4456:9:7"
=======
                        "src": "4755:9:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "4467:2:7",
=======
                        "src": "4766:2:6",
>>>>>>> main
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4452:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4452:18:7"
=======
                      "src": "4751:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4751:18:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4444:4:7"
=======
                      "src": "4743:4:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "4524:6:7"
=======
                        "src": "4823:6:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "4537:9:7"
=======
                            "src": "4836:9:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "4548:1:7",
=======
                            "src": "4847:1:6",
>>>>>>> main
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "4533:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4533:17:7"
=======
                          "src": "4832:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4832:17:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4480:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4480:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4480:71:7"
=======
                      "src": "4779:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4779:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4779:71:6"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "4605:6:7"
=======
                        "src": "4904:6:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "4618:9:7"
=======
                            "src": "4917:9:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "4629:2:7",
=======
                            "src": "4928:2:6",
>>>>>>> main
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "4614:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4614:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4561:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4561:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4561:72:7"
=======
                          "src": "4913:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4913:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4860:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4860:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4860:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4980:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4993:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5004:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4989:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4989:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4942:37:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4942:66:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4942:66:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4689:9:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4701:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4709:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4717:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4728:4:6",
                "type": ""
              }
            ],
            "src": "4585:430:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5113:118:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5123:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5135:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5146:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5131:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5131:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5123:4:6"
                    }
                  ]
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4681:6:7"
=======
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5197:6:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "4694:9:7"
=======
                            "src": "5210:9:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "4705:2:7",
                            "type": "",
                            "value": "64"
=======
                            "src": "5221:1:6",
                            "type": "",
                            "value": "0"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "4690:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4690:18:7"
=======
                          "src": "5206:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5206:17:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4643:37:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4643:66:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4643:66:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed",
=======
                      "src": "5159:37:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5159:65:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5159:65:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4390:9:7",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4402:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4410:6:7",
=======
                "src": "5085:9:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4418:6:7",
=======
                "src": "5097:6:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4429:4:7",
                "type": ""
              }
            ],
            "src": "4286:430:7"
=======
                "src": "5108:4:6",
                "type": ""
              }
            ],
            "src": "5021:210:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "4814:118:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4824:26:7",
=======
              "src": "5348:137:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5358:26:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "4836:9:7"
=======
                        "src": "5370:9:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "4847:2:7",
=======
                        "src": "5381:2:6",
>>>>>>> main
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4832:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4832:18:7"
=======
                      "src": "5366:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5366:18:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4824:4:7"
=======
                      "src": "5358:4:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "4898:6:7"
=======
                        "src": "5451:6:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "4911:9:7"
=======
                            "src": "5464:9:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "4922:1:7",
=======
                            "src": "5475:1:6",
>>>>>>> main
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "4907:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4907:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4860:37:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4860:65:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4860:65:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
=======
                          "src": "5460:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5460:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Admin_$134_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5394:56:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5394:84:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5394:84:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Admin_$134__to_t_address__fromStack_reversed",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4786:9:7",
=======
                "src": "5320:9:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4798:6:7",
=======
                "src": "5332:6:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4809:4:7",
                "type": ""
              }
            ],
            "src": "4722:210:7"
=======
                "src": "5343:4:6",
                "type": ""
              }
            ],
            "src": "5237:248:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "5109:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5119:26:7",
=======
              "src": "5662:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5672:26:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "5131:9:7"
=======
                        "src": "5684:9:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "5142:2:7",
=======
                        "src": "5695:2:6",
>>>>>>> main
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5127:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5127:18:7"
=======
                      "src": "5680:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5680:18:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5119:4:7"
=======
                      "src": "5672:4:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "5166:9:7"
=======
                            "src": "5719:9:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "5177:1:7",
=======
                            "src": "5730:1:6",
>>>>>>> main
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "5162:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5162:17:7"
=======
                          "src": "5715:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5715:17:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "5185:4:7"
=======
                            "src": "5738:4:6"
>>>>>>> main
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "5191:9:7"
=======
                            "src": "5744:9:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "5181:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5181:20:7"
=======
                          "src": "5734:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5734:20:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5155:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5155:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5155:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5211:139:7",
=======
                      "src": "5708:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5708:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5708:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5764:139:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "5345:4:7"
=======
                        "src": "5898:4:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_6f58632cc2fd82b679e2eb5e7970f18e723cc77db983190e019e39c32cbac431_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5219:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5219:131:7"
=======
                      "src": "5772:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5772:131:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5211:4:7"
=======
                      "src": "5764:4:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6f58632cc2fd82b679e2eb5e7970f18e723cc77db983190e019e39c32cbac431__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "5089:9:7",
=======
                "src": "5642:9:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "5104:4:7",
                "type": ""
              }
            ],
            "src": "4938:419:7"
=======
                "src": "5657:4:6",
                "type": ""
              }
            ],
            "src": "5491:419:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "5534:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5544:26:7",
=======
              "src": "6087:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6097:26:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "5556:9:7"
=======
                        "src": "6109:9:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "5567:2:7",
=======
                        "src": "6120:2:6",
>>>>>>> main
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5552:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5552:18:7"
=======
                      "src": "6105:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6105:18:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5544:4:7"
=======
                      "src": "6097:4:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "5591:9:7"
=======
                            "src": "6144:9:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "5602:1:7",
=======
                            "src": "6155:1:6",
>>>>>>> main
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "5587:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5587:17:7"
=======
                          "src": "6140:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6140:17:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "5610:4:7"
=======
                            "src": "6163:4:6"
>>>>>>> main
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "5616:9:7"
=======
                            "src": "6169:9:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "5606:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5606:20:7"
=======
                          "src": "6159:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6159:20:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5580:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5580:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5580:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5636:139:7",
=======
                      "src": "6133:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6133:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6133:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6189:139:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "5770:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d16f59b504098a079530c74a740fd9528074bf9303890ee5d92c6cda0f420382_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5644:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5644:131:7"
=======
                        "src": "6323:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9117372dee0cc0d2de362cb86d76bf0d641de1fdff920d9111bc207da94e8744_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6197:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6197:131:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5636:4:7"
=======
                      "src": "6189:4:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
<<<<<<< HEAD
            "name": "abi_encode_tuple_t_stringliteral_d16f59b504098a079530c74a740fd9528074bf9303890ee5d92c6cda0f420382__to_t_string_memory_ptr__fromStack_reversed",
=======
            "name": "abi_encode_tuple_t_stringliteral_9117372dee0cc0d2de362cb86d76bf0d641de1fdff920d9111bc207da94e8744__to_t_string_memory_ptr__fromStack_reversed",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "5514:9:7",
=======
                "src": "6067:9:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "5529:4:7",
                "type": ""
              }
            ],
            "src": "5363:419:7"
=======
                "src": "6082:4:6",
                "type": ""
              }
            ],
            "src": "5916:419:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "5959:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5969:26:7",
=======
              "src": "6512:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6522:26:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "5981:9:7"
=======
                        "src": "6534:9:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "5992:2:7",
=======
                        "src": "6545:2:6",
>>>>>>> main
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5977:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5977:18:7"
=======
                      "src": "6530:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6530:18:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5969:4:7"
=======
                      "src": "6522:4:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "6016:9:7"
=======
                            "src": "6569:9:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "6027:1:7",
=======
                            "src": "6580:1:6",
>>>>>>> main
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "6012:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6012:17:7"
=======
                          "src": "6565:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6565:17:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "6035:4:7"
=======
                            "src": "6588:4:6"
>>>>>>> main
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "6041:9:7"
=======
                            "src": "6594:9:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "6031:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6031:20:7"
=======
                          "src": "6584:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6584:20:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6005:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6005:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6005:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6061:139:7",
=======
                      "src": "6558:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6558:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6558:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6614:139:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "6195:4:7"
=======
                        "src": "6748:4:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f6bc05d6cfec2f3d11cc140380ae93e4894c4ff78d29d480116a9b54f690ed81_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6069:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6069:131:7"
=======
                      "src": "6622:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6622:131:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6061:4:7"
=======
                      "src": "6614:4:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f6bc05d6cfec2f3d11cc140380ae93e4894c4ff78d29d480116a9b54f690ed81__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "5939:9:7",
=======
                "src": "6492:9:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "5954:4:7",
                "type": ""
              }
            ],
            "src": "5788:419:7"
=======
                "src": "6507:4:6",
                "type": ""
              }
            ],
            "src": "6341:419:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "6254:88:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6264:30:7",
=======
              "src": "6807:88:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6817:30:6",
>>>>>>> main
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6274:18:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6274:20:7"
=======
                      "src": "6827:18:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6827:20:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6264:6:7"
=======
                      "src": "6817:6:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "6323:6:7"
=======
                        "src": "6876:6:6"
>>>>>>> main
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "6331:4:7"
=======
                        "src": "6884:4:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6303:19:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6303:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6303:33:7"
=======
                      "src": "6856:19:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6856:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6856:33:6"
>>>>>>> main
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6238:4:7",
=======
                "src": "6791:4:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6247:6:7",
                "type": ""
              }
            ],
            "src": "6213:129:7"
=======
                "src": "6800:6:6",
                "type": ""
              }
            ],
            "src": "6766:129:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "6388:35:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6398:19:7",
=======
              "src": "6941:35:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6951:19:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "6414:2:7",
=======
                        "src": "6967:2:6",
>>>>>>> main
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6408:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6408:9:7"
=======
                      "src": "6961:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6961:9:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6398:6:7"
=======
                      "src": "6951:6:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6381:6:7",
                "type": ""
              }
            ],
            "src": "6348:75:7"
=======
                "src": "6934:6:6",
                "type": ""
              }
            ],
            "src": "6901:75:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "6496:241:7",
=======
              "src": "7049:241:6",
>>>>>>> main
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "6601:22:7",
=======
                    "src": "7154:22:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "6603:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6603:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6603:18:7"
=======
                            "src": "7156:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7156:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7156:18:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "6573:6:7"
=======
                        "src": "7126:6:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "6581:18:7",
=======
                        "src": "7134:18:6",
>>>>>>> main
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6570:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6570:30:7"
                  },
                  "nodeType": "YulIf",
                  "src": "6567:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6633:37:7",
=======
                      "src": "7123:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7123:30:6"
                  },
                  "nodeType": "YulIf",
                  "src": "7120:2:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7186:37:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "6663:6:7"
=======
                        "src": "7216:6:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "round_up_to_mul_of_32",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6641:21:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6641:29:7"
=======
                      "src": "7194:21:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7194:29:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6633:4:7"
=======
                      "src": "7186:4:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
                  "src": "6707:23:7",
=======
                  "src": "7260:23:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "6719:4:7"
=======
                        "src": "7272:4:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "6725:4:7",
=======
                        "src": "7278:4:6",
>>>>>>> main
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6715:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6715:15:7"
=======
                      "src": "7268:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7268:15:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6707:4:7"
=======
                      "src": "7260:4:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6480:6:7",
=======
                "src": "7033:6:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6491:4:7",
                "type": ""
              }
            ],
            "src": "6429:308:7"
=======
                "src": "7044:4:6",
                "type": ""
              }
            ],
            "src": "6982:308:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "6802:40:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6813:22:7",
=======
              "src": "7355:40:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7366:22:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "6829:5:7"
=======
                        "src": "7382:5:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6823:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6823:12:7"
=======
                      "src": "7376:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7376:12:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6813:6:7"
=======
                      "src": "7366:6:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6785:5:7",
=======
                "src": "7338:5:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6795:6:7",
                "type": ""
              }
            ],
            "src": "6743:99:7"
=======
                "src": "7348:6:6",
                "type": ""
              }
            ],
            "src": "7296:99:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "6944:73:7",
=======
              "src": "7497:73:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "6961:3:7"
=======
                        "src": "7514:3:6"
>>>>>>> main
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "6966:6:7"
=======
                        "src": "7519:6:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6954:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6954:19:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6954:19:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6982:29:7",
=======
                      "src": "7507:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7507:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7507:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7535:29:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7001:3:7"
=======
                        "src": "7554:3:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "7006:4:7",
=======
                        "src": "7559:4:6",
>>>>>>> main
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6997:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6997:14:7"
=======
                      "src": "7550:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7550:14:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6982:11:7"
=======
                      "src": "7535:11:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6916:3:7",
=======
                "src": "7469:3:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6921:6:7",
=======
                "src": "7474:6:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6932:11:7",
                "type": ""
              }
            ],
            "src": "6848:169:7"
=======
                "src": "7485:11:6",
                "type": ""
              }
            ],
            "src": "7401:169:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "7067:261:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7077:25:7",
=======
              "src": "7620:261:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7630:25:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7100:1:7"
=======
                        "src": "7653:1:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7082:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7082:20:7"
=======
                      "src": "7635:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7635:20:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7077:1:7"
=======
                      "src": "7630:1:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
                  "src": "7111:25:7",
=======
                  "src": "7664:25:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7134:1:7"
=======
                        "src": "7687:1:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7116:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7116:20:7"
=======
                      "src": "7669:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7669:20:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7111:1:7"
=======
                      "src": "7664:1:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "7274:22:7",
=======
                    "src": "7827:22:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "7276:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7276:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7276:18:7"
=======
                            "src": "7829:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7829:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7829:18:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7195:1:7"
=======
                        "src": "7748:1:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "7202:66:7",
=======
                            "src": "7755:66:6",
>>>>>>> main
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "7270:1:7"
=======
                            "src": "7823:1:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "7198:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7198:74:7"
=======
                          "src": "7751:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7751:74:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7192:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7192:81:7"
                  },
                  "nodeType": "YulIf",
                  "src": "7189:2:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7306:16:7",
=======
                      "src": "7745:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7745:81:6"
                  },
                  "nodeType": "YulIf",
                  "src": "7742:2:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7859:16:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7317:1:7"
=======
                        "src": "7870:1:6"
>>>>>>> main
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7320:1:7"
=======
                        "src": "7873:1:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7313:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7313:9:7"
=======
                      "src": "7866:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7866:9:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7306:3:7"
=======
                      "src": "7859:3:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7054:1:7",
=======
                "src": "7607:1:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7057:1:7",
=======
                "src": "7610:1:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7063:3:7",
                "type": ""
              }
            ],
            "src": "7023:305:7"
=======
                "src": "7616:3:6",
                "type": ""
              }
            ],
            "src": "7576:305:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "7379:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7389:35:7",
=======
              "src": "7932:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7942:35:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7418:5:7"
=======
                        "src": "7971:5:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7400:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7400:24:7"
=======
                      "src": "7953:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7953:24:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7389:7:7"
=======
                      "src": "7942:7:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7361:5:7",
=======
                "src": "7914:5:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7371:7:7",
                "type": ""
              }
            ],
            "src": "7334:96:7"
=======
                "src": "7924:7:6",
                "type": ""
              }
            ],
            "src": "7887:96:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "7478:48:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7488:32:7",
=======
              "src": "8031:48:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8041:32:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "7513:5:7"
=======
                            "src": "8066:5:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "7506:6:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7506:13:7"
=======
                          "src": "8059:6:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8059:13:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7499:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7499:21:7"
=======
                      "src": "8052:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8052:21:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7488:7:7"
=======
                      "src": "8041:7:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7460:5:7",
=======
                "src": "8013:5:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7470:7:7",
                "type": ""
              }
            ],
            "src": "7436:90:7"
=======
                "src": "8023:7:6",
                "type": ""
              }
            ],
            "src": "7989:90:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "7577:81:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7587:65:7",
=======
              "src": "8130:81:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8140:65:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7602:5:7"
=======
                        "src": "8155:5:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "7609:42:7",
=======
                        "src": "8162:42:6",
>>>>>>> main
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7598:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7598:54:7"
=======
                      "src": "8151:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8151:54:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7587:7:7"
=======
                      "src": "8140:7:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7559:5:7",
=======
                "src": "8112:5:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7569:7:7",
                "type": ""
              }
            ],
            "src": "7532:126:7"
=======
                "src": "8122:7:6",
                "type": ""
              }
            ],
            "src": "8085:126:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "7709:32:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7719:16:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7730:5:7"
=======
              "src": "8262:32:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8272:16:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8283:5:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7719:7:7"
=======
                      "src": "8272:7:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7691:5:7",
=======
                "src": "8244:5:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7701:7:7",
                "type": ""
              }
            ],
            "src": "7664:77:7"
=======
                "src": "8254:7:6",
                "type": ""
              }
            ],
            "src": "8217:77:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8373:79:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8383:63:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8440:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_Admin_$134_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8396:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8396:50:6"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "8383:9:6"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Admin_$134_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8353:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "8363:9:6",
                "type": ""
              }
            ],
            "src": "8300:152:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8531:53:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8541:37:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8572:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8554:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8554:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "8541:9:6"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Admin_$134_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8511:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "8521:9:6",
                "type": ""
              }
            ],
            "src": "8458:126:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "7798:103:7",
=======
              "src": "8641:103:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7821:3:7"
=======
                        "src": "8664:3:6"
>>>>>>> main
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7826:3:7"
=======
                        "src": "8669:3:6"
>>>>>>> main
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7831:6:7"
=======
                        "src": "8674:6:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7808:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7808:30:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7808:30:7"
=======
                      "src": "8651:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8651:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8651:30:6"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "7879:3:7"
=======
                            "src": "8722:3:6"
>>>>>>> main
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "7884:6:7"
=======
                            "src": "8727:6:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "7875:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7875:16:7"
=======
                          "src": "8718:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8718:16:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "7893:1:7",
=======
                        "src": "8736:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7868:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7868:27:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7868:27:7"
=======
                      "src": "8711:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8711:27:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8711:27:6"
>>>>>>> main
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7780:3:7",
=======
                "src": "8623:3:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7785:3:7",
=======
                "src": "8628:3:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7790:6:7",
                "type": ""
              }
            ],
            "src": "7747:154:7"
=======
                "src": "8633:6:6",
                "type": ""
              }
            ],
            "src": "8590:154:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "7956:258:7",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7966:10:7",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7975:1:7",
=======
              "src": "8799:258:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8809:10:6",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8818:1:6",
>>>>>>> main
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
<<<<<<< HEAD
                      "src": "7970:1:7",
=======
                      "src": "8813:1:6",
>>>>>>> main
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "8035:63:7",
=======
                    "src": "8878:63:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                  "src": "8060:3:7"
=======
                                  "src": "8903:3:6"
>>>>>>> main
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                  "src": "8065:1:7"
=======
                                  "src": "8908:1:6"
>>>>>>> main
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "8056:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8056:11:7"
=======
                                "src": "8899:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8899:11:6"
>>>>>>> main
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                      "src": "8079:3:7"
=======
                                      "src": "8922:3:6"
>>>>>>> main
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                      "src": "8084:1:7"
=======
                                      "src": "8927:1:6"
>>>>>>> main
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                    "src": "8075:3:7"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8075:11:7"
=======
                                    "src": "8918:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8918:11:6"
>>>>>>> main
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "8069:5:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8069:18:7"
=======
                                "src": "8912:5:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8912:18:6"
>>>>>>> main
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "8049:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8049:39:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8049:39:7"
=======
                            "src": "8892:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8892:39:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8892:39:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7996:1:7"
=======
                        "src": "8839:1:6"
>>>>>>> main
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7999:6:7"
=======
                        "src": "8842:6:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7993:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7993:13:7"
=======
                      "src": "8836:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8836:13:6"
>>>>>>> main
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "8007:19:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8009:15:7",
=======
                    "src": "8850:19:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8852:15:6",
>>>>>>> main
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
                              "src": "8018:1:7"
=======
                              "src": "8861:1:6"
>>>>>>> main
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
                              "src": "8021:2:7",
=======
                              "src": "8864:2:6",
>>>>>>> main
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "8014:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8014:10:7"
=======
                            "src": "8857:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8857:10:6"
>>>>>>> main
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "8009:1:7"
=======
                            "src": "8852:1:6"
>>>>>>> main
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "7989:3:7",
                    "statements": []
                  },
                  "src": "7985:113:7"
=======
                    "src": "8832:3:6",
                    "statements": []
                  },
                  "src": "8828:113:6"
>>>>>>> main
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "8132:76:7",
=======
                    "src": "8975:76:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                  "src": "8182:3:7"
=======
                                  "src": "9025:3:6"
>>>>>>> main
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                  "src": "8187:6:7"
=======
                                  "src": "9030:6:6"
>>>>>>> main
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "8178:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8178:16:7"
=======
                                "src": "9021:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9021:16:6"
>>>>>>> main
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
                              "src": "8196:1:7",
=======
                              "src": "9039:1:6",
>>>>>>> main
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "8171:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8171:27:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8171:27:7"
=======
                            "src": "9014:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9014:27:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9014:27:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "8113:1:7"
=======
                        "src": "8956:1:6"
>>>>>>> main
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "8116:6:7"
=======
                        "src": "8959:6:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8110:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8110:13:7"
                  },
                  "nodeType": "YulIf",
                  "src": "8107:2:7"
=======
                      "src": "8953:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8953:13:6"
                  },
                  "nodeType": "YulIf",
                  "src": "8950:2:6"
>>>>>>> main
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7938:3:7",
=======
                "src": "8781:3:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7943:3:7",
=======
                "src": "8786:3:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7948:6:7",
                "type": ""
              }
            ],
            "src": "7907:307:7"
=======
                "src": "8791:6:6",
                "type": ""
              }
            ],
            "src": "8750:307:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "8263:238:7",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8273:58:7",
=======
              "src": "9106:238:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9116:58:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "8295:6:7"
=======
                        "src": "9138:6:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "8325:4:7"
=======
                            "src": "9168:4:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "8303:21:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8303:27:7"
=======
                          "src": "9146:21:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9146:27:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8291:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8291:40:7"
=======
                      "src": "9134:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9134:40:6"
>>>>>>> main
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
<<<<<<< HEAD
                      "src": "8277:10:7",
=======
                      "src": "9120:10:6",
>>>>>>> main
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "8442:22:7",
=======
                    "src": "9285:22:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "8444:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8444:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8444:18:7"
=======
                            "src": "9287:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9287:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9287:18:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "8385:10:7"
=======
                            "src": "9228:10:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "8397:18:7",
=======
                            "src": "9240:18:6",
>>>>>>> main
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "8382:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8382:34:7"
=======
                          "src": "9225:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9225:34:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "8421:10:7"
=======
                            "src": "9264:10:6"
>>>>>>> main
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "8433:6:7"
=======
                            "src": "9276:6:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "8418:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8418:22:7"
=======
                          "src": "9261:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9261:22:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8379:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8379:62:7"
                  },
                  "nodeType": "YulIf",
                  "src": "8376:2:7"
=======
                      "src": "9222:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9222:62:6"
                  },
                  "nodeType": "YulIf",
                  "src": "9219:2:6"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8480:2:7",
=======
                        "src": "9323:2:6",
>>>>>>> main
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "8484:10:7"
=======
                        "src": "9327:10:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8473:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8473:22:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8473:22:7"
=======
                      "src": "9316:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9316:22:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9316:22:6"
>>>>>>> main
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "8249:6:7",
=======
                "src": "9092:6:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "8257:4:7",
                "type": ""
              }
            ],
            "src": "8220:281:7"
=======
                "src": "9100:4:6",
                "type": ""
              }
            ],
            "src": "9063:281:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "8535:152:7",
=======
              "src": "9378:152:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8552:1:7",
=======
                        "src": "9395:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8555:77:7",
=======
                        "src": "9398:77:6",
>>>>>>> main
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8545:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8545:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8545:88:7"
=======
                      "src": "9388:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9388:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9388:88:6"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8649:1:7",
=======
                        "src": "9492:1:6",
>>>>>>> main
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8652:4:7",
=======
                        "src": "9495:4:6",
>>>>>>> main
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8642:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8642:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8642:15:7"
=======
                      "src": "9485:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9485:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9485:15:6"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8673:1:7",
=======
                        "src": "9516:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8676:4:7",
=======
                        "src": "9519:4:6",
>>>>>>> main
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8666:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8666:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8666:15:7"
=======
                      "src": "9509:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9509:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9509:15:6"
>>>>>>> main
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
<<<<<<< HEAD
            "src": "8507:180:7"
=======
            "src": "9350:180:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "8721:152:7",
=======
              "src": "9564:152:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8738:1:7",
=======
                        "src": "9581:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8741:77:7",
=======
                        "src": "9584:77:6",
>>>>>>> main
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8731:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8731:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8731:88:7"
=======
                      "src": "9574:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9574:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9574:88:6"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8835:1:7",
=======
                        "src": "9678:1:6",
>>>>>>> main
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8838:4:7",
=======
                        "src": "9681:4:6",
>>>>>>> main
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8828:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8828:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8828:15:7"
=======
                      "src": "9671:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9671:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9671:15:6"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8859:1:7",
=======
                        "src": "9702:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8862:4:7",
=======
                        "src": "9705:4:6",
>>>>>>> main
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8852:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8852:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8852:15:7"
=======
                      "src": "9695:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9695:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9695:15:6"
>>>>>>> main
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
<<<<<<< HEAD
            "src": "8693:180:7"
=======
            "src": "9536:180:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "8968:28:7",
=======
              "src": "9811:28:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8985:1:7",
=======
                        "src": "9828:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8988:1:7",
=======
                        "src": "9831:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8978:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8978:12:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8978:12:7"
=======
                      "src": "9821:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9821:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9821:12:6"
>>>>>>> main
                }
              ]
            },
            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
            "nodeType": "YulFunctionDefinition",
<<<<<<< HEAD
            "src": "8879:117:7"
=======
            "src": "9722:117:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "9091:28:7",
=======
              "src": "9934:28:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "9108:1:7",
=======
                        "src": "9951:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "9111:1:7",
=======
                        "src": "9954:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "9101:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9101:12:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9101:12:7"
=======
                      "src": "9944:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9944:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9944:12:6"
>>>>>>> main
                }
              ]
            },
            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
            "nodeType": "YulFunctionDefinition",
<<<<<<< HEAD
            "src": "9002:117:7"
=======
            "src": "9845:117:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "9214:28:7",
=======
              "src": "10057:28:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "9231:1:7",
=======
                        "src": "10074:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "9234:1:7",
=======
                        "src": "10077:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "9224:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9224:12:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9224:12:7"
=======
                      "src": "10067:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10067:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10067:12:6"
>>>>>>> main
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
<<<<<<< HEAD
            "src": "9125:117:7"
=======
            "src": "9968:117:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "9337:28:7",
=======
              "src": "10180:28:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "9354:1:7",
=======
                        "src": "10197:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "9357:1:7",
=======
                        "src": "10200:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "9347:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9347:12:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9347:12:7"
=======
                      "src": "10190:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10190:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10190:12:6"
>>>>>>> main
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
<<<<<<< HEAD
            "src": "9248:117:7"
=======
            "src": "10091:117:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "9419:54:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9429:38:7",
=======
              "src": "10262:54:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10272:38:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "9447:5:7"
=======
                            "src": "10290:5:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "9454:2:7",
=======
                            "src": "10297:2:6",
>>>>>>> main
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "9443:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9443:14:7"
=======
                          "src": "10286:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10286:14:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "9463:2:7",
=======
                            "src": "10306:2:6",
>>>>>>> main
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "9459:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9459:7:7"
=======
                          "src": "10302:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10302:7:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "9439:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9439:28:7"
=======
                      "src": "10282:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10282:28:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "9429:6:7"
=======
                      "src": "10272:6:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "9402:5:7",
=======
                "src": "10245:5:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "9412:6:7",
                "type": ""
              }
            ],
            "src": "9371:102:7"
=======
                "src": "10255:6:6",
                "type": ""
              }
            ],
            "src": "10214:102:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "9585:69:7",
=======
              "src": "10428:69:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "9607:6:7"
=======
                            "src": "10450:6:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "9615:1:7",
=======
                            "src": "10458:1:6",
>>>>>>> main
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "9603:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9603:14:7"
=======
                          "src": "10446:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10446:14:6"
>>>>>>> main
                      },
                      {
                        "hexValue": "436f6e7472616374206e6f206c6f6e67657220616374697665",
                        "kind": "string",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "9619:27:7",
=======
                        "src": "10462:27:6",
>>>>>>> main
                        "type": "",
                        "value": "Contract no longer active"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "9596:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9596:51:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9596:51:7"
=======
                      "src": "10439:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10439:51:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10439:51:6"
>>>>>>> main
                }
              ]
            },
            "name": "store_literal_in_memory_6f58632cc2fd82b679e2eb5e7970f18e723cc77db983190e019e39c32cbac431",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "9577:6:7",
                "type": ""
              }
            ],
            "src": "9479:175:7"
=======
                "src": "10420:6:6",
                "type": ""
              }
            ],
            "src": "10322:175:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "9766:120:7",
=======
              "src": "10609:126:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "9788:6:7"
=======
                            "src": "10631:6:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "9796:1:7",
=======
                            "src": "10639:1:6",
>>>>>>> main
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "9784:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9784:14:7"
                      },
                      {
                        "hexValue": "4f6e6c7920746865206f776e65722063616e2061636365737320746869732066",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9800:34:7",
                        "type": "",
                        "value": "Only the owner can access this f"
=======
                          "src": "10627:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10627:14:6"
                      },
                      {
                        "hexValue": "4f6e6c7920746865206f776e65722f61646d696e2063616e2061636365737320",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10643:34:6",
                        "type": "",
                        "value": "Only the owner/admin can access "
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "9777:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9777:58:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9777:58:7"
=======
                      "src": "10620:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10620:58:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10620:58:6"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "9856:6:7"
=======
                            "src": "10699:6:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "9864:2:7",
=======
                            "src": "10707:2:6",
>>>>>>> main
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "9852:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9852:15:7"
                      },
                      {
                        "hexValue": "756e6374696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9869:9:7",
                        "type": "",
                        "value": "unction"
=======
                          "src": "10695:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10695:15:6"
                      },
                      {
                        "hexValue": "746869732066756e6374696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10712:15:6",
                        "type": "",
                        "value": "this function"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "9845:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9845:34:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9845:34:7"
                }
              ]
            },
            "name": "store_literal_in_memory_d16f59b504098a079530c74a740fd9528074bf9303890ee5d92c6cda0f420382",
=======
                      "src": "10688:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10688:40:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10688:40:6"
                }
              ]
            },
            "name": "store_literal_in_memory_9117372dee0cc0d2de362cb86d76bf0d641de1fdff920d9111bc207da94e8744",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "9758:6:7",
                "type": ""
              }
            ],
            "src": "9660:226:7"
=======
                "src": "10601:6:6",
                "type": ""
              }
            ],
            "src": "10503:232:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "9998:65:7",
=======
              "src": "10847:65:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "10020:6:7"
=======
                            "src": "10869:6:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "10028:1:7",
=======
                            "src": "10877:1:6",
>>>>>>> main
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "10016:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10016:14:7"
=======
                          "src": "10865:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10865:14:6"
>>>>>>> main
                      },
                      {
                        "hexValue": "4e6f7420612076616c696420636f72706f72617465",
                        "kind": "string",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "10032:23:7",
=======
                        "src": "10881:23:6",
>>>>>>> main
                        "type": "",
                        "value": "Not a valid corporate"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "10009:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10009:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10009:47:7"
=======
                      "src": "10858:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10858:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10858:47:6"
>>>>>>> main
                }
              ]
            },
            "name": "store_literal_in_memory_f6bc05d6cfec2f3d11cc140380ae93e4894c4ff78d29d480116a9b54f690ed81",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "9990:6:7",
                "type": ""
              }
            ],
            "src": "9892:171:7"
=======
                "src": "10839:6:6",
                "type": ""
              }
            ],
            "src": "10741:171:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "10112:79:7",
=======
              "src": "10961:79:6",
>>>>>>> main
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "10169:16:7",
=======
                    "src": "11018:16:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
                              "src": "10178:1:7",
=======
                              "src": "11027:1:6",
>>>>>>> main
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
                              "src": "10181:1:7",
=======
                              "src": "11030:1:6",
>>>>>>> main
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "10171:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10171:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10171:12:7"
=======
                            "src": "11020:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11020:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11020:12:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "10135:5:7"
=======
                            "src": "10984:5:6"
>>>>>>> main
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "10160:5:7"
=======
                                "src": "11009:5:6"
>>>>>>> main
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
                              "src": "10142:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10142:24:7"
=======
                              "src": "10991:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10991:24:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "10132:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10132:35:7"
=======
                          "src": "10981:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10981:35:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "10125:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10125:43:7"
                  },
                  "nodeType": "YulIf",
                  "src": "10122:2:7"
=======
                      "src": "10974:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10974:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "10971:2:6"
>>>>>>> main
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "10105:5:7",
                "type": ""
              }
            ],
            "src": "10069:122:7"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_6f58632cc2fd82b679e2eb5e7970f18e723cc77db983190e019e39c32cbac431_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_6f58632cc2fd82b679e2eb5e7970f18e723cc77db983190e019e39c32cbac431(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d16f59b504098a079530c74a740fd9528074bf9303890ee5d92c6cda0f420382_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_d16f59b504098a079530c74a740fd9528074bf9303890ee5d92c6cda0f420382(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f6bc05d6cfec2f3d11cc140380ae93e4894c4ff78d29d480116a9b54f690ed81_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_f6bc05d6cfec2f3d11cc140380ae93e4894c4ff78d29d480116a9b54f690ed81(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6f58632cc2fd82b679e2eb5e7970f18e723cc77db983190e019e39c32cbac431__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6f58632cc2fd82b679e2eb5e7970f18e723cc77db983190e019e39c32cbac431_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d16f59b504098a079530c74a740fd9528074bf9303890ee5d92c6cda0f420382__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d16f59b504098a079530c74a740fd9528074bf9303890ee5d92c6cda0f420382_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f6bc05d6cfec2f3d11cc140380ae93e4894c4ff78d29d480116a9b54f690ed81__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f6bc05d6cfec2f3d11cc140380ae93e4894c4ff78d29d480116a9b54f690ed81_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_6f58632cc2fd82b679e2eb5e7970f18e723cc77db983190e019e39c32cbac431(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract no longer active\")\n\n    }\n\n    function store_literal_in_memory_d16f59b504098a079530c74a740fd9528074bf9303890ee5d92c6cda0f420382(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the owner can access this f\")\n\n        mstore(add(memPtr, 32), \"unction\")\n\n    }\n\n    function store_literal_in_memory_f6bc05d6cfec2f3d11cc140380ae93e4894c4ff78d29d480116a9b54f690ed81(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not a valid corporate\")\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 7,
=======
                "src": "10954:5:6",
                "type": ""
              }
            ],
            "src": "10918:122:6"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_contract$_Admin_$134_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Admin_$134_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_6f58632cc2fd82b679e2eb5e7970f18e723cc77db983190e019e39c32cbac431_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_6f58632cc2fd82b679e2eb5e7970f18e723cc77db983190e019e39c32cbac431(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9117372dee0cc0d2de362cb86d76bf0d641de1fdff920d9111bc207da94e8744_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_9117372dee0cc0d2de362cb86d76bf0d641de1fdff920d9111bc207da94e8744(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f6bc05d6cfec2f3d11cc140380ae93e4894c4ff78d29d480116a9b54f690ed81_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_f6bc05d6cfec2f3d11cc140380ae93e4894c4ff78d29d480116a9b54f690ed81(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_contract$_Admin_$134_t_string_memory_ptr__to_t_address_t_address_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_Admin_$134_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_Admin_$134__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Admin_$134_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6f58632cc2fd82b679e2eb5e7970f18e723cc77db983190e019e39c32cbac431__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6f58632cc2fd82b679e2eb5e7970f18e723cc77db983190e019e39c32cbac431_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9117372dee0cc0d2de362cb86d76bf0d641de1fdff920d9111bc207da94e8744__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9117372dee0cc0d2de362cb86d76bf0d641de1fdff920d9111bc207da94e8744_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f6bc05d6cfec2f3d11cc140380ae93e4894c4ff78d29d480116a9b54f690ed81__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f6bc05d6cfec2f3d11cc140380ae93e4894c4ff78d29d480116a9b54f690ed81_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_Admin_$134_to_t_address(value) -> converted {\n        converted := convert_t_contract$_Admin_$134_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Admin_$134_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_6f58632cc2fd82b679e2eb5e7970f18e723cc77db983190e019e39c32cbac431(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract no longer active\")\n\n    }\n\n    function store_literal_in_memory_9117372dee0cc0d2de362cb86d76bf0d641de1fdff920d9111bc207da94e8744(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the owner/admin can access \")\n\n        mstore(add(memPtr, 32), \"this function\")\n\n    }\n\n    function store_literal_in_memory_f6bc05d6cfec2f3d11cc140380ae93e4894c4ff78d29d480116a9b54f690ed81(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not a valid corporate\")\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 6,
>>>>>>> main
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
<<<<<<< HEAD
  "sourceMap": "61:1526:1:-:0;;;275:4;261:18;;;;;;;;;;;;;;;;;;;;382:49;;;;;;;;;;414:10;406:5;;:18;;;;;;;;;;;;;;;;;;61:1526;;;;;;",
  "deployedSourceMap": "61:1526:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;722:139;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1000:129;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;867:127;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;138:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;94:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;437:279;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1135:210;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;722:139;801:7;1409:5;;;;;;;;;;;1395:19;;:10;:19;;;1387:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;1533:4:::1;1523:14;;:6;;;;;;;;;;;:14;;;1515:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;828:10:::2;:14;839:2;828:14;;;;;;;;;;;:26;;;;;;;;;;;;821:33;;722:139:::0;;;:::o;1000:129::-;1079:4;1409:5;;;;;;;;;;;1395:19;;:10;:19;;;1387:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;1533:4:::1;1523:14;;:6;;;;;;;;;;;:14;;;1515:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1117:5:::2;1094:10;:14;1105:2;1094:14;;;;;;;;;;;:20;;;:28;;;;;;;;;;;;;;;;;;1000:129:::0;;;:::o;867:127::-;932:4;1409:5;;;;;;;;;;;1395:19;;:10;:19;;;1387:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;957:6:::1;;;;;;;;;;;956:7;947:6;;:16;;;;;;;;;;;;;;;;;;980:6;;;;;;;;;;;973:14;;867:127:::0;:::o;138:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;94:20::-;;;;;;;;;;;;:::o;437:279::-;525:4;1409:5;;;;;;;;;;;1395:19;;:10;:19;;;1387:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;1533:4:::1;1523:14;;:6;;;;;;;;;;;:14;;;1515:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;540:17:::2;574:5:::0;::::2;;;;;;;;;;580:8;560:29;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;540:49;;622:43;;;;;;;;640:7;622:43;;;;;;650:8;;622:43;;;;660:4;622:43;;;;::::0;599:10:::2;:20;610:8;;599:20;;;;;;;;;;;:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;687:1;675:8;;:13;;;;;;;:::i;:::-;;;;;;;;705:4;698:11;;;437:279:::0;;;:::o;1135:210::-;1211:4;1533;1523:14;;:6;;;;;;;;;;;:14;;;1515:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1272:1:::1;1234:40;;:10;:14;1245:2;1234:14;;;;;;;;;;;:26;;;;;;;;;;;;:40;;;;1226:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;1317:10;:14;1328:2;1317:14;;;;;;;;;;;:20;;;;;;;;;;;;1310:27;;1135:210:::0;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:412:7:-;85:5;110:66;126:49;168:6;126:49;:::i;:::-;110:66;:::i;:::-;101:75;;199:6;192:5;185:21;237:4;230:5;226:16;275:3;266:6;261:3;257:16;254:25;251:2;;;282:79;;:::i;:::-;251:2;372:41;406:6;401:3;396;372:41;:::i;:::-;91:328;;;;;;:::o;439:340::-;495:5;544:3;537:4;529:6;525:17;521:27;511:2;;552:79;;:::i;:::-;511:2;669:6;656:20;694:79;769:3;761:6;754:4;746:6;742:17;694:79;:::i;:::-;685:88;;501:278;;;;;:::o;785:139::-;831:5;869:6;856:20;847:29;;885:33;912:5;885:33;:::i;:::-;837:87;;;;:::o;930:509::-;999:6;1048:2;1036:9;1027:7;1023:23;1019:32;1016:2;;;1054:79;;:::i;:::-;1016:2;1202:1;1191:9;1187:17;1174:31;1232:18;1224:6;1221:30;1218:2;;;1254:79;;:::i;:::-;1218:2;1359:63;1414:7;1405:6;1394:9;1390:22;1359:63;:::i;:::-;1349:73;;1145:287;1006:433;;;;:::o;1445:329::-;1504:6;1553:2;1541:9;1532:7;1528:23;1524:32;1521:2;;;1559:79;;:::i;:::-;1521:2;1679:1;1704:53;1749:7;1740:6;1729:9;1725:22;1704:53;:::i;:::-;1694:63;;1650:117;1511:263;;;;:::o;1780:118::-;1867:24;1885:5;1867:24;:::i;:::-;1862:3;1855:37;1845:53;;:::o;1904:109::-;1985:21;2000:5;1985:21;:::i;:::-;1980:3;1973:34;1963:50;;:::o;2019:364::-;2107:3;2135:39;2168:5;2135:39;:::i;:::-;2190:71;2254:6;2249:3;2190:71;:::i;:::-;2183:78;;2270:52;2315:6;2310:3;2303:4;2296:5;2292:16;2270:52;:::i;:::-;2347:29;2369:6;2347:29;:::i;:::-;2342:3;2338:39;2331:46;;2111:272;;;;;:::o;2389:366::-;2531:3;2552:67;2616:2;2611:3;2552:67;:::i;:::-;2545:74;;2628:93;2717:3;2628:93;:::i;:::-;2746:2;2741:3;2737:12;2730:19;;2535:220;;;:::o;2761:366::-;2903:3;2924:67;2988:2;2983:3;2924:67;:::i;:::-;2917:74;;3000:93;3089:3;3000:93;:::i;:::-;3118:2;3113:3;3109:12;3102:19;;2907:220;;;:::o;3133:366::-;3275:3;3296:67;3360:2;3355:3;3296:67;:::i;:::-;3289:74;;3372:93;3461:3;3372:93;:::i;:::-;3490:2;3485:3;3481:12;3474:19;;3279:220;;;:::o;3505:118::-;3592:24;3610:5;3592:24;:::i;:::-;3587:3;3580:37;3570:53;;:::o;3629:222::-;3722:4;3760:2;3749:9;3745:18;3737:26;;3773:71;3841:1;3830:9;3826:17;3817:6;3773:71;:::i;:::-;3727:124;;;;:::o;3857:423::-;3998:4;4036:2;4025:9;4021:18;4013:26;;4049:71;4117:1;4106:9;4102:17;4093:6;4049:71;:::i;:::-;4167:9;4161:4;4157:20;4152:2;4141:9;4137:18;4130:48;4195:78;4268:4;4259:6;4195:78;:::i;:::-;4187:86;;4003:277;;;;;:::o;4286:430::-;4429:4;4467:2;4456:9;4452:18;4444:26;;4480:71;4548:1;4537:9;4533:17;4524:6;4480:71;:::i;:::-;4561:72;4629:2;4618:9;4614:18;4605:6;4561:72;:::i;:::-;4643:66;4705:2;4694:9;4690:18;4681:6;4643:66;:::i;:::-;4434:282;;;;;;:::o;4722:210::-;4809:4;4847:2;4836:9;4832:18;4824:26;;4860:65;4922:1;4911:9;4907:17;4898:6;4860:65;:::i;:::-;4814:118;;;;:::o;4938:419::-;5104:4;5142:2;5131:9;5127:18;5119:26;;5191:9;5185:4;5181:20;5177:1;5166:9;5162:17;5155:47;5219:131;5345:4;5219:131;:::i;:::-;5211:139;;5109:248;;;:::o;5363:419::-;5529:4;5567:2;5556:9;5552:18;5544:26;;5616:9;5610:4;5606:20;5602:1;5591:9;5587:17;5580:47;5644:131;5770:4;5644:131;:::i;:::-;5636:139;;5534:248;;;:::o;5788:419::-;5954:4;5992:2;5981:9;5977:18;5969:26;;6041:9;6035:4;6031:20;6027:1;6016:9;6012:17;6005:47;6069:131;6195:4;6069:131;:::i;:::-;6061:139;;5959:248;;;:::o;6213:129::-;6247:6;6274:20;;:::i;:::-;6264:30;;6303:33;6331:4;6323:6;6303:33;:::i;:::-;6254:88;;;:::o;6348:75::-;6381:6;6414:2;6408:9;6398:19;;6388:35;:::o;6429:308::-;6491:4;6581:18;6573:6;6570:30;6567:2;;;6603:18;;:::i;:::-;6567:2;6641:29;6663:6;6641:29;:::i;:::-;6633:37;;6725:4;6719;6715:15;6707:23;;6496:241;;;:::o;6743:99::-;6795:6;6829:5;6823:12;6813:22;;6802:40;;;:::o;6848:169::-;6932:11;6966:6;6961:3;6954:19;7006:4;7001:3;6997:14;6982:29;;6944:73;;;;:::o;7023:305::-;7063:3;7082:20;7100:1;7082:20;:::i;:::-;7077:25;;7116:20;7134:1;7116:20;:::i;:::-;7111:25;;7270:1;7202:66;7198:74;7195:1;7192:81;7189:2;;;7276:18;;:::i;:::-;7189:2;7320:1;7317;7313:9;7306:16;;7067:261;;;;:::o;7334:96::-;7371:7;7400:24;7418:5;7400:24;:::i;:::-;7389:35;;7379:51;;;:::o;7436:90::-;7470:7;7513:5;7506:13;7499:21;7488:32;;7478:48;;;:::o;7532:126::-;7569:7;7609:42;7602:5;7598:54;7587:65;;7577:81;;;:::o;7664:77::-;7701:7;7730:5;7719:16;;7709:32;;;:::o;7747:154::-;7831:6;7826:3;7821;7808:30;7893:1;7884:6;7879:3;7875:16;7868:27;7798:103;;;:::o;7907:307::-;7975:1;7985:113;7999:6;7996:1;7993:13;7985:113;;;8084:1;8079:3;8075:11;8069:18;8065:1;8060:3;8056:11;8049:39;8021:2;8018:1;8014:10;8009:15;;7985:113;;;8116:6;8113:1;8110:13;8107:2;;;8196:1;8187:6;8182:3;8178:16;8171:27;8107:2;7956:258;;;;:::o;8220:281::-;8303:27;8325:4;8303:27;:::i;:::-;8295:6;8291:40;8433:6;8421:10;8418:22;8397:18;8385:10;8382:34;8379:62;8376:2;;;8444:18;;:::i;:::-;8376:2;8484:10;8480:2;8473:22;8263:238;;;:::o;8507:180::-;8555:77;8552:1;8545:88;8652:4;8649:1;8642:15;8676:4;8673:1;8666:15;8693:180;8741:77;8738:1;8731:88;8838:4;8835:1;8828:15;8862:4;8859:1;8852:15;8879:117;8988:1;8985;8978:12;9002:117;9111:1;9108;9101:12;9125:117;9234:1;9231;9224:12;9248:117;9357:1;9354;9347:12;9371:102;9412:6;9463:2;9459:7;9454:2;9447:5;9443:14;9439:28;9429:38;;9419:54;;;:::o;9479:175::-;9619:27;9615:1;9607:6;9603:14;9596:51;9585:69;:::o;9660:226::-;9800:34;9796:1;9788:6;9784:14;9777:58;9869:9;9864:2;9856:6;9852:15;9845:34;9766:120;:::o;9892:171::-;10032:23;10028:1;10020:6;10016:14;10009:47;9998:65;:::o;10069:122::-;10142:24;10160:5;10142:24;:::i;:::-;10135:5;10132:35;10122:2;;10181:1;10178;10171:12;10122:2;10112:79;:::o",
  "source": "pragma solidity >=0.7.0 <0.9.0;\n\nimport \"./Whitelist.sol\";\n\n\ncontract CorporateFactory { \n    address public owner; // owner address \n    mapping(uint => corporate) public corporates;\n    uint numCorps; // a mapping of contract ids to the corporate struct.\n    bool active = true;\n\n    struct corporate {\n        address corpAddress;\n        uint id;\n        bool valid;\n    }\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    function createCorp(string memory corpName) public  permissioned activeContract returns(bool){\n        Corporate newCorp = new Corporate(owner,corpName);\n        corporates[numCorps] = corporate(address(newCorp), numCorps, true);\n        numCorps += 1;\n        return true;\n    }\n\n    function getCorporate(uint id) public view permissioned activeContract returns(address)  {\n        return corporates[id].corpAddress;\n    }\n\n    function toggleContractActivation() public permissioned returns (bool){\n        active = !active;\n        return(active);\n    }\n\n    function disableCorporate(uint id) public permissioned activeContract returns (bool){\n        corporates[id].valid = false;\n    }\n\n    function checkIfCorporateValid(uint id) public view activeContract returns (bool){\n        require(corporates[id].corpAddress != address(0), 'Not a valid corporate');\n        return corporates[id].valid;\n\n    }\n    \n    modifier permissioned {\n        require(msg.sender == owner, \"Only the owner can access this function\");\n        _;\n    }\n\n    modifier activeContract{\n        require(active == true, \"Contract no longer active\");\n        _;\n    }\n}\n\ncontract Corporate {\n    address public creator_; // creator of the contract\n    address public owner; // owner of the contract i.e the corporate\n    uint public corporate_id;\n    string public corporate_name_; // name of the contract\n    mapping(address => sub) public subsidiaries; // a mapping of addresses to the sub struct.\n    address[] public subs; // could make this into a struct so the id can be found easily.\n    Whitelist public whitelist; //whitelist associated with the corporate\n    bool valid; //checks if the contract is valid \n    \n    struct sub {\n        address subAddress;\n        uint id;\n        bool valid;\n    }\n\n\n    // allows for an owner i.e. corporate to be passed into the constructor \n    constructor(address owner_, string memory name){\n        owner = owner_;\n        creator_ = msg.sender;\n        corporate_name_ = name; \n        valid = true;    \n    }\n\n    // This function is used to create a Subsidiary branch of the Corporate representing a store\n    function createSub(uint id) public  permissioned validContract returns(bool){\n        // if set to default address the contract does not yet exist \n        require(getSubContract(id) != address(0));\n        Subsidiary newSub = new Subsidiary(address(this));\n        subs.push(address(newSub)); // add new sub to subsidiary array \n        subsidiaries[address(newSub)] = sub(address(newSub), id, true); // add new sub to mapping\n        return true;\n    }\n\n    // returns the subsidiary struct\n    function getSubContract(uint id) public view permissioned validContract returns(address)  {\n        return subs[id];\n    }\n\n    function checkIfSubsidiaryValid(address toCheck) public view validContract returns(bool){\n        require(subsidiaries[toCheck].subAddress != address(0), \"Not a subsidiary address\");\n        return subsidiaries[toCheck].valid;\n    }\n\n    // updates the whiteList \n    function updateWhitelist(Whitelist whitelist_) public permissioned validContract {\n        require(whitelist_.owner() == owner || whitelist.owner() == creator_, \"Whitelist not created by known party\");\n        whitelist = whitelist_;\n    }\n\n    //disable the Corporate\n    function disableCorporate() public permissioned validContract returns(bool){\n        valid = false;\n    }\n\n    modifier permissioned {\n        require(msg.sender == owner || msg.sender == creator_);\n        _;\n    }\n\n    modifier validContract {\n        require(valid == true);\n        _;\n    }\n}\n\n\n\n// This contract represent a Subsidiary branch of a corporate \ncontract Subsidiary {\n    address payable public parent_; // Corporate Contract\n    uint amount; //Balanace\n    mapping(address => bool) private permissionedAddress; //provides an array of addresses the Sub can withdraw funds to\n    event ValueReceived(address user, uint amount);\n\n\n    struct transaction{\n        uint id; \n        address receiver_id;\n        uint amount;\n    }\n\n    // transaction id to person id\n    mapping(uint => transaction) transactions; // List of transactions @DEV: need to provide rec address and amount (maybe through struct)\n    uint numOfTransactions;\n    constructor(address parent) {\n        parent_ = payable(parent);\n        amount = 0;\n    }\n\n    // need to make sure no possibility for double spend\n    // Will reset to zero and prevent withdrawl whilst the send transaction is processed.\n    function getTake() public payable accountsAccess returns(bool)  {\n        uint prevAmount = amount;\n        amount = 0;\n        return parent_.send(prevAmount); // need to write a fallback function if this fails.\n    }\n\n    // Oracle end point.\n    // reassess this function as it always returns true.\n    function insertTransaction(uint transID, address person_id, uint tx_amount) restricted public returns(bool) {\n        require(person_id.balance >= amount, \"The Receiver contract does not have sufficient balance for this transaction\"); \n        transactions[transID] = transaction(transID, person_id, tx_amount);\n        return true;\n    }\n\n    // provides functionality to receive funds\n    receive() external payable{\n        emit ValueReceived(msg.sender, msg.value);\n    }\n    \n    modifier restricted {\n        require(msg.sender == parent_ || permissionedAddress[msg.sender] == true);\n        _;\n    }\n\n    modifier accountsAccess {\n        require(msg.sender == parent_);\n        _;\n    }\n}",
  "sourcePath": "/Users/Will/Documents/University /Final Year/T2/P2/COMP6452-HelpChain/contracts/CorporateFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/CorporateFactory.sol",
    "exportedSymbols": {
      "Corporate": [
        516
      ],
      "CorporateFactory": [
        286
      ],
      "Subsidiary": [
        657
      ],
      "Whitelist": [
        1298
      ]
    },
    "id": 658,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 112,
=======
  "sourceMap": "83:1653:1:-:0;;;321:4;307:18;;;;;;;;;;;;;;;;;;;;428:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;472:10;464:5;;:18;;;;;;;;;;;;;;;;;;500:6;492:5;;:14;;;;;;;;;;;;;;;;;;428:85;83:1653;;7:169:6;77:5;108:6;102:13;93:22;;124:46;164:5;124:46;:::i;:::-;83:93;;;;:::o;182:377::-;265:6;314:2;302:9;293:7;289:23;285:32;282:2;;;320:79;;:::i;:::-;282:2;440:1;465:77;534:7;525:6;514:9;510:22;465:77;:::i;:::-;455:87;;411:141;272:287;;;;:::o;646:96::-;683:7;712:24;730:5;712:24;:::i;:::-;701:35;;691:51;;;:::o;748:109::-;798:7;827:24;845:5;827:24;:::i;:::-;816:35;;806:51;;;:::o;863:126::-;900:7;940:42;933:5;929:54;918:65;;908:81;;;:::o;1118:117::-;1227:1;1224;1217:12;1241:148;1327:37;1358:5;1327:37;:::i;:::-;1320:5;1317:48;1307:2;;1379:1;1376;1369:12;1307:2;1297:92;:::o;83:1653:1:-;;;;;;;",
  "deployedSourceMap": "83:1653:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;825:126;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1090:150;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;957:127;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;184:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;116:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;519:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1246:210;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;160:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;825:126;891:7;1682:4;1672:14;;:6;;;;;;;;;;;:14;;;1664:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;918:10:::1;:14;929:2;918:14;;;;;;;;;;;:26;;;;;;;;;;;;911:33;;825:126:::0;;;:::o;1090:150::-;1169:4;1520:5;;;;;;;;;;;1506:19;;:10;:19;;;:51;;;;1551:5;;;;;;;;;;;1529:28;;:10;:28;;;1506:51;1498:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;1682:4:::1;1672:14;;:6;;;;;;;;;;;:14;;;1664:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1207:5:::2;1184:10;:14;1195:2;1184:14;;;;;;;;;;;:20;;;:28;;;;;;;;;;;;;;;;;;1229:4;1222:11;;1090:150:::0;;;:::o;957:127::-;1022:4;1520:5;;;;;;;;;;;1506:19;;:10;:19;;;:51;;;;1551:5;;;;;;;;;;;1529:28;;:10;:28;;;1506:51;1498:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;1047:6:::1;;;;;;;;;;;1046:7;1037:6;;:16;;;;;;;;;;;;;;;;;;1070:6;;;;;;;;;;;1063:14;;957:127:::0;:::o;184:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;116:20::-;;;;;;;;;;;;:::o;519:300::-;607:7;1520:5;;;;;;;;;;;1506:19;;:10;:19;;;:51;;;;1551:5;;;;;;;;;;;1529:28;;:10;:28;;;1506:51;1498:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;1682:4:::1;1672:14;;:6;;;;;;;;;;;:14;;;1664:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;625:17:::2;659:5:::0;::::2;;;;;;;;;;665;;;;;;;;;;;671:8;645:35;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;625:55;;713:43;;;;;;;;731:7;713:43;;;;;;741:8;;713:43;;;;751:4;713:43;;;;::::0;690:10:::2;:20;701:8;;690:20;;;;;;;;;;;:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;778:1;766:8;;:13;;;;;;;:::i;:::-;;;;;;;;804:7;789:23;;;519:300:::0;;;:::o;1246:210::-;1322:4;1682;1672:14;;:6;;;;;;;;;;;:14;;;1664:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1383:1:::1;1345:40;;:10;:14;1356:2;1345:14;;;;;;;;;;;:26;;;;;;;;;;;;:40;;;;1337:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;1428:10;:14;1439:2;1428:14;;;;;;;;;;;:20;;;;;;;;;;;;1421:27;;1246:210:::0;;;:::o;160:18::-;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:412:6:-;85:5;110:66;126:49;168:6;126:49;:::i;:::-;110:66;:::i;:::-;101:75;;199:6;192:5;185:21;237:4;230:5;226:16;275:3;266:6;261:3;257:16;254:25;251:2;;;282:79;;:::i;:::-;251:2;372:41;406:6;401:3;396;372:41;:::i;:::-;91:328;;;;;;:::o;439:340::-;495:5;544:3;537:4;529:6;525:17;521:27;511:2;;552:79;;:::i;:::-;511:2;669:6;656:20;694:79;769:3;761:6;754:4;746:6;742:17;694:79;:::i;:::-;685:88;;501:278;;;;;:::o;785:139::-;831:5;869:6;856:20;847:29;;885:33;912:5;885:33;:::i;:::-;837:87;;;;:::o;930:509::-;999:6;1048:2;1036:9;1027:7;1023:23;1019:32;1016:2;;;1054:79;;:::i;:::-;1016:2;1202:1;1191:9;1187:17;1174:31;1232:18;1224:6;1221:30;1218:2;;;1254:79;;:::i;:::-;1218:2;1359:63;1414:7;1405:6;1394:9;1390:22;1359:63;:::i;:::-;1349:73;;1145:287;1006:433;;;;:::o;1445:329::-;1504:6;1553:2;1541:9;1532:7;1528:23;1524:32;1521:2;;;1559:79;;:::i;:::-;1521:2;1679:1;1704:53;1749:7;1740:6;1729:9;1725:22;1704:53;:::i;:::-;1694:63;;1650:117;1511:263;;;;:::o;1780:118::-;1867:24;1885:5;1867:24;:::i;:::-;1862:3;1855:37;1845:53;;:::o;1904:109::-;1985:21;2000:5;1985:21;:::i;:::-;1980:3;1973:34;1963:50;;:::o;2019:157::-;2119:50;2163:5;2119:50;:::i;:::-;2114:3;2107:63;2097:79;;:::o;2182:364::-;2270:3;2298:39;2331:5;2298:39;:::i;:::-;2353:71;2417:6;2412:3;2353:71;:::i;:::-;2346:78;;2433:52;2478:6;2473:3;2466:4;2459:5;2455:16;2433:52;:::i;:::-;2510:29;2532:6;2510:29;:::i;:::-;2505:3;2501:39;2494:46;;2274:272;;;;;:::o;2552:366::-;2694:3;2715:67;2779:2;2774:3;2715:67;:::i;:::-;2708:74;;2791:93;2880:3;2791:93;:::i;:::-;2909:2;2904:3;2900:12;2893:19;;2698:220;;;:::o;2924:366::-;3066:3;3087:67;3151:2;3146:3;3087:67;:::i;:::-;3080:74;;3163:93;3252:3;3163:93;:::i;:::-;3281:2;3276:3;3272:12;3265:19;;3070:220;;;:::o;3296:366::-;3438:3;3459:67;3523:2;3518:3;3459:67;:::i;:::-;3452:74;;3535:93;3624:3;3535:93;:::i;:::-;3653:2;3648:3;3644:12;3637:19;;3442:220;;;:::o;3668:118::-;3755:24;3773:5;3755:24;:::i;:::-;3750:3;3743:37;3733:53;;:::o;3792:222::-;3885:4;3923:2;3912:9;3908:18;3900:26;;3936:71;4004:1;3993:9;3989:17;3980:6;3936:71;:::i;:::-;3890:124;;;;:::o;4020:559::-;4202:4;4240:2;4229:9;4225:18;4217:26;;4253:71;4321:1;4310:9;4306:17;4297:6;4253:71;:::i;:::-;4334:85;4415:2;4404:9;4400:18;4391:6;4334:85;:::i;:::-;4466:9;4460:4;4456:20;4451:2;4440:9;4436:18;4429:48;4494:78;4567:4;4558:6;4494:78;:::i;:::-;4486:86;;4207:372;;;;;;:::o;4585:430::-;4728:4;4766:2;4755:9;4751:18;4743:26;;4779:71;4847:1;4836:9;4832:17;4823:6;4779:71;:::i;:::-;4860:72;4928:2;4917:9;4913:18;4904:6;4860:72;:::i;:::-;4942:66;5004:2;4993:9;4989:18;4980:6;4942:66;:::i;:::-;4733:282;;;;;;:::o;5021:210::-;5108:4;5146:2;5135:9;5131:18;5123:26;;5159:65;5221:1;5210:9;5206:17;5197:6;5159:65;:::i;:::-;5113:118;;;;:::o;5237:248::-;5343:4;5381:2;5370:9;5366:18;5358:26;;5394:84;5475:1;5464:9;5460:17;5451:6;5394:84;:::i;:::-;5348:137;;;;:::o;5491:419::-;5657:4;5695:2;5684:9;5680:18;5672:26;;5744:9;5738:4;5734:20;5730:1;5719:9;5715:17;5708:47;5772:131;5898:4;5772:131;:::i;:::-;5764:139;;5662:248;;;:::o;5916:419::-;6082:4;6120:2;6109:9;6105:18;6097:26;;6169:9;6163:4;6159:20;6155:1;6144:9;6140:17;6133:47;6197:131;6323:4;6197:131;:::i;:::-;6189:139;;6087:248;;;:::o;6341:419::-;6507:4;6545:2;6534:9;6530:18;6522:26;;6594:9;6588:4;6584:20;6580:1;6569:9;6565:17;6558:47;6622:131;6748:4;6622:131;:::i;:::-;6614:139;;6512:248;;;:::o;6766:129::-;6800:6;6827:20;;:::i;:::-;6817:30;;6856:33;6884:4;6876:6;6856:33;:::i;:::-;6807:88;;;:::o;6901:75::-;6934:6;6967:2;6961:9;6951:19;;6941:35;:::o;6982:308::-;7044:4;7134:18;7126:6;7123:30;7120:2;;;7156:18;;:::i;:::-;7120:2;7194:29;7216:6;7194:29;:::i;:::-;7186:37;;7278:4;7272;7268:15;7260:23;;7049:241;;;:::o;7296:99::-;7348:6;7382:5;7376:12;7366:22;;7355:40;;;:::o;7401:169::-;7485:11;7519:6;7514:3;7507:19;7559:4;7554:3;7550:14;7535:29;;7497:73;;;;:::o;7576:305::-;7616:3;7635:20;7653:1;7635:20;:::i;:::-;7630:25;;7669:20;7687:1;7669:20;:::i;:::-;7664:25;;7823:1;7755:66;7751:74;7748:1;7745:81;7742:2;;;7829:18;;:::i;:::-;7742:2;7873:1;7870;7866:9;7859:16;;7620:261;;;;:::o;7887:96::-;7924:7;7953:24;7971:5;7953:24;:::i;:::-;7942:35;;7932:51;;;:::o;7989:90::-;8023:7;8066:5;8059:13;8052:21;8041:32;;8031:48;;;:::o;8085:126::-;8122:7;8162:42;8155:5;8151:54;8140:65;;8130:81;;;:::o;8217:77::-;8254:7;8283:5;8272:16;;8262:32;;;:::o;8300:152::-;8363:9;8396:50;8440:5;8396:50;:::i;:::-;8383:63;;8373:79;;;:::o;8458:126::-;8521:9;8554:24;8572:5;8554:24;:::i;:::-;8541:37;;8531:53;;;:::o;8590:154::-;8674:6;8669:3;8664;8651:30;8736:1;8727:6;8722:3;8718:16;8711:27;8641:103;;;:::o;8750:307::-;8818:1;8828:113;8842:6;8839:1;8836:13;8828:113;;;8927:1;8922:3;8918:11;8912:18;8908:1;8903:3;8899:11;8892:39;8864:2;8861:1;8857:10;8852:15;;8828:113;;;8959:6;8956:1;8953:13;8950:2;;;9039:1;9030:6;9025:3;9021:16;9014:27;8950:2;8799:258;;;;:::o;9063:281::-;9146:27;9168:4;9146:27;:::i;:::-;9138:6;9134:40;9276:6;9264:10;9261:22;9240:18;9228:10;9225:34;9222:62;9219:2;;;9287:18;;:::i;:::-;9219:2;9327:10;9323:2;9316:22;9106:238;;;:::o;9350:180::-;9398:77;9395:1;9388:88;9495:4;9492:1;9485:15;9519:4;9516:1;9509:15;9536:180;9584:77;9581:1;9574:88;9681:4;9678:1;9671:15;9705:4;9702:1;9695:15;9722:117;9831:1;9828;9821:12;9845:117;9954:1;9951;9944:12;9968:117;10077:1;10074;10067:12;10091:117;10200:1;10197;10190:12;10214:102;10255:6;10306:2;10302:7;10297:2;10290:5;10286:14;10282:28;10272:38;;10262:54;;;:::o;10322:175::-;10462:27;10458:1;10450:6;10446:14;10439:51;10428:69;:::o;10503:232::-;10643:34;10639:1;10631:6;10627:14;10620:58;10712:15;10707:2;10699:6;10695:15;10688:40;10609:126;:::o;10741:171::-;10881:23;10877:1;10869:6;10865:14;10858:47;10847:65;:::o;10918:122::-;10991:24;11009:5;10991:24;:::i;:::-;10984:5;10981:35;10971:2;;11030:1;11027;11020:12;10971:2;10961:79;:::o",
  "source": "pragma solidity >=0.7.0 <0.9.0;\n\nimport \"./Whitelist.sol\";\nimport \"./Admin.sol\";\n\n\ncontract CorporateFactory { \n    address public owner; // owner address \n    Admin public admin;\n    mapping(uint => corporate) public corporates;\n    uint numCorps; // a mapping of contract ids to the corporate struct.\n    bool active = true;\n\n    struct corporate {\n        address corpAddress;\n        uint id;\n        bool valid;\n    }\n\n    constructor(Admin admin_) {\n        owner = msg.sender;\n        admin = admin_;\n    }\n\n    function createCorp(string memory corpName) public  permissioned activeContract returns(address){\n        Corporate newCorp = new Corporate(owner,admin,corpName);\n        corporates[numCorps] = corporate(address(newCorp), numCorps, true);\n        numCorps += 1;\n        return address(newCorp);\n    }\n\n    function getCorporate(uint id) public view activeContract returns(address)  {\n        return corporates[id].corpAddress;\n    }\n\n    function toggleContractActivation() public permissioned returns (bool){\n        active = !active;\n        return(active);\n    }\n\n    function disableCorporate(uint id) public permissioned activeContract returns (bool){\n        corporates[id].valid = false;\n        return true;\n    }\n\n    function checkIfCorporateValid(uint id) public view activeContract returns (bool){\n        require(corporates[id].corpAddress != address(0), 'Not a valid corporate');\n        return corporates[id].valid;\n\n    }\n    \n    modifier permissioned {\n        require(msg.sender == owner || msg.sender == address(admin), \"Only the owner/admin can access this function\");\n        _;\n    }\n\n    modifier activeContract{\n        require(active == true, \"Contract no longer active\");\n        _;\n    }\n}\n\ncontract Corporate {\n    address public creator_; // creator of the contract\n    address public owner; // owner of the contract i.e the corporate\n    Admin public admin;\n    uint public corporate_id;\n    string public corporate_name_; // name of the contract\n    mapping(address => sub) public subsidiaries; // a mapping of addresses to the sub struct.\n    address[] public subs; // could make this into a struct so the id can be found easily.\n    Whitelist public whitelist; //whitelist associated with the corporate\n    bool valid; //checks if the contract is valid \n    \n    struct sub {\n        address subAddress;\n        uint id;\n        bool valid;\n    }\n\n\n    // allows for an owner i.e. corporate to be passed into the constructor \n    constructor(address owner_, Admin admin_, string memory name){\n        owner = owner_;\n        admin = admin_;\n        creator_ = msg.sender;\n        corporate_name_ = name; \n        valid = true;    \n    }\n\n    // This function is used to create a Subsidiary branch of the Corporate representing a store\n    function createSub(uint id) public  permissioned validContract returns(address){\n        // if set to default address the contract does not yet exist \n        require(subs[id] == address(0));\n        Subsidiary newSub = new Subsidiary(this);\n        subs.push(address(newSub)); // add new sub to subsidiary array \n        subsidiaries[address(newSub)] = sub(address(newSub), id, true); // add new sub to mapping\n        return address(newSub);\n    }\n\n    // returns the subsidiary struct\n    function getSubContract(uint id) public view validContract returns(address)  {\n        return subs[id];\n    }\n\n    function checkIfSubsidiaryValid(address toCheck) public view validContract returns(bool){\n        require(subsidiaries[toCheck].subAddress != address(0), \"Not a subsidiary address\");\n        return subsidiaries[toCheck].valid;\n    }\n\n    // updates the whiteList \n    function updateWhitelist(Whitelist whitelist_) public permissioned validContract {\n        require(whitelist_.owner() == owner || whitelist.owner() == creator_, \"Whitelist not created by known party\");\n        whitelist = whitelist_;\n    }\n\n    //disable the Corporate\n    function disableCorporate() public permissioned validContract returns(bool){\n        valid = false;\n        return valid;\n    }\n\n    modifier permissioned {\n        require(msg.sender == owner || msg.sender == creator_);\n        _;\n    }\n\n    modifier validContract {\n        require(valid == true);\n        _;\n    }\n}\n\n\n\n// This contract represent a Subsidiary branch of a corporate \ncontract Subsidiary {\n    Corporate public parent_; // Corporate Contract\n    uint amount; //Balanace\n    mapping(address => bool) private permissionedAddress; //provides an array of addresses the Sub can withdraw funds to\n    event ValueReceived(address user, uint amount);\n\n\n    struct transaction{\n        uint id; \n        address receiver_id;\n        uint amount;\n    }\n\n    // transaction id to person id\n    mapping(uint => transaction) transactions; // List of transactions @DEV: need to provide rec address and amount (maybe through struct)\n    uint numOfTransactions;\n\n    constructor(Corporate corp) {\n        parent_ = corp;\n        amount = 0;\n    }\n\n    // need to make sure no possibility for double spend\n    // Will reset to zero and prevent withdrawl whilst the send transaction is processed.\n    function getTake() public payable accountsAccess returns(bool)  {\n        uint prevAmount = amount;\n        amount = 0;\n        return payable(address(parent_)).send(prevAmount); // need to write a fallback function if this fails.\n    }\n\n    // Oracle end point.\n    // reassess this function as it always returns true.\n    function insertTransaction(uint transID, address person_id, uint tx_amount) restricted public returns(bool) {\n        require(person_id.balance >= amount, \"The Receiver contract does not have sufficient balance for this transaction\"); \n        transactions[transID] = transaction(transID, person_id, tx_amount);\n        return true;\n    }\n\n    // provides functionality to receive funds\n    receive() external payable{\n        emit ValueReceived(msg.sender, msg.value);\n    }\n    \n    modifier restricted {\n        require(msg.sender == address(parent_) || permissionedAddress[msg.sender] == true);\n        _;\n    }\n\n    modifier accountsAccess {\n        require(msg.sender == address(parent_));\n        _;\n    }\n}",
  "sourcePath": "/Users/dylan/Library/Mobile Documents/com~apple~CloudDocs/Developer/UNSW/COMP6452_Blockchain_Architecture/COMP6452-HelpChain/contracts/CorporateFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/CorporateFactory.sol",
    "exportedSymbols": {
      "Admin": [
        134
      ],
      "Corporate": [
        573
      ],
      "CorporateFactory": [
        333
      ],
      "Subsidiary": [
        725
      ],
      "Whitelist": [
        1425
      ]
    },
    "id": 726,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 136,
>>>>>>> main
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:1"
      },
      {
        "absolutePath": "project:/contracts/Whitelist.sol",
        "file": "./Whitelist.sol",
<<<<<<< HEAD
        "id": 113,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 658,
        "sourceUnit": 1299,
=======
        "id": 137,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 726,
        "sourceUnit": 1426,
>>>>>>> main
        "src": "33:25:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
<<<<<<< HEAD
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          516
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 286,
        "linearizedBaseContracts": [
          286
        ],
        "name": "CorporateFactory",
        "nameLocation": "70:16:1",
=======
        "absolutePath": "project:/contracts/Admin.sol",
        "file": "./Admin.sol",
        "id": 138,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 726,
        "sourceUnit": 135,
        "src": "59:21:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          573
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 333,
        "linearizedBaseContracts": [
          333
        ],
        "name": "CorporateFactory",
        "nameLocation": "92:16:1",
>>>>>>> main
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
<<<<<<< HEAD
            "id": 115,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "109:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 286,
            "src": "94:20:1",
=======
            "id": 140,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "131:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 333,
            "src": "116:20:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 114,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "94:7:1",
=======
              "id": 139,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "116:7:1",
>>>>>>> main
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "functionSelector": "68a0b4e7",
            "id": 120,
            "mutability": "mutable",
            "name": "corporates",
            "nameLocation": "172:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 286,
            "src": "138:44:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$132_storage_$",
              "typeString": "mapping(uint256 => struct CorporateFactory.corporate)"
            },
            "typeName": {
              "id": 119,
              "keyType": {
                "id": 116,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "146:4:1",
=======
            "functionSelector": "f851a440",
            "id": 143,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "173:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 333,
            "src": "160:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Admin_$134",
              "typeString": "contract Admin"
            },
            "typeName": {
              "id": 142,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 141,
                "name": "Admin",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 134,
                "src": "160:5:1"
              },
              "referencedDeclaration": 134,
              "src": "160:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Admin_$134",
                "typeString": "contract Admin"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "68a0b4e7",
            "id": 148,
            "mutability": "mutable",
            "name": "corporates",
            "nameLocation": "218:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 333,
            "src": "184:44:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$160_storage_$",
              "typeString": "mapping(uint256 => struct CorporateFactory.corporate)"
            },
            "typeName": {
              "id": 147,
              "keyType": {
                "id": 144,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "192:4:1",
>>>>>>> main
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "138:26:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$132_storage_$",
                "typeString": "mapping(uint256 => struct CorporateFactory.corporate)"
              },
              "valueType": {
                "id": 118,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 117,
                  "name": "corporate",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 132,
                  "src": "154:9:1"
                },
                "referencedDeclaration": 132,
                "src": "154:9:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_corporate_$132_storage_ptr",
=======
              "src": "184:26:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$160_storage_$",
                "typeString": "mapping(uint256 => struct CorporateFactory.corporate)"
              },
              "valueType": {
                "id": 146,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 145,
                  "name": "corporate",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 160,
                  "src": "200:9:1"
                },
                "referencedDeclaration": 160,
                "src": "200:9:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_corporate_$160_storage_ptr",
>>>>>>> main
                  "typeString": "struct CorporateFactory.corporate"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 122,
            "mutability": "mutable",
            "name": "numCorps",
            "nameLocation": "193:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 286,
            "src": "188:13:1",
=======
            "id": 150,
            "mutability": "mutable",
            "name": "numCorps",
            "nameLocation": "239:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 333,
            "src": "234:13:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 121,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "188:4:1",
=======
              "id": 149,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "234:4:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 125,
            "mutability": "mutable",
            "name": "active",
            "nameLocation": "266:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 286,
            "src": "261:18:1",
=======
            "id": 153,
            "mutability": "mutable",
            "name": "active",
            "nameLocation": "312:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 333,
            "src": "307:18:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 123,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "261:4:1",
=======
              "id": 151,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "307:4:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
<<<<<<< HEAD
              "id": 124,
=======
              "id": 152,
>>>>>>> main
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
<<<<<<< HEAD
              "src": "275:4:1",
=======
              "src": "321:4:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "CorporateFactory.corporate",
<<<<<<< HEAD
            "id": 132,
            "members": [
              {
                "constant": false,
                "id": 127,
                "mutability": "mutable",
                "name": "corpAddress",
                "nameLocation": "321:11:1",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "313:19:1",
=======
            "id": 160,
            "members": [
              {
                "constant": false,
                "id": 155,
                "mutability": "mutable",
                "name": "corpAddress",
                "nameLocation": "367:11:1",
                "nodeType": "VariableDeclaration",
                "scope": 160,
                "src": "359:19:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 126,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "313:7:1",
=======
                  "id": 154,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "359:7:1",
>>>>>>> main
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 129,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "347:2:1",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "342:7:1",
=======
                "id": 157,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "393:2:1",
                "nodeType": "VariableDeclaration",
                "scope": 160,
                "src": "388:7:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 128,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "342:4:1",
=======
                  "id": 156,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "388:4:1",
>>>>>>> main
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 131,
                "mutability": "mutable",
                "name": "valid",
                "nameLocation": "364:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "359:10:1",
=======
                "id": 159,
                "mutability": "mutable",
                "name": "valid",
                "nameLocation": "410:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 160,
                "src": "405:10:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 130,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "359:4:1",
=======
                  "id": 158,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "405:4:1",
>>>>>>> main
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "corporate",
<<<<<<< HEAD
            "nameLocation": "293:9:1",
            "nodeType": "StructDefinition",
            "scope": 286,
            "src": "286:90:1",
=======
            "nameLocation": "339:9:1",
            "nodeType": "StructDefinition",
            "scope": 333,
            "src": "332:90:1",
>>>>>>> main
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 140,
              "nodeType": "Block",
              "src": "396:35:1",
              "statements": [
                {
                  "expression": {
                    "id": 138,
=======
              "id": 175,
              "nodeType": "Block",
              "src": "454:59:1",
              "statements": [
                {
                  "expression": {
                    "id": 169,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 135,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "406:5:1",
=======
                      "id": 166,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 140,
                      "src": "464:5:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
<<<<<<< HEAD
                        "id": 136,
=======
                        "id": 167,
>>>>>>> main
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                        "src": "414:3:1",
=======
                        "src": "472:3:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
<<<<<<< HEAD
                      "id": 137,
=======
                      "id": 168,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "src": "414:10:1",
=======
                      "src": "472:10:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "src": "406:18:1",
=======
                    "src": "464:18:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "406:18:1"
                }
              ]
            },
            "id": 141,
=======
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "464:18:1"
                },
                {
                  "expression": {
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 171,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "492:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Admin_$134",
                        "typeString": "contract Admin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 172,
                      "name": "admin_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
                      "src": "500:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Admin_$134",
                        "typeString": "contract Admin"
                      }
                    },
                    "src": "492:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Admin_$134",
                      "typeString": "contract Admin"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "492:14:1"
                }
              ]
            },
            "id": 176,
>>>>>>> main
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "393:2:1"
            },
            "returnParameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "396:0:1"
            },
            "scope": 286,
            "src": "382:49:1",
=======
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "admin_",
                  "nameLocation": "446:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "440:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Admin_$134",
                    "typeString": "contract Admin"
                  },
                  "typeName": {
                    "id": 162,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 161,
                      "name": "Admin",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 134,
                      "src": "440:5:1"
                    },
                    "referencedDeclaration": 134,
                    "src": "440:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Admin_$134",
                      "typeString": "contract Admin"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "439:14:1"
            },
            "returnParameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "454:0:1"
            },
            "scope": 333,
            "src": "428:85:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 181,
              "nodeType": "Block",
              "src": "530:186:1",
              "statements": [
                {
                  "assignments": [
                    154
=======
              "id": 220,
              "nodeType": "Block",
              "src": "615:204:1",
              "statements": [
                {
                  "assignments": [
                    189
>>>>>>> main
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 154,
                      "mutability": "mutable",
                      "name": "newCorp",
                      "nameLocation": "550:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 181,
                      "src": "540:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Corporate_$516",
                        "typeString": "contract Corporate"
                      },
                      "typeName": {
                        "id": 153,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 152,
                          "name": "Corporate",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 516,
                          "src": "540:9:1"
                        },
                        "referencedDeclaration": 516,
                        "src": "540:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Corporate_$516",
=======
                      "id": 189,
                      "mutability": "mutable",
                      "name": "newCorp",
                      "nameLocation": "635:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 220,
                      "src": "625:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Corporate_$573",
                        "typeString": "contract Corporate"
                      },
                      "typeName": {
                        "id": 188,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 187,
                          "name": "Corporate",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 573,
                          "src": "625:9:1"
                        },
                        "referencedDeclaration": 573,
                        "src": "625:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Corporate_$573",
>>>>>>> main
                          "typeString": "contract Corporate"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 161,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 158,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "574:5:1",
=======
                  "id": 197,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 193,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "659:5:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 159,
                        "name": "corpName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "580:8:1",
=======
                        "id": 194,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "665:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Admin_$134",
                          "typeString": "contract Admin"
                        }
                      },
                      {
                        "id": 195,
                        "name": "corpName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "671:8:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
<<<<<<< HEAD
=======
                          "typeIdentifier": "t_contract$_Admin_$134",
                          "typeString": "contract Admin"
                        },
                        {
>>>>>>> main
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
<<<<<<< HEAD
                      "id": 157,
=======
                      "id": 192,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
<<<<<<< HEAD
                      "src": "560:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_Corporate_$516_$",
                        "typeString": "function (address,string memory) returns (contract Corporate)"
                      },
                      "typeName": {
                        "id": 156,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 155,
                          "name": "Corporate",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 516,
                          "src": "564:9:1"
                        },
                        "referencedDeclaration": 516,
                        "src": "564:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Corporate_$516",
=======
                      "src": "645:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_contract$_Admin_$134_$_t_string_memory_ptr_$returns$_t_contract$_Corporate_$573_$",
                        "typeString": "function (address,contract Admin,string memory) returns (contract Corporate)"
                      },
                      "typeName": {
                        "id": 191,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 190,
                          "name": "Corporate",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 573,
                          "src": "649:9:1"
                        },
                        "referencedDeclaration": 573,
                        "src": "649:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Corporate_$573",
>>>>>>> main
                          "typeString": "contract Corporate"
                        }
                      }
                    },
<<<<<<< HEAD
                    "id": 160,
=======
                    "id": 196,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "560:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Corporate_$516",
=======
                    "src": "645:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Corporate_$573",
>>>>>>> main
                      "typeString": "contract Corporate"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "540:49:1"
                },
                {
                  "expression": {
                    "id": 173,
=======
                  "src": "625:55:1"
                },
                {
                  "expression": {
                    "id": 209,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 162,
                        "name": "corporates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "599:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$132_storage_$",
                          "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                        }
                      },
                      "id": 164,
                      "indexExpression": {
                        "id": 163,
                        "name": "numCorps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "610:8:1",
=======
                        "id": 198,
                        "name": "corporates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "690:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$160_storage_$",
                          "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                        }
                      },
                      "id": 200,
                      "indexExpression": {
                        "id": 199,
                        "name": "numCorps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150,
                        "src": "701:8:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "599:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$132_storage",
=======
                      "src": "690:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$160_storage",
>>>>>>> main
                        "typeString": "struct CorporateFactory.corporate storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 168,
                              "name": "newCorp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 154,
                              "src": "640:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Corporate_$516",
=======
                              "id": 204,
                              "name": "newCorp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 189,
                              "src": "731:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Corporate_$573",
>>>>>>> main
                                "typeString": "contract Corporate"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
<<<<<<< HEAD
                                "typeIdentifier": "t_contract$_Corporate_$516",
                                "typeString": "contract Corporate"
                              }
                            ],
                            "id": 167,
=======
                                "typeIdentifier": "t_contract$_Corporate_$573",
                                "typeString": "contract Corporate"
                              }
                            ],
                            "id": 203,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "632:7:1",
=======
                            "src": "723:7:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 166,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "632:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 169,
=======
                              "id": 202,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "723:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 205,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "632:16:1",
=======
                          "src": "723:16:1",
>>>>>>> main
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
<<<<<<< HEAD
                          "id": 170,
                          "name": "numCorps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122,
                          "src": "650:8:1",
=======
                          "id": 206,
                          "name": "numCorps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 150,
                          "src": "741:8:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
<<<<<<< HEAD
                          "id": 171,
=======
                          "id": 207,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "660:4:1",
=======
                          "src": "751:4:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
<<<<<<< HEAD
                        "id": 165,
                        "name": "corporate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "622:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_corporate_$132_storage_ptr_$",
                          "typeString": "type(struct CorporateFactory.corporate storage pointer)"
                        }
                      },
                      "id": 172,
=======
                        "id": 201,
                        "name": "corporate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "713:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_corporate_$160_storage_ptr_$",
                          "typeString": "type(struct CorporateFactory.corporate storage pointer)"
                        }
                      },
                      "id": 208,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "622:43:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$132_memory_ptr",
                        "typeString": "struct CorporateFactory.corporate memory"
                      }
                    },
                    "src": "599:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_corporate_$132_storage",
                      "typeString": "struct CorporateFactory.corporate storage ref"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "599:66:1"
                },
                {
                  "expression": {
                    "id": 177,
=======
                      "src": "713:43:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$160_memory_ptr",
                        "typeString": "struct CorporateFactory.corporate memory"
                      }
                    },
                    "src": "690:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_corporate_$160_storage",
                      "typeString": "struct CorporateFactory.corporate storage ref"
                    }
                  },
                  "id": 210,
                  "nodeType": "ExpressionStatement",
                  "src": "690:66:1"
                },
                {
                  "expression": {
                    "id": 213,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 175,
                      "name": "numCorps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122,
                      "src": "675:8:1",
=======
                      "id": 211,
                      "name": "numCorps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "766:8:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
<<<<<<< HEAD
                      "id": 176,
=======
                      "id": 212,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "687:1:1",
=======
                      "src": "778:1:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
<<<<<<< HEAD
                    "src": "675:13:1",
=======
                    "src": "766:13:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "675:13:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "705:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 151,
                  "id": 180,
                  "nodeType": "Return",
                  "src": "698:11:1"
=======
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "766:13:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 217,
                        "name": "newCorp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 189,
                        "src": "804:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Corporate_$573",
                          "typeString": "contract Corporate"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Corporate_$573",
                          "typeString": "contract Corporate"
                        }
                      ],
                      "id": 216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "796:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 215,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "796:7:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "796:16:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 186,
                  "id": 219,
                  "nodeType": "Return",
                  "src": "789:23:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "a5102b37",
<<<<<<< HEAD
            "id": 182,
=======
            "id": 221,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 146,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 145,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 274,
                  "src": "489:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "489:12:1"
              },
              {
                "id": 148,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 147,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 285,
                  "src": "502:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "502:14:1"
              }
            ],
            "name": "createCorp",
            "nameLocation": "446:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 144,
=======
                "id": 181,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 180,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 321,
                  "src": "571:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "571:12:1"
              },
              {
                "id": 183,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 182,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 332,
                  "src": "584:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "584:14:1"
              }
            ],
            "name": "createCorp",
            "nameLocation": "528:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 179,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 143,
                  "mutability": "mutable",
                  "name": "corpName",
                  "nameLocation": "471:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 182,
                  "src": "457:22:1",
=======
                  "id": 178,
                  "mutability": "mutable",
                  "name": "corpName",
                  "nameLocation": "553:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "539:22:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 142,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "457:6:1",
=======
                    "id": 177,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "539:6:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "456:24:1"
            },
            "returnParameters": {
              "id": 151,
=======
              "src": "538:24:1"
            },
            "returnParameters": {
              "id": 186,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 150,
=======
                  "id": 185,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 182,
                  "src": "525:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "525:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
=======
                  "scope": 221,
                  "src": "607:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "607:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
>>>>>>> main
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "524:6:1"
            },
            "scope": 286,
            "src": "437:279:1",
=======
              "src": "606:9:1"
            },
            "scope": 333,
            "src": "519:300:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 198,
              "nodeType": "Block",
              "src": "811:50:1",
=======
              "id": 235,
              "nodeType": "Block",
              "src": "901:50:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 193,
                        "name": "corporates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "828:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$132_storage_$",
                          "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                        }
                      },
                      "id": 195,
                      "indexExpression": {
                        "id": 194,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 184,
                        "src": "839:2:1",
=======
                        "id": 230,
                        "name": "corporates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "918:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$160_storage_$",
                          "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                        }
                      },
                      "id": 232,
                      "indexExpression": {
                        "id": 231,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "929:2:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "828:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$132_storage",
                        "typeString": "struct CorporateFactory.corporate storage ref"
                      }
                    },
                    "id": 196,
=======
                      "src": "918:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$160_storage",
                        "typeString": "struct CorporateFactory.corporate storage ref"
                      }
                    },
                    "id": 233,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "corpAddress",
                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                    "referencedDeclaration": 127,
                    "src": "828:26:1",
=======
                    "referencedDeclaration": 155,
                    "src": "918:26:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 192,
                  "id": 197,
                  "nodeType": "Return",
                  "src": "821:33:1"
=======
                  "functionReturnParameters": 229,
                  "id": 234,
                  "nodeType": "Return",
                  "src": "911:33:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "010d6663",
<<<<<<< HEAD
            "id": 199,
=======
            "id": 236,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 187,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 186,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 274,
                  "src": "765:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "765:12:1"
              },
              {
                "id": 189,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 188,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 285,
                  "src": "778:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "778:14:1"
              }
            ],
            "name": "getCorporate",
            "nameLocation": "731:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 185,
=======
                "id": 226,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 225,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 332,
                  "src": "868:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "868:14:1"
              }
            ],
            "name": "getCorporate",
            "nameLocation": "834:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 224,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 184,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "749:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "744:7:1",
=======
                  "id": 223,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "852:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "847:7:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 183,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "744:4:1",
=======
                    "id": 222,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "847:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "743:9:1"
            },
            "returnParameters": {
              "id": 192,
=======
              "src": "846:9:1"
            },
            "returnParameters": {
              "id": 229,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 191,
=======
                  "id": 228,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 199,
                  "src": "801:7:1",
=======
                  "scope": 236,
                  "src": "891:7:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "801:7:1",
=======
                    "id": 227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "891:7:1",
>>>>>>> main
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "800:9:1"
            },
            "scope": 286,
            "src": "722:139:1",
=======
              "src": "890:9:1"
            },
            "scope": 333,
            "src": "825:126:1",
>>>>>>> main
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 214,
              "nodeType": "Block",
              "src": "937:57:1",
              "statements": [
                {
                  "expression": {
                    "id": 209,
=======
              "id": 251,
              "nodeType": "Block",
              "src": "1027:57:1",
              "statements": [
                {
                  "expression": {
                    "id": 246,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 206,
                      "name": "active",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 125,
                      "src": "947:6:1",
=======
                      "id": 243,
                      "name": "active",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153,
                      "src": "1037:6:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 208,
=======
                      "id": 245,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
<<<<<<< HEAD
                      "src": "956:7:1",
                      "subExpression": {
                        "id": 207,
                        "name": "active",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "957:6:1",
=======
                      "src": "1046:7:1",
                      "subExpression": {
                        "id": 244,
                        "name": "active",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "1047:6:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
<<<<<<< HEAD
                    "src": "947:16:1",
=======
                    "src": "1037:16:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 210,
                  "nodeType": "ExpressionStatement",
                  "src": "947:16:1"
=======
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "1037:16:1"
>>>>>>> main
                },
                {
                  "expression": {
                    "components": [
                      {
<<<<<<< HEAD
                        "id": 211,
                        "name": "active",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "980:6:1",
=======
                        "id": 248,
                        "name": "active",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "1070:6:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
<<<<<<< HEAD
                    "id": 212,
=======
                    "id": 249,
>>>>>>> main
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
<<<<<<< HEAD
                    "src": "979:8:1",
=======
                    "src": "1069:8:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 205,
                  "id": 213,
                  "nodeType": "Return",
                  "src": "973:14:1"
=======
                  "functionReturnParameters": 242,
                  "id": 250,
                  "nodeType": "Return",
                  "src": "1063:14:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "4aa2f240",
<<<<<<< HEAD
            "id": 215,
=======
            "id": 252,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 202,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 201,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 274,
                  "src": "910:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "910:12:1"
              }
            ],
            "name": "toggleContractActivation",
            "nameLocation": "876:24:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "900:2:1"
            },
            "returnParameters": {
              "id": 205,
=======
                "id": 239,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 238,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 321,
                  "src": "1000:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1000:12:1"
              }
            ],
            "name": "toggleContractActivation",
            "nameLocation": "966:24:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "990:2:1"
            },
            "returnParameters": {
              "id": 242,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 204,
=======
                  "id": 241,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 215,
                  "src": "932:4:1",
=======
                  "scope": 252,
                  "src": "1022:4:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 203,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "932:4:1",
=======
                    "id": 240,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1022:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "931:6:1"
            },
            "scope": 286,
            "src": "867:127:1",
=======
              "src": "1021:6:1"
            },
            "scope": 333,
            "src": "957:127:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 233,
              "nodeType": "Block",
              "src": "1084:45:1",
              "statements": [
                {
                  "expression": {
                    "id": 231,
=======
              "id": 272,
              "nodeType": "Block",
              "src": "1174:66:1",
              "statements": [
                {
                  "expression": {
                    "id": 268,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
<<<<<<< HEAD
                          "id": 226,
                          "name": "corporates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120,
                          "src": "1094:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$132_storage_$",
                            "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                          }
                        },
                        "id": 228,
                        "indexExpression": {
                          "id": 227,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 217,
                          "src": "1105:2:1",
=======
                          "id": 263,
                          "name": "corporates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 148,
                          "src": "1184:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$160_storage_$",
                            "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                          }
                        },
                        "id": 265,
                        "indexExpression": {
                          "id": 264,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 254,
                          "src": "1195:2:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                        "src": "1094:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_corporate_$132_storage",
                          "typeString": "struct CorporateFactory.corporate storage ref"
                        }
                      },
                      "id": 229,
=======
                        "src": "1184:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_corporate_$160_storage",
                          "typeString": "struct CorporateFactory.corporate storage ref"
                        }
                      },
                      "id": 266,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "valid",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 131,
                      "src": "1094:20:1",
=======
                      "referencedDeclaration": 159,
                      "src": "1184:20:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
<<<<<<< HEAD
                      "id": 230,
=======
                      "id": 267,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "1117:5:1",
=======
                      "src": "1207:5:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
<<<<<<< HEAD
                    "src": "1094:28:1",
=======
                    "src": "1184:28:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "1094:28:1"
=======
                  "id": 269,
                  "nodeType": "ExpressionStatement",
                  "src": "1184:28:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1229:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 262,
                  "id": 271,
                  "nodeType": "Return",
                  "src": "1222:11:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "1f2e4f06",
<<<<<<< HEAD
            "id": 234,
=======
            "id": 273,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 220,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 219,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 274,
                  "src": "1042:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1042:12:1"
              },
              {
                "id": 222,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 221,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 285,
                  "src": "1055:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1055:14:1"
              }
            ],
            "name": "disableCorporate",
            "nameLocation": "1009:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 218,
=======
                "id": 257,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 256,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 321,
                  "src": "1132:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1132:12:1"
              },
              {
                "id": 259,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 258,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 332,
                  "src": "1145:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1145:14:1"
              }
            ],
            "name": "disableCorporate",
            "nameLocation": "1099:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 255,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 217,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1031:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "1026:7:1",
=======
                  "id": 254,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1121:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "1116:7:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 216,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1026:4:1",
=======
                    "id": 253,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1116:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1025:9:1"
            },
            "returnParameters": {
              "id": 225,
=======
              "src": "1115:9:1"
            },
            "returnParameters": {
              "id": 262,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 224,
=======
                  "id": 261,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 234,
                  "src": "1079:4:1",
=======
                  "scope": 273,
                  "src": "1169:4:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 223,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1079:4:1",
=======
                    "id": 260,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1169:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1078:6:1"
            },
            "scope": 286,
            "src": "1000:129:1",
=======
              "src": "1168:6:1"
            },
            "scope": 333,
            "src": "1090:150:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 261,
              "nodeType": "Block",
              "src": "1216:129:1",
=======
              "id": 300,
              "nodeType": "Block",
              "src": "1327:129:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 252,
=======
                        "id": 291,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
<<<<<<< HEAD
                              "id": 244,
                              "name": "corporates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 120,
                              "src": "1234:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$132_storage_$",
                                "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                              }
                            },
                            "id": 246,
                            "indexExpression": {
                              "id": 245,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 236,
                              "src": "1245:2:1",
=======
                              "id": 283,
                              "name": "corporates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 148,
                              "src": "1345:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$160_storage_$",
                                "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                              }
                            },
                            "id": 285,
                            "indexExpression": {
                              "id": 284,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 275,
                              "src": "1356:2:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "1234:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_corporate_$132_storage",
                              "typeString": "struct CorporateFactory.corporate storage ref"
                            }
                          },
                          "id": 247,
=======
                            "src": "1345:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_corporate_$160_storage",
                              "typeString": "struct CorporateFactory.corporate storage ref"
                            }
                          },
                          "id": 286,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "corpAddress",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 127,
                          "src": "1234:26:1",
=======
                          "referencedDeclaration": 155,
                          "src": "1345:26:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
<<<<<<< HEAD
                              "id": 250,
=======
                              "id": 289,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "1272:1:1",
=======
                              "src": "1383:1:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
<<<<<<< HEAD
                            "id": 249,
=======
                            "id": 288,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "1264:7:1",
=======
                            "src": "1375:7:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 248,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1264:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 251,
=======
                              "id": 287,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1375:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 290,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "1264:10:1",
=======
                          "src": "1375:10:1",
>>>>>>> main
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "1234:40:1",
=======
                        "src": "1345:40:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420612076616c696420636f72706f72617465",
<<<<<<< HEAD
                        "id": 253,
=======
                        "id": 292,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "1276:23:1",
=======
                        "src": "1387:23:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f6bc05d6cfec2f3d11cc140380ae93e4894c4ff78d29d480116a9b54f690ed81",
                          "typeString": "literal_string \"Not a valid corporate\""
                        },
                        "value": "Not a valid corporate"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f6bc05d6cfec2f3d11cc140380ae93e4894c4ff78d29d480116a9b54f690ed81",
                          "typeString": "literal_string \"Not a valid corporate\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 243,
=======
                      "id": 282,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "1226:7:1",
=======
                      "src": "1337:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 254,
=======
                    "id": 293,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1226:74:1",
=======
                    "src": "1337:74:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 255,
                  "nodeType": "ExpressionStatement",
                  "src": "1226:74:1"
=======
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "1337:74:1"
>>>>>>> main
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 256,
                        "name": "corporates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "1317:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$132_storage_$",
                          "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                        }
                      },
                      "id": 258,
                      "indexExpression": {
                        "id": 257,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "1328:2:1",
=======
                        "id": 295,
                        "name": "corporates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "1428:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$160_storage_$",
                          "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                        }
                      },
                      "id": 297,
                      "indexExpression": {
                        "id": 296,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "1439:2:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "1317:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$132_storage",
                        "typeString": "struct CorporateFactory.corporate storage ref"
                      }
                    },
                    "id": 259,
=======
                      "src": "1428:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$160_storage",
                        "typeString": "struct CorporateFactory.corporate storage ref"
                      }
                    },
                    "id": 298,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "valid",
                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                    "referencedDeclaration": 131,
                    "src": "1317:20:1",
=======
                    "referencedDeclaration": 159,
                    "src": "1428:20:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 242,
                  "id": 260,
                  "nodeType": "Return",
                  "src": "1310:27:1"
=======
                  "functionReturnParameters": 281,
                  "id": 299,
                  "nodeType": "Return",
                  "src": "1421:27:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "dad15402",
<<<<<<< HEAD
            "id": 262,
=======
            "id": 301,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 239,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 238,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 285,
                  "src": "1187:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1187:14:1"
              }
            ],
            "name": "checkIfCorporateValid",
            "nameLocation": "1144:21:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 237,
=======
                "id": 278,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 277,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 332,
                  "src": "1298:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1298:14:1"
              }
            ],
            "name": "checkIfCorporateValid",
            "nameLocation": "1255:21:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 276,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 236,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1171:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "1166:7:1",
=======
                  "id": 275,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1282:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 301,
                  "src": "1277:7:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 235,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1166:4:1",
=======
                    "id": 274,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1277:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1165:9:1"
            },
            "returnParameters": {
              "id": 242,
=======
              "src": "1276:9:1"
            },
            "returnParameters": {
              "id": 281,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 241,
=======
                  "id": 280,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 262,
                  "src": "1211:4:1",
=======
                  "scope": 301,
                  "src": "1322:4:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 240,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1211:4:1",
=======
                    "id": 279,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1322:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1210:6:1"
            },
            "scope": 286,
            "src": "1135:210:1",
=======
              "src": "1321:6:1"
            },
            "scope": 333,
            "src": "1246:210:1",
>>>>>>> main
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 273,
              "nodeType": "Block",
              "src": "1377:99:1",
=======
              "id": 320,
              "nodeType": "Block",
              "src": "1488:137:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
<<<<<<< HEAD
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 268,
=======
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 315,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "expression": {
                            "id": 265,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1395:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 266,
=======
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 307,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
<<<<<<< HEAD
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1395:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 267,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "1409:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1395:19:1",
=======
                          "leftExpression": {
                            "expression": {
                              "id": 304,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1506:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1506:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 306,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "1520:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1506:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 308,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1529:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 309,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1529:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 312,
                                "name": "admin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 143,
                                "src": "1551:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Admin_$134",
                                  "typeString": "contract Admin"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Admin_$134",
                                  "typeString": "contract Admin"
                                }
                              ],
                              "id": 311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1543:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 310,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1543:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1543:14:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1529:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1506:51:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
<<<<<<< HEAD
                        "hexValue": "4f6e6c7920746865206f776e65722063616e2061636365737320746869732066756e6374696f6e",
                        "id": 269,
=======
                        "hexValue": "4f6e6c7920746865206f776e65722f61646d696e2063616e2061636365737320746869732066756e6374696f6e",
                        "id": 316,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "1416:41:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d16f59b504098a079530c74a740fd9528074bf9303890ee5d92c6cda0f420382",
                          "typeString": "literal_string \"Only the owner can access this function\""
                        },
                        "value": "Only the owner can access this function"
=======
                        "src": "1559:47:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9117372dee0cc0d2de362cb86d76bf0d641de1fdff920d9111bc207da94e8744",
                          "typeString": "literal_string \"Only the owner/admin can access this function\""
                        },
                        "value": "Only the owner/admin can access this function"
>>>>>>> main
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_stringliteral_d16f59b504098a079530c74a740fd9528074bf9303890ee5d92c6cda0f420382",
                          "typeString": "literal_string \"Only the owner can access this function\""
                        }
                      ],
                      "id": 264,
=======
                          "typeIdentifier": "t_stringliteral_9117372dee0cc0d2de362cb86d76bf0d641de1fdff920d9111bc207da94e8744",
                          "typeString": "literal_string \"Only the owner/admin can access this function\""
                        }
                      ],
                      "id": 303,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "1387:7:1",
=======
                      "src": "1498:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 270,
=======
                    "id": 317,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1387:71:1",
=======
                    "src": "1498:109:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "1387:71:1"
                },
                {
                  "id": 272,
                  "nodeType": "PlaceholderStatement",
                  "src": "1468:1:1"
                }
              ]
            },
            "id": 274,
            "name": "permissioned",
            "nameLocation": "1364:12:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1377:0:1"
            },
            "src": "1355:121:1",
=======
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "1498:109:1"
                },
                {
                  "id": 319,
                  "nodeType": "PlaceholderStatement",
                  "src": "1617:1:1"
                }
              ]
            },
            "id": 321,
            "name": "permissioned",
            "nameLocation": "1475:12:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1488:0:1"
            },
            "src": "1466:159:1",
>>>>>>> main
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 284,
              "nodeType": "Block",
              "src": "1505:80:1",
=======
              "id": 331,
              "nodeType": "Block",
              "src": "1654:80:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
<<<<<<< HEAD
                        "id": 279,
=======
                        "id": 326,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 277,
                          "name": "active",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 125,
                          "src": "1523:6:1",
=======
                          "id": 324,
                          "name": "active",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153,
                          "src": "1672:6:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
<<<<<<< HEAD
                          "id": 278,
=======
                          "id": 325,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "1533:4:1",
=======
                          "src": "1682:4:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
<<<<<<< HEAD
                        "src": "1523:14:1",
=======
                        "src": "1672:14:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e7472616374206e6f206c6f6e67657220616374697665",
<<<<<<< HEAD
                        "id": 280,
=======
                        "id": 327,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "1539:27:1",
=======
                        "src": "1688:27:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f58632cc2fd82b679e2eb5e7970f18e723cc77db983190e019e39c32cbac431",
                          "typeString": "literal_string \"Contract no longer active\""
                        },
                        "value": "Contract no longer active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f58632cc2fd82b679e2eb5e7970f18e723cc77db983190e019e39c32cbac431",
                          "typeString": "literal_string \"Contract no longer active\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 276,
=======
                      "id": 323,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "1515:7:1",
=======
                      "src": "1664:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 281,
=======
                    "id": 328,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1515:52:1",
=======
                    "src": "1664:52:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "1515:52:1"
                },
                {
                  "id": 283,
                  "nodeType": "PlaceholderStatement",
                  "src": "1577:1:1"
                }
              ]
            },
            "id": 285,
            "name": "activeContract",
            "nameLocation": "1491:14:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1505:0:1"
            },
            "src": "1482:103:1",
=======
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "1664:52:1"
                },
                {
                  "id": 330,
                  "nodeType": "PlaceholderStatement",
                  "src": "1726:1:1"
                }
              ]
            },
            "id": 332,
            "name": "activeContract",
            "nameLocation": "1640:14:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1654:0:1"
            },
            "src": "1631:103:1",
>>>>>>> main
            "virtual": false,
            "visibility": "internal"
          }
        ],
<<<<<<< HEAD
        "scope": 658,
        "src": "61:1526:1",
=======
        "scope": 726,
        "src": "83:1653:1",
>>>>>>> main
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
<<<<<<< HEAD
          657
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 516,
        "linearizedBaseContracts": [
          516
        ],
        "name": "Corporate",
        "nameLocation": "1598:9:1",
=======
          725
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 573,
        "linearizedBaseContracts": [
          573
        ],
        "name": "Corporate",
        "nameLocation": "1747:9:1",
>>>>>>> main
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "89165e40",
<<<<<<< HEAD
            "id": 288,
            "mutability": "mutable",
            "name": "creator_",
            "nameLocation": "1629:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "1614:23:1",
=======
            "id": 335,
            "mutability": "mutable",
            "name": "creator_",
            "nameLocation": "1778:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "1763:23:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 287,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1614:7:1",
=======
              "id": 334,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1763:7:1",
>>>>>>> main
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
<<<<<<< HEAD
            "id": 290,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "1685:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "1670:20:1",
=======
            "id": 337,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "1834:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "1819:20:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 289,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1670:7:1",
=======
              "id": 336,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1819:7:1",
>>>>>>> main
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "functionSelector": "34929e9a",
            "id": 292,
            "mutability": "mutable",
            "name": "corporate_id",
            "nameLocation": "1751:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "1739:24:1",
=======
            "functionSelector": "f851a440",
            "id": 340,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "1901:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "1888:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Admin_$134",
              "typeString": "contract Admin"
            },
            "typeName": {
              "id": 339,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 338,
                "name": "Admin",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 134,
                "src": "1888:5:1"
              },
              "referencedDeclaration": 134,
              "src": "1888:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Admin_$134",
                "typeString": "contract Admin"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "34929e9a",
            "id": 342,
            "mutability": "mutable",
            "name": "corporate_id",
            "nameLocation": "1924:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "1912:24:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 291,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1739:4:1",
=======
              "id": 341,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1912:4:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8ba4d864",
<<<<<<< HEAD
            "id": 294,
            "mutability": "mutable",
            "name": "corporate_name_",
            "nameLocation": "1783:15:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "1769:29:1",
=======
            "id": 344,
            "mutability": "mutable",
            "name": "corporate_name_",
            "nameLocation": "1956:15:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "1942:29:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 293,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1769:6:1",
=======
              "id": 343,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1942:6:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "869080bf",
<<<<<<< HEAD
            "id": 299,
            "mutability": "mutable",
            "name": "subsidiaries",
            "nameLocation": "1859:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "1828:43:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$314_storage_$",
              "typeString": "mapping(address => struct Corporate.sub)"
            },
            "typeName": {
              "id": 298,
              "keyType": {
                "id": 295,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1836:7:1",
=======
            "id": 349,
            "mutability": "mutable",
            "name": "subsidiaries",
            "nameLocation": "2032:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "2001:43:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$364_storage_$",
              "typeString": "mapping(address => struct Corporate.sub)"
            },
            "typeName": {
              "id": 348,
              "keyType": {
                "id": 345,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2009:7:1",
>>>>>>> main
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "1828:23:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$314_storage_$",
                "typeString": "mapping(address => struct Corporate.sub)"
              },
              "valueType": {
                "id": 297,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 296,
                  "name": "sub",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 314,
                  "src": "1847:3:1"
                },
                "referencedDeclaration": 314,
                "src": "1847:3:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_sub_$314_storage_ptr",
=======
              "src": "2001:23:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$364_storage_$",
                "typeString": "mapping(address => struct Corporate.sub)"
              },
              "valueType": {
                "id": 347,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 346,
                  "name": "sub",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 364,
                  "src": "2020:3:1"
                },
                "referencedDeclaration": 364,
                "src": "2020:3:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_sub_$364_storage_ptr",
>>>>>>> main
                  "typeString": "struct Corporate.sub"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f8a64f9a",
<<<<<<< HEAD
            "id": 302,
            "mutability": "mutable",
            "name": "subs",
            "nameLocation": "1939:4:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "1922:21:1",
=======
            "id": 352,
            "mutability": "mutable",
            "name": "subs",
            "nameLocation": "2112:4:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "2095:21:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
<<<<<<< HEAD
                "id": 300,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1922:7:1",
=======
                "id": 350,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2095:7:1",
>>>>>>> main
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
<<<<<<< HEAD
              "id": 301,
              "nodeType": "ArrayTypeName",
              "src": "1922:9:1",
=======
              "id": 351,
              "nodeType": "ArrayTypeName",
              "src": "2095:9:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "93e59dc1",
<<<<<<< HEAD
            "id": 305,
            "mutability": "mutable",
            "name": "whitelist",
            "nameLocation": "2030:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "2013:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Whitelist_$1298",
              "typeString": "contract Whitelist"
            },
            "typeName": {
              "id": 304,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 303,
                "name": "Whitelist",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1298,
                "src": "2013:9:1"
              },
              "referencedDeclaration": 1298,
              "src": "2013:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Whitelist_$1298",
=======
            "id": 355,
            "mutability": "mutable",
            "name": "whitelist",
            "nameLocation": "2203:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "2186:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Whitelist_$1425",
              "typeString": "contract Whitelist"
            },
            "typeName": {
              "id": 354,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 353,
                "name": "Whitelist",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1425,
                "src": "2186:9:1"
              },
              "referencedDeclaration": 1425,
              "src": "2186:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Whitelist_$1425",
>>>>>>> main
                "typeString": "contract Whitelist"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 307,
            "mutability": "mutable",
            "name": "valid",
            "nameLocation": "2092:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "2087:10:1",
=======
            "id": 357,
            "mutability": "mutable",
            "name": "valid",
            "nameLocation": "2265:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "2260:10:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 306,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2087:4:1",
=======
              "id": 356,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2260:4:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Corporate.sub",
<<<<<<< HEAD
            "id": 314,
            "members": [
              {
                "constant": false,
                "id": 309,
                "mutability": "mutable",
                "name": "subAddress",
                "nameLocation": "2172:10:1",
                "nodeType": "VariableDeclaration",
                "scope": 314,
                "src": "2164:18:1",
=======
            "id": 364,
            "members": [
              {
                "constant": false,
                "id": 359,
                "mutability": "mutable",
                "name": "subAddress",
                "nameLocation": "2345:10:1",
                "nodeType": "VariableDeclaration",
                "scope": 364,
                "src": "2337:18:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 308,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2164:7:1",
=======
                  "id": 358,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2337:7:1",
>>>>>>> main
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 311,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "2197:2:1",
                "nodeType": "VariableDeclaration",
                "scope": 314,
                "src": "2192:7:1",
=======
                "id": 361,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "2370:2:1",
                "nodeType": "VariableDeclaration",
                "scope": 364,
                "src": "2365:7:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 310,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2192:4:1",
=======
                  "id": 360,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2365:4:1",
>>>>>>> main
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 313,
                "mutability": "mutable",
                "name": "valid",
                "nameLocation": "2214:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 314,
                "src": "2209:10:1",
=======
                "id": 363,
                "mutability": "mutable",
                "name": "valid",
                "nameLocation": "2387:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 364,
                "src": "2382:10:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 312,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2209:4:1",
=======
                  "id": 362,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2382:4:1",
>>>>>>> main
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "sub",
<<<<<<< HEAD
            "nameLocation": "2150:3:1",
            "nodeType": "StructDefinition",
            "scope": 516,
            "src": "2143:83:1",
=======
            "nameLocation": "2323:3:1",
            "nodeType": "StructDefinition",
            "scope": 573,
            "src": "2316:83:1",
>>>>>>> main
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 338,
              "nodeType": "Block",
              "src": "2357:121:1",
              "statements": [
                {
                  "expression": {
                    "id": 323,
=======
              "id": 395,
              "nodeType": "Block",
              "src": "2544:145:1",
              "statements": [
                {
                  "expression": {
                    "id": 376,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 321,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 290,
                      "src": "2367:5:1",
=======
                      "id": 374,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 337,
                      "src": "2554:5:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 322,
                      "name": "owner_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 316,
                      "src": "2375:6:1",
=======
                      "id": 375,
                      "name": "owner_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 366,
                      "src": "2562:6:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "src": "2367:14:1",
=======
                    "src": "2554:14:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "2367:14:1"
                },
                {
                  "expression": {
                    "id": 328,
=======
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "2554:14:1"
                },
                {
                  "expression": {
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 378,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 340,
                      "src": "2578:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Admin_$134",
                        "typeString": "contract Admin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 379,
                      "name": "admin_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 369,
                      "src": "2586:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Admin_$134",
                        "typeString": "contract Admin"
                      }
                    },
                    "src": "2578:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Admin_$134",
                      "typeString": "contract Admin"
                    }
                  },
                  "id": 381,
                  "nodeType": "ExpressionStatement",
                  "src": "2578:14:1"
                },
                {
                  "expression": {
                    "id": 385,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 325,
                      "name": "creator_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 288,
                      "src": "2391:8:1",
=======
                      "id": 382,
                      "name": "creator_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 335,
                      "src": "2602:8:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
<<<<<<< HEAD
                        "id": 326,
=======
                        "id": 383,
>>>>>>> main
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                        "src": "2402:3:1",
=======
                        "src": "2613:3:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
<<<<<<< HEAD
                      "id": 327,
=======
                      "id": 384,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "src": "2402:10:1",
=======
                      "src": "2613:10:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "src": "2391:21:1",
=======
                    "src": "2602:21:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "2391:21:1"
                },
                {
                  "expression": {
                    "id": 332,
=======
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "2602:21:1"
                },
                {
                  "expression": {
                    "id": 389,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 330,
                      "name": "corporate_name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 294,
                      "src": "2422:15:1",
=======
                      "id": 387,
                      "name": "corporate_name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 344,
                      "src": "2633:15:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 331,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 318,
                      "src": "2440:4:1",
=======
                      "id": 388,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 371,
                      "src": "2651:4:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "2422:22:1",
=======
                    "src": "2633:22:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
<<<<<<< HEAD
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "2422:22:1"
                },
                {
                  "expression": {
                    "id": 336,
=======
                  "id": 390,
                  "nodeType": "ExpressionStatement",
                  "src": "2633:22:1"
                },
                {
                  "expression": {
                    "id": 393,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 334,
                      "name": "valid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 307,
                      "src": "2455:5:1",
=======
                      "id": 391,
                      "name": "valid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 357,
                      "src": "2666:5:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
<<<<<<< HEAD
                      "id": 335,
=======
                      "id": 392,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "2463:4:1",
=======
                      "src": "2674:4:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
<<<<<<< HEAD
                    "src": "2455:12:1",
=======
                    "src": "2666:12:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "2455:12:1"
                }
              ]
            },
            "id": 339,
=======
                  "id": 394,
                  "nodeType": "ExpressionStatement",
                  "src": "2666:12:1"
                }
              ]
            },
            "id": 396,
>>>>>>> main
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 319,
=======
              "id": 372,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 316,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "2330:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 339,
                  "src": "2322:14:1",
=======
                  "id": 366,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "2503:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 396,
                  "src": "2495:14:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 315,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2322:7:1",
=======
                    "id": 365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2495:7:1",
>>>>>>> main
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 318,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "2352:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 339,
                  "src": "2338:18:1",
=======
                  "id": 369,
                  "mutability": "mutable",
                  "name": "admin_",
                  "nameLocation": "2517:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 396,
                  "src": "2511:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Admin_$134",
                    "typeString": "contract Admin"
                  },
                  "typeName": {
                    "id": 368,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 367,
                      "name": "Admin",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 134,
                      "src": "2511:5:1"
                    },
                    "referencedDeclaration": 134,
                    "src": "2511:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Admin_$134",
                      "typeString": "contract Admin"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 371,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "2539:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 396,
                  "src": "2525:18:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 317,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2338:6:1",
=======
                    "id": 370,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2525:6:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2321:36:1"
            },
            "returnParameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2357:0:1"
            },
            "scope": 516,
            "src": "2310:168:1",
=======
              "src": "2494:50:1"
            },
            "returnParameters": {
              "id": 373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2544:0:1"
            },
            "scope": 573,
            "src": "2483:206:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 400,
              "nodeType": "Block",
              "src": "2657:378:1",
=======
              "id": 457,
              "nodeType": "Block",
              "src": "2871:370:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 358,
=======
                        "id": 415,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "arguments": [
                            {
                              "id": 352,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 341,
                              "src": "2760:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 351,
                            "name": "getSubContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 417,
                            "src": "2745:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2745:18:1",
                          "tryCall": false,
=======
                          "baseExpression": {
                            "id": 408,
                            "name": "subs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 352,
                            "src": "2959:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 410,
                          "indexExpression": {
                            "id": 409,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 398,
                            "src": "2964:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2959:8:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
<<<<<<< HEAD
                        "operator": "!=",
=======
                        "operator": "==",
>>>>>>> main
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
<<<<<<< HEAD
                              "id": 356,
=======
                              "id": 413,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "2775:1:1",
=======
                              "src": "2979:1:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
<<<<<<< HEAD
                            "id": 355,
=======
                            "id": 412,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "2767:7:1",
=======
                            "src": "2971:7:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 354,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2767:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 357,
=======
                              "id": 411,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2971:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 414,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "2767:10:1",
=======
                          "src": "2971:10:1",
>>>>>>> main
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "2745:32:1",
=======
                        "src": "2959:22:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "id": 350,
=======
                      "id": 407,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "2737:7:1",
=======
                      "src": "2951:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 359,
=======
                    "id": 416,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2737:41:1",
=======
                    "src": "2951:31:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "2737:41:1"
                },
                {
                  "assignments": [
                    363
=======
                  "id": 417,
                  "nodeType": "ExpressionStatement",
                  "src": "2951:31:1"
                },
                {
                  "assignments": [
                    420
>>>>>>> main
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 363,
                      "mutability": "mutable",
                      "name": "newSub",
                      "nameLocation": "2799:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 400,
                      "src": "2788:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Subsidiary_$657",
                        "typeString": "contract Subsidiary"
                      },
                      "typeName": {
                        "id": 362,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 361,
                          "name": "Subsidiary",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 657,
                          "src": "2788:10:1"
                        },
                        "referencedDeclaration": 657,
                        "src": "2788:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Subsidiary_$657",
=======
                      "id": 420,
                      "mutability": "mutable",
                      "name": "newSub",
                      "nameLocation": "3003:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 457,
                      "src": "2992:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Subsidiary_$725",
                        "typeString": "contract Subsidiary"
                      },
                      "typeName": {
                        "id": 419,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 418,
                          "name": "Subsidiary",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 725,
                          "src": "2992:10:1"
                        },
                        "referencedDeclaration": 725,
                        "src": "2992:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Subsidiary_$725",
>>>>>>> main
                          "typeString": "contract Subsidiary"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 372,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 369,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2831:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Corporate_$516",
                              "typeString": "contract Corporate"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Corporate_$516",
                              "typeString": "contract Corporate"
                            }
                          ],
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2823:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 367,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2823:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2823:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
=======
                  "id": 426,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 424,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "3027:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Corporate_$573",
                          "typeString": "contract Corporate"
>>>>>>> main
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 366,
=======
                          "typeIdentifier": "t_contract$_Corporate_$573",
                          "typeString": "contract Corporate"
                        }
                      ],
                      "id": 423,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
<<<<<<< HEAD
                      "src": "2808:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Subsidiary_$657_$",
                        "typeString": "function (address) returns (contract Subsidiary)"
                      },
                      "typeName": {
                        "id": 365,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 364,
                          "name": "Subsidiary",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 657,
                          "src": "2812:10:1"
                        },
                        "referencedDeclaration": 657,
                        "src": "2812:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Subsidiary_$657",
=======
                      "src": "3012:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Corporate_$573_$returns$_t_contract$_Subsidiary_$725_$",
                        "typeString": "function (contract Corporate) returns (contract Subsidiary)"
                      },
                      "typeName": {
                        "id": 422,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 421,
                          "name": "Subsidiary",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 725,
                          "src": "3016:10:1"
                        },
                        "referencedDeclaration": 725,
                        "src": "3016:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Subsidiary_$725",
>>>>>>> main
                          "typeString": "contract Subsidiary"
                        }
                      }
                    },
<<<<<<< HEAD
                    "id": 371,
=======
                    "id": 425,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2808:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Subsidiary_$657",
=======
                    "src": "3012:20:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Subsidiary_$725",
>>>>>>> main
                      "typeString": "contract Subsidiary"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "2788:49:1"
=======
                  "src": "2992:40:1"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 378,
                            "name": "newSub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 363,
                            "src": "2865:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Subsidiary_$657",
=======
                            "id": 432,
                            "name": "newSub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 420,
                            "src": "3060:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Subsidiary_$725",
>>>>>>> main
                              "typeString": "contract Subsidiary"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
<<<<<<< HEAD
                              "typeIdentifier": "t_contract$_Subsidiary_$657",
                              "typeString": "contract Subsidiary"
                            }
                          ],
                          "id": 377,
=======
                              "typeIdentifier": "t_contract$_Subsidiary_$725",
                              "typeString": "contract Subsidiary"
                            }
                          ],
                          "id": 431,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "2857:7:1",
=======
                          "src": "3052:7:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 376,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2857:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 379,
=======
                            "id": 430,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3052:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 433,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "2857:15:1",
=======
                        "src": "3052:15:1",
>>>>>>> main
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 373,
                        "name": "subs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "2847:4:1",
=======
                        "id": 427,
                        "name": "subs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "3042:4:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
<<<<<<< HEAD
                      "id": 375,
=======
                      "id": 429,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "src": "2847:9:1",
=======
                      "src": "3042:9:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
<<<<<<< HEAD
                    "id": 380,
=======
                    "id": 434,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2847:26:1",
=======
                    "src": "3042:26:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 381,
                  "nodeType": "ExpressionStatement",
                  "src": "2847:26:1"
                },
                {
                  "expression": {
                    "id": 396,
=======
                  "id": 435,
                  "nodeType": "ExpressionStatement",
                  "src": "3042:26:1"
                },
                {
                  "expression": {
                    "id": 450,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 382,
                        "name": "subsidiaries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "2919:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$314_storage_$",
                          "typeString": "mapping(address => struct Corporate.sub storage ref)"
                        }
                      },
                      "id": 387,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 385,
                            "name": "newSub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 363,
                            "src": "2940:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Subsidiary_$657",
=======
                        "id": 436,
                        "name": "subsidiaries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 349,
                        "src": "3114:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$364_storage_$",
                          "typeString": "mapping(address => struct Corporate.sub storage ref)"
                        }
                      },
                      "id": 441,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 439,
                            "name": "newSub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 420,
                            "src": "3135:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Subsidiary_$725",
>>>>>>> main
                              "typeString": "contract Subsidiary"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
<<<<<<< HEAD
                              "typeIdentifier": "t_contract$_Subsidiary_$657",
                              "typeString": "contract Subsidiary"
                            }
                          ],
                          "id": 384,
=======
                              "typeIdentifier": "t_contract$_Subsidiary_$725",
                              "typeString": "contract Subsidiary"
                            }
                          ],
                          "id": 438,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "2932:7:1",
=======
                          "src": "3127:7:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 383,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2932:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 386,
=======
                            "id": 437,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3127:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 440,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "2932:15:1",
=======
                        "src": "3127:15:1",
>>>>>>> main
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "2919:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_sub_$314_storage",
=======
                      "src": "3114:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_sub_$364_storage",
>>>>>>> main
                        "typeString": "struct Corporate.sub storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 391,
                              "name": "newSub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 363,
                              "src": "2963:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Subsidiary_$657",
=======
                              "id": 445,
                              "name": "newSub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 420,
                              "src": "3158:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Subsidiary_$725",
>>>>>>> main
                                "typeString": "contract Subsidiary"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
<<<<<<< HEAD
                                "typeIdentifier": "t_contract$_Subsidiary_$657",
                                "typeString": "contract Subsidiary"
                              }
                            ],
                            "id": 390,
=======
                                "typeIdentifier": "t_contract$_Subsidiary_$725",
                                "typeString": "contract Subsidiary"
                              }
                            ],
                            "id": 444,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "2955:7:1",
=======
                            "src": "3150:7:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 389,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2955:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 392,
=======
                              "id": 443,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3150:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 446,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "2955:15:1",
=======
                          "src": "3150:15:1",
>>>>>>> main
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
<<<<<<< HEAD
                          "id": 393,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 341,
                          "src": "2972:2:1",
=======
                          "id": 447,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 398,
                          "src": "3167:2:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
<<<<<<< HEAD
                          "id": 394,
=======
                          "id": 448,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "2976:4:1",
=======
                          "src": "3171:4:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
<<<<<<< HEAD
                        "id": 388,
                        "name": "sub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 314,
                        "src": "2951:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_sub_$314_storage_ptr_$",
                          "typeString": "type(struct Corporate.sub storage pointer)"
                        }
                      },
                      "id": 395,
=======
                        "id": 442,
                        "name": "sub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 364,
                        "src": "3146:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_sub_$364_storage_ptr_$",
                          "typeString": "type(struct Corporate.sub storage pointer)"
                        }
                      },
                      "id": 449,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "2951:30:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_sub_$314_memory_ptr",
                        "typeString": "struct Corporate.sub memory"
                      }
                    },
                    "src": "2919:62:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_sub_$314_storage",
                      "typeString": "struct Corporate.sub storage ref"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "2919:62:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3024:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 349,
                  "id": 399,
                  "nodeType": "Return",
                  "src": "3017:11:1"
=======
                      "src": "3146:30:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_sub_$364_memory_ptr",
                        "typeString": "struct Corporate.sub memory"
                      }
                    },
                    "src": "3114:62:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_sub_$364_storage",
                      "typeString": "struct Corporate.sub storage ref"
                    }
                  },
                  "id": 451,
                  "nodeType": "ExpressionStatement",
                  "src": "3114:62:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 454,
                        "name": "newSub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 420,
                        "src": "3227:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Subsidiary_$725",
                          "typeString": "contract Subsidiary"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Subsidiary_$725",
                          "typeString": "contract Subsidiary"
                        }
                      ],
                      "id": 453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3219:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 452,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3219:7:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3219:15:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 406,
                  "id": 456,
                  "nodeType": "Return",
                  "src": "3212:22:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "805f4202",
<<<<<<< HEAD
            "id": 401,
=======
            "id": 458,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 344,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 343,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 505,
                  "src": "2617:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2617:12:1"
              },
              {
                "id": 346,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 345,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 515,
                  "src": "2630:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2630:13:1"
              }
            ],
            "name": "createSub",
            "nameLocation": "2590:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 342,
=======
                "id": 401,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 400,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 562,
                  "src": "2828:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2828:12:1"
              },
              {
                "id": 403,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 402,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "2841:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2841:13:1"
              }
            ],
            "name": "createSub",
            "nameLocation": "2801:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 399,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 341,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2605:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 401,
                  "src": "2600:7:1",
=======
                  "id": 398,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2816:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 458,
                  "src": "2811:7:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 340,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2600:4:1",
=======
                    "id": 397,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2811:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2599:9:1"
            },
            "returnParameters": {
              "id": 349,
=======
              "src": "2810:9:1"
            },
            "returnParameters": {
              "id": 406,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 348,
=======
                  "id": 405,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 401,
                  "src": "2652:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 347,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2652:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
=======
                  "scope": 458,
                  "src": "2863:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2863:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
>>>>>>> main
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2651:6:1"
            },
            "scope": 516,
            "src": "2581:454:1",
=======
              "src": "2862:9:1"
            },
            "scope": 573,
            "src": "2792:449:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 416,
              "nodeType": "Block",
              "src": "3168:32:1",
=======
              "id": 471,
              "nodeType": "Block",
              "src": "3361:32:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
<<<<<<< HEAD
                      "id": 412,
                      "name": "subs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "3185:4:1",
=======
                      "id": 467,
                      "name": "subs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 352,
                      "src": "3378:4:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
<<<<<<< HEAD
                    "id": 414,
                    "indexExpression": {
                      "id": 413,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 403,
                      "src": "3190:2:1",
=======
                    "id": 469,
                    "indexExpression": {
                      "id": 468,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 460,
                      "src": "3383:2:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "3185:8:1",
=======
                    "src": "3378:8:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 411,
                  "id": 415,
                  "nodeType": "Return",
                  "src": "3178:15:1"
=======
                  "functionReturnParameters": 466,
                  "id": 470,
                  "nodeType": "Return",
                  "src": "3371:15:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "f4111496",
<<<<<<< HEAD
            "id": 417,
=======
            "id": 472,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 406,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 405,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 505,
                  "src": "3123:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3123:12:1"
              },
              {
                "id": 408,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 407,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 515,
                  "src": "3136:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3136:13:1"
              }
            ],
            "name": "getSubContract",
            "nameLocation": "3087:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 404,
=======
                "id": 463,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 462,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "3329:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3329:13:1"
              }
            ],
            "name": "getSubContract",
            "nameLocation": "3293:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 461,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 403,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3107:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 417,
                  "src": "3102:7:1",
=======
                  "id": 460,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3313:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 472,
                  "src": "3308:7:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 402,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3102:4:1",
=======
                    "id": 459,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3308:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3101:9:1"
            },
            "returnParameters": {
              "id": 411,
=======
              "src": "3307:9:1"
            },
            "returnParameters": {
              "id": 466,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 410,
=======
                  "id": 465,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 417,
                  "src": "3158:7:1",
=======
                  "scope": 472,
                  "src": "3351:7:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 409,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3158:7:1",
=======
                    "id": 464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3351:7:1",
>>>>>>> main
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3157:9:1"
            },
            "scope": 516,
            "src": "3078:122:1",
=======
              "src": "3350:9:1"
            },
            "scope": 573,
            "src": "3284:109:1",
>>>>>>> main
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 444,
              "nodeType": "Block",
              "src": "3294:144:1",
=======
              "id": 499,
              "nodeType": "Block",
              "src": "3487:144:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 435,
=======
                        "id": 490,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
<<<<<<< HEAD
                              "id": 427,
                              "name": "subsidiaries",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "3312:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$314_storage_$",
                                "typeString": "mapping(address => struct Corporate.sub storage ref)"
                              }
                            },
                            "id": 429,
                            "indexExpression": {
                              "id": 428,
                              "name": "toCheck",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 419,
                              "src": "3325:7:1",
=======
                              "id": 482,
                              "name": "subsidiaries",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 349,
                              "src": "3505:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$364_storage_$",
                                "typeString": "mapping(address => struct Corporate.sub storage ref)"
                              }
                            },
                            "id": 484,
                            "indexExpression": {
                              "id": 483,
                              "name": "toCheck",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 474,
                              "src": "3518:7:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "3312:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_sub_$314_storage",
                              "typeString": "struct Corporate.sub storage ref"
                            }
                          },
                          "id": 430,
=======
                            "src": "3505:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_sub_$364_storage",
                              "typeString": "struct Corporate.sub storage ref"
                            }
                          },
                          "id": 485,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "subAddress",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 309,
                          "src": "3312:32:1",
=======
                          "referencedDeclaration": 359,
                          "src": "3505:32:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
<<<<<<< HEAD
                              "id": 433,
=======
                              "id": 488,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "3356:1:1",
=======
                              "src": "3549:1:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
<<<<<<< HEAD
                            "id": 432,
=======
                            "id": 487,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "3348:7:1",
=======
                            "src": "3541:7:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 431,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3348:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 434,
=======
                              "id": 486,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3541:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 489,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "3348:10:1",
=======
                          "src": "3541:10:1",
>>>>>>> main
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "3312:46:1",
=======
                        "src": "3505:46:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f74206120737562736964696172792061646472657373",
<<<<<<< HEAD
                        "id": 436,
=======
                        "id": 491,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "3360:26:1",
=======
                        "src": "3553:26:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_00e7c86a76d6b37cd7c008118063d660e33a645a376ceac3e4508a2776cb0688",
                          "typeString": "literal_string \"Not a subsidiary address\""
                        },
                        "value": "Not a subsidiary address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_00e7c86a76d6b37cd7c008118063d660e33a645a376ceac3e4508a2776cb0688",
                          "typeString": "literal_string \"Not a subsidiary address\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 426,
=======
                      "id": 481,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "3304:7:1",
=======
                      "src": "3497:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 437,
=======
                    "id": 492,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3304:83:1",
=======
                    "src": "3497:83:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 438,
                  "nodeType": "ExpressionStatement",
                  "src": "3304:83:1"
=======
                  "id": 493,
                  "nodeType": "ExpressionStatement",
                  "src": "3497:83:1"
>>>>>>> main
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 439,
                        "name": "subsidiaries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "3404:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$314_storage_$",
                          "typeString": "mapping(address => struct Corporate.sub storage ref)"
                        }
                      },
                      "id": 441,
                      "indexExpression": {
                        "id": 440,
                        "name": "toCheck",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 419,
                        "src": "3417:7:1",
=======
                        "id": 494,
                        "name": "subsidiaries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 349,
                        "src": "3597:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$364_storage_$",
                          "typeString": "mapping(address => struct Corporate.sub storage ref)"
                        }
                      },
                      "id": 496,
                      "indexExpression": {
                        "id": 495,
                        "name": "toCheck",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 474,
                        "src": "3610:7:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "3404:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_sub_$314_storage",
                        "typeString": "struct Corporate.sub storage ref"
                      }
                    },
                    "id": 442,
=======
                      "src": "3597:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_sub_$364_storage",
                        "typeString": "struct Corporate.sub storage ref"
                      }
                    },
                    "id": 497,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "valid",
                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                    "referencedDeclaration": 313,
                    "src": "3404:27:1",
=======
                    "referencedDeclaration": 363,
                    "src": "3597:27:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 425,
                  "id": 443,
                  "nodeType": "Return",
                  "src": "3397:34:1"
=======
                  "functionReturnParameters": 480,
                  "id": 498,
                  "nodeType": "Return",
                  "src": "3590:34:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "6fdbaf43",
<<<<<<< HEAD
            "id": 445,
=======
            "id": 500,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 422,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 421,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 515,
                  "src": "3267:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3267:13:1"
              }
            ],
            "name": "checkIfSubsidiaryValid",
            "nameLocation": "3215:22:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 420,
=======
                "id": 477,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 476,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "3460:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3460:13:1"
              }
            ],
            "name": "checkIfSubsidiaryValid",
            "nameLocation": "3408:22:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 475,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 419,
                  "mutability": "mutable",
                  "name": "toCheck",
                  "nameLocation": "3246:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 445,
                  "src": "3238:15:1",
=======
                  "id": 474,
                  "mutability": "mutable",
                  "name": "toCheck",
                  "nameLocation": "3439:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 500,
                  "src": "3431:15:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3238:7:1",
=======
                    "id": 473,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3431:7:1",
>>>>>>> main
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3237:17:1"
            },
            "returnParameters": {
              "id": 425,
=======
              "src": "3430:17:1"
            },
            "returnParameters": {
              "id": 480,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 424,
=======
                  "id": 479,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 445,
                  "src": "3289:4:1",
=======
                  "scope": 500,
                  "src": "3482:4:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 423,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3289:4:1",
=======
                    "id": 478,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3482:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3288:6:1"
            },
            "scope": 516,
            "src": "3206:232:1",
=======
              "src": "3481:6:1"
            },
            "scope": 573,
            "src": "3399:232:1",
>>>>>>> main
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 474,
              "nodeType": "Block",
              "src": "3555:158:1",
=======
              "id": 529,
              "nodeType": "Block",
              "src": "3748:158:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
<<<<<<< HEAD
                        "id": 466,
=======
                        "id": 521,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
<<<<<<< HEAD
                          "id": 460,
=======
                          "id": 515,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
<<<<<<< HEAD
                                "id": 456,
                                "name": "whitelist_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 448,
                                "src": "3573:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Whitelist_$1298",
                                  "typeString": "contract Whitelist"
                                }
                              },
                              "id": 457,
=======
                                "id": 511,
                                "name": "whitelist_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 503,
                                "src": "3766:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Whitelist_$1425",
                                  "typeString": "contract Whitelist"
                                }
                              },
                              "id": 512,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 1280,
                              "src": "3573:16:1",
=======
                              "referencedDeclaration": 1407,
                              "src": "3766:16:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
<<<<<<< HEAD
                            "id": 458,
=======
                            "id": 513,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "3573:18:1",
=======
                            "src": "3766:18:1",
>>>>>>> main
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
<<<<<<< HEAD
                            "id": 459,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 290,
                            "src": "3595:5:1",
=======
                            "id": 514,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 337,
                            "src": "3788:5:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
<<<<<<< HEAD
                          "src": "3573:27:1",
=======
                          "src": "3766:27:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
<<<<<<< HEAD
                          "id": 465,
=======
                          "id": 520,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
<<<<<<< HEAD
                                "id": 461,
                                "name": "whitelist",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 305,
                                "src": "3604:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Whitelist_$1298",
                                  "typeString": "contract Whitelist"
                                }
                              },
                              "id": 462,
=======
                                "id": 516,
                                "name": "whitelist",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 355,
                                "src": "3797:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Whitelist_$1425",
                                  "typeString": "contract Whitelist"
                                }
                              },
                              "id": 517,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 1280,
                              "src": "3604:15:1",
=======
                              "referencedDeclaration": 1407,
                              "src": "3797:15:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
<<<<<<< HEAD
                            "id": 463,
=======
                            "id": 518,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "3604:17:1",
=======
                            "src": "3797:17:1",
>>>>>>> main
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
<<<<<<< HEAD
                            "id": 464,
                            "name": "creator_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 288,
                            "src": "3625:8:1",
=======
                            "id": 519,
                            "name": "creator_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 335,
                            "src": "3818:8:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
<<<<<<< HEAD
                          "src": "3604:29:1",
=======
                          "src": "3797:29:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD
                        "src": "3573:60:1",
=======
                        "src": "3766:60:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c697374206e6f742063726561746564206279206b6e6f776e207061727479",
<<<<<<< HEAD
                        "id": 467,
=======
                        "id": 522,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "3635:38:1",
=======
                        "src": "3828:38:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cf9dd211e1ca90d9268a7ae8097b7e406e991130fcf3aad7805d3e2292c4115c",
                          "typeString": "literal_string \"Whitelist not created by known party\""
                        },
                        "value": "Whitelist not created by known party"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cf9dd211e1ca90d9268a7ae8097b7e406e991130fcf3aad7805d3e2292c4115c",
                          "typeString": "literal_string \"Whitelist not created by known party\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 455,
=======
                      "id": 510,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "3565:7:1",
=======
                      "src": "3758:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 468,
=======
                    "id": 523,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3565:109:1",
=======
                    "src": "3758:109:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "3565:109:1"
                },
                {
                  "expression": {
                    "id": 472,
=======
                  "id": 524,
                  "nodeType": "ExpressionStatement",
                  "src": "3758:109:1"
                },
                {
                  "expression": {
                    "id": 527,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 470,
                      "name": "whitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 305,
                      "src": "3684:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$1298",
=======
                      "id": 525,
                      "name": "whitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 355,
                      "src": "3877:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$1425",
>>>>>>> main
                        "typeString": "contract Whitelist"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 471,
                      "name": "whitelist_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 448,
                      "src": "3696:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$1298",
                        "typeString": "contract Whitelist"
                      }
                    },
                    "src": "3684:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$1298",
                      "typeString": "contract Whitelist"
                    }
                  },
                  "id": 473,
                  "nodeType": "ExpressionStatement",
                  "src": "3684:22:1"
=======
                      "id": 526,
                      "name": "whitelist_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 503,
                      "src": "3889:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$1425",
                        "typeString": "contract Whitelist"
                      }
                    },
                    "src": "3877:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$1425",
                      "typeString": "contract Whitelist"
                    }
                  },
                  "id": 528,
                  "nodeType": "ExpressionStatement",
                  "src": "3877:22:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "3d0f963e",
<<<<<<< HEAD
            "id": 475,
=======
            "id": 530,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 451,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 450,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 505,
                  "src": "3528:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3528:12:1"
              },
              {
                "id": 453,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 452,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 515,
                  "src": "3541:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3541:13:1"
              }
            ],
            "name": "updateWhitelist",
            "nameLocation": "3483:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 449,
=======
                "id": 506,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 505,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 562,
                  "src": "3721:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3721:12:1"
              },
              {
                "id": 508,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 507,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "3734:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3734:13:1"
              }
            ],
            "name": "updateWhitelist",
            "nameLocation": "3676:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 504,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 448,
                  "mutability": "mutable",
                  "name": "whitelist_",
                  "nameLocation": "3509:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "3499:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Whitelist_$1298",
                    "typeString": "contract Whitelist"
                  },
                  "typeName": {
                    "id": 447,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 446,
                      "name": "Whitelist",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1298,
                      "src": "3499:9:1"
                    },
                    "referencedDeclaration": 1298,
                    "src": "3499:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$1298",
=======
                  "id": 503,
                  "mutability": "mutable",
                  "name": "whitelist_",
                  "nameLocation": "3702:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "3692:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Whitelist_$1425",
                    "typeString": "contract Whitelist"
                  },
                  "typeName": {
                    "id": 502,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 501,
                      "name": "Whitelist",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1425,
                      "src": "3692:9:1"
                    },
                    "referencedDeclaration": 1425,
                    "src": "3692:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$1425",
>>>>>>> main
                      "typeString": "contract Whitelist"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3498:22:1"
            },
            "returnParameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3555:0:1"
            },
            "scope": 516,
            "src": "3474:239:1",
=======
              "src": "3691:22:1"
            },
            "returnParameters": {
              "id": 509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3748:0:1"
            },
            "scope": 573,
            "src": "3667:239:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 488,
              "nodeType": "Block",
              "src": "3822:30:1",
              "statements": [
                {
                  "expression": {
                    "id": 486,
=======
              "id": 545,
              "nodeType": "Block",
              "src": "4015:52:1",
              "statements": [
                {
                  "expression": {
                    "id": 541,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 484,
                      "name": "valid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 307,
                      "src": "3832:5:1",
=======
                      "id": 539,
                      "name": "valid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 357,
                      "src": "4025:5:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
<<<<<<< HEAD
                      "id": 485,
=======
                      "id": 540,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "3840:5:1",
=======
                      "src": "4033:5:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
<<<<<<< HEAD
                    "src": "3832:13:1",
=======
                    "src": "4025:13:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 487,
                  "nodeType": "ExpressionStatement",
                  "src": "3832:13:1"
=======
                  "id": 542,
                  "nodeType": "ExpressionStatement",
                  "src": "4025:13:1"
                },
                {
                  "expression": {
                    "id": 543,
                    "name": "valid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 357,
                    "src": "4055:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 538,
                  "id": 544,
                  "nodeType": "Return",
                  "src": "4048:12:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "98f4448a",
<<<<<<< HEAD
            "id": 489,
=======
            "id": 546,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 478,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 477,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 505,
                  "src": "3782:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3782:12:1"
              },
              {
                "id": 480,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 479,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 515,
                  "src": "3795:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3795:13:1"
              }
            ],
            "name": "disableCorporate",
            "nameLocation": "3756:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3772:2:1"
            },
            "returnParameters": {
              "id": 483,
=======
                "id": 533,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 532,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 562,
                  "src": "3975:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3975:12:1"
              },
              {
                "id": 535,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 534,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "3988:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3988:13:1"
              }
            ],
            "name": "disableCorporate",
            "nameLocation": "3949:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3965:2:1"
            },
            "returnParameters": {
              "id": 538,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 482,
=======
                  "id": 537,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 489,
                  "src": "3817:4:1",
=======
                  "scope": 546,
                  "src": "4010:4:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 481,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3817:4:1",
=======
                    "id": 536,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4010:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3816:6:1"
            },
            "scope": 516,
            "src": "3747:105:1",
=======
              "src": "4009:6:1"
            },
            "scope": 573,
            "src": "3940:127:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 504,
              "nodeType": "Block",
              "src": "3880:82:1",
=======
              "id": 561,
              "nodeType": "Block",
              "src": "4095:82:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
<<<<<<< HEAD
                        "id": 500,
=======
                        "id": 557,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
<<<<<<< HEAD
                          "id": 495,
=======
                          "id": 552,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
<<<<<<< HEAD
                              "id": 492,
=======
                              "id": 549,
>>>>>>> main
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                              "src": "3898:3:1",
=======
                              "src": "4113:3:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
<<<<<<< HEAD
                            "id": 493,
=======
                            "id": 550,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "src": "3898:10:1",
=======
                            "src": "4113:10:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
<<<<<<< HEAD
                            "id": 494,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 290,
                            "src": "3912:5:1",
=======
                            "id": 551,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 337,
                            "src": "4127:5:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
<<<<<<< HEAD
                          "src": "3898:19:1",
=======
                          "src": "4113:19:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
<<<<<<< HEAD
                          "id": 499,
=======
                          "id": 556,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
<<<<<<< HEAD
                              "id": 496,
=======
                              "id": 553,
>>>>>>> main
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                              "src": "3921:3:1",
=======
                              "src": "4136:3:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
<<<<<<< HEAD
                            "id": 497,
=======
                            "id": 554,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "src": "3921:10:1",
=======
                            "src": "4136:10:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
<<<<<<< HEAD
                            "id": 498,
                            "name": "creator_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 288,
                            "src": "3935:8:1",
=======
                            "id": 555,
                            "name": "creator_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 335,
                            "src": "4150:8:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
<<<<<<< HEAD
                          "src": "3921:22:1",
=======
                          "src": "4136:22:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD
                        "src": "3898:45:1",
=======
                        "src": "4113:45:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "id": 491,
=======
                      "id": 548,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "3890:7:1",
=======
                      "src": "4105:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 501,
=======
                    "id": 558,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3890:54:1",
=======
                    "src": "4105:54:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 502,
                  "nodeType": "ExpressionStatement",
                  "src": "3890:54:1"
                },
                {
                  "id": 503,
                  "nodeType": "PlaceholderStatement",
                  "src": "3954:1:1"
                }
              ]
            },
            "id": 505,
            "name": "permissioned",
            "nameLocation": "3867:12:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3880:0:1"
            },
            "src": "3858:104:1",
=======
                  "id": 559,
                  "nodeType": "ExpressionStatement",
                  "src": "4105:54:1"
                },
                {
                  "id": 560,
                  "nodeType": "PlaceholderStatement",
                  "src": "4169:1:1"
                }
              ]
            },
            "id": 562,
            "name": "permissioned",
            "nameLocation": "4082:12:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4095:0:1"
            },
            "src": "4073:104:1",
>>>>>>> main
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 514,
              "nodeType": "Block",
              "src": "3991:50:1",
=======
              "id": 571,
              "nodeType": "Block",
              "src": "4206:50:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
<<<<<<< HEAD
                        "id": 510,
=======
                        "id": 567,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 508,
                          "name": "valid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "4009:5:1",
=======
                          "id": 565,
                          "name": "valid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 357,
                          "src": "4224:5:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
<<<<<<< HEAD
                          "id": 509,
=======
                          "id": 566,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "4018:4:1",
=======
                          "src": "4233:4:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
<<<<<<< HEAD
                        "src": "4009:13:1",
=======
                        "src": "4224:13:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "id": 507,
=======
                      "id": 564,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "4001:7:1",
=======
                      "src": "4216:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 511,
=======
                    "id": 568,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4001:22:1",
=======
                    "src": "4216:22:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 512,
                  "nodeType": "ExpressionStatement",
                  "src": "4001:22:1"
                },
                {
                  "id": 513,
                  "nodeType": "PlaceholderStatement",
                  "src": "4033:1:1"
                }
              ]
            },
            "id": 515,
            "name": "validContract",
            "nameLocation": "3977:13:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3991:0:1"
            },
            "src": "3968:73:1",
=======
                  "id": 569,
                  "nodeType": "ExpressionStatement",
                  "src": "4216:22:1"
                },
                {
                  "id": 570,
                  "nodeType": "PlaceholderStatement",
                  "src": "4248:1:1"
                }
              ]
            },
            "id": 572,
            "name": "validContract",
            "nameLocation": "4192:13:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 563,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4206:0:1"
            },
            "src": "4183:73:1",
>>>>>>> main
            "virtual": false,
            "visibility": "internal"
          }
        ],
<<<<<<< HEAD
        "scope": 658,
        "src": "1589:2454:1",
=======
        "scope": 726,
        "src": "1738:2520:1",
>>>>>>> main
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
<<<<<<< HEAD
        "id": 657,
        "linearizedBaseContracts": [
          657
        ],
        "name": "Subsidiary",
        "nameLocation": "4119:10:1",
=======
        "id": 725,
        "linearizedBaseContracts": [
          725
        ],
        "name": "Subsidiary",
        "nameLocation": "4334:10:1",
>>>>>>> main
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "b119a9d6",
<<<<<<< HEAD
            "id": 518,
            "mutability": "mutable",
            "name": "parent_",
            "nameLocation": "4159:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 657,
            "src": "4136:30:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 517,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4136:15:1",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
=======
            "id": 576,
            "mutability": "mutable",
            "name": "parent_",
            "nameLocation": "4368:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 725,
            "src": "4351:24:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Corporate_$573",
              "typeString": "contract Corporate"
            },
            "typeName": {
              "id": 575,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 574,
                "name": "Corporate",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 573,
                "src": "4351:9:1"
              },
              "referencedDeclaration": 573,
              "src": "4351:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Corporate_$573",
                "typeString": "contract Corporate"
>>>>>>> main
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 520,
            "mutability": "mutable",
            "name": "amount",
            "nameLocation": "4199:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 657,
            "src": "4194:11:1",
=======
            "id": 578,
            "mutability": "mutable",
            "name": "amount",
            "nameLocation": "4408:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 725,
            "src": "4403:11:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 519,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "4194:4:1",
=======
              "id": 577,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "4403:4:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 524,
            "mutability": "mutable",
            "name": "permissionedAddress",
            "nameLocation": "4255:19:1",
            "nodeType": "VariableDeclaration",
            "scope": 657,
            "src": "4222:52:1",
=======
            "id": 582,
            "mutability": "mutable",
            "name": "permissionedAddress",
            "nameLocation": "4464:19:1",
            "nodeType": "VariableDeclaration",
            "scope": 725,
            "src": "4431:52:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 523,
              "keyType": {
                "id": 521,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4230:7:1",
=======
              "id": 581,
              "keyType": {
                "id": 579,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4439:7:1",
>>>>>>> main
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "4222:24:1",
=======
              "src": "4431:24:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
<<<<<<< HEAD
                "id": 522,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "4241:4:1",
=======
                "id": 580,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "4450:4:1",
>>>>>>> main
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
<<<<<<< HEAD
            "id": 530,
            "name": "ValueReceived",
            "nameLocation": "4349:13:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 529,
=======
            "id": 588,
            "name": "ValueReceived",
            "nameLocation": "4558:13:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 587,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 526,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "4371:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "4363:12:1",
=======
                  "id": 584,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "4580:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "4572:12:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 525,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4363:7:1",
=======
                    "id": 583,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4572:7:1",
>>>>>>> main
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 528,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4382:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "4377:11:1",
=======
                  "id": 586,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4591:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "4586:11:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 527,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4377:4:1",
=======
                    "id": 585,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4586:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4362:27:1"
            },
            "src": "4343:47:1"
          },
          {
            "canonicalName": "Subsidiary.transaction",
            "id": 537,
            "members": [
              {
                "constant": false,
                "id": 532,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "4430:2:1",
                "nodeType": "VariableDeclaration",
                "scope": 537,
                "src": "4425:7:1",
=======
              "src": "4571:27:1"
            },
            "src": "4552:47:1"
          },
          {
            "canonicalName": "Subsidiary.transaction",
            "id": 595,
            "members": [
              {
                "constant": false,
                "id": 590,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "4639:2:1",
                "nodeType": "VariableDeclaration",
                "scope": 595,
                "src": "4634:7:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 531,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "4425:4:1",
=======
                  "id": 589,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "4634:4:1",
>>>>>>> main
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 534,
                "mutability": "mutable",
                "name": "receiver_id",
                "nameLocation": "4451:11:1",
                "nodeType": "VariableDeclaration",
                "scope": 537,
                "src": "4443:19:1",
=======
                "id": 592,
                "mutability": "mutable",
                "name": "receiver_id",
                "nameLocation": "4660:11:1",
                "nodeType": "VariableDeclaration",
                "scope": 595,
                "src": "4652:19:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 533,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "4443:7:1",
=======
                  "id": 591,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "4652:7:1",
>>>>>>> main
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 536,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "4477:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 537,
                "src": "4472:11:1",
=======
                "id": 594,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "4686:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 595,
                "src": "4681:11:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 535,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "4472:4:1",
=======
                  "id": 593,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "4681:4:1",
>>>>>>> main
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "transaction",
<<<<<<< HEAD
            "nameLocation": "4404:11:1",
            "nodeType": "StructDefinition",
            "scope": 657,
            "src": "4397:93:1",
=======
            "nameLocation": "4613:11:1",
            "nodeType": "StructDefinition",
            "scope": 725,
            "src": "4606:93:1",
>>>>>>> main
            "visibility": "public"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 542,
            "mutability": "mutable",
            "name": "transactions",
            "nameLocation": "4560:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 657,
            "src": "4531:41:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_transaction_$537_storage_$",
              "typeString": "mapping(uint256 => struct Subsidiary.transaction)"
            },
            "typeName": {
              "id": 541,
              "keyType": {
                "id": 538,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "4539:4:1",
=======
            "id": 600,
            "mutability": "mutable",
            "name": "transactions",
            "nameLocation": "4769:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 725,
            "src": "4740:41:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_transaction_$595_storage_$",
              "typeString": "mapping(uint256 => struct Subsidiary.transaction)"
            },
            "typeName": {
              "id": 599,
              "keyType": {
                "id": 596,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "4748:4:1",
>>>>>>> main
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "4531:28:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_transaction_$537_storage_$",
                "typeString": "mapping(uint256 => struct Subsidiary.transaction)"
              },
              "valueType": {
                "id": 540,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 539,
                  "name": "transaction",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 537,
                  "src": "4547:11:1"
                },
                "referencedDeclaration": 537,
                "src": "4547:11:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_transaction_$537_storage_ptr",
=======
              "src": "4740:28:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_transaction_$595_storage_$",
                "typeString": "mapping(uint256 => struct Subsidiary.transaction)"
              },
              "valueType": {
                "id": 598,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 597,
                  "name": "transaction",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 595,
                  "src": "4756:11:1"
                },
                "referencedDeclaration": 595,
                "src": "4756:11:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_transaction_$595_storage_ptr",
>>>>>>> main
                  "typeString": "struct Subsidiary.transaction"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 544,
            "mutability": "mutable",
            "name": "numOfTransactions",
            "nameLocation": "4675:17:1",
            "nodeType": "VariableDeclaration",
            "scope": 657,
            "src": "4670:22:1",
=======
            "id": 602,
            "mutability": "mutable",
            "name": "numOfTransactions",
            "nameLocation": "4884:17:1",
            "nodeType": "VariableDeclaration",
            "scope": 725,
            "src": "4879:22:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 543,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "4670:4:1",
=======
              "id": 601,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "4879:4:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 560,
              "nodeType": "Block",
              "src": "4726:62:1",
              "statements": [
                {
                  "expression": {
                    "id": 554,
=======
              "id": 616,
              "nodeType": "Block",
              "src": "4936:51:1",
              "statements": [
                {
                  "expression": {
                    "id": 610,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 549,
                      "name": "parent_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "4736:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
=======
                      "id": 608,
                      "name": "parent_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 576,
                      "src": "4946:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Corporate_$573",
                        "typeString": "contract Corporate"
>>>>>>> main
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "arguments": [
                        {
                          "id": 552,
                          "name": "parent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 546,
                          "src": "4754:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4746:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 550,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4746:8:1",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4746:15:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4736:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 555,
                  "nodeType": "ExpressionStatement",
                  "src": "4736:25:1"
                },
                {
                  "expression": {
                    "id": 558,
=======
                      "id": 609,
                      "name": "corp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 605,
                      "src": "4956:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Corporate_$573",
                        "typeString": "contract Corporate"
                      }
                    },
                    "src": "4946:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Corporate_$573",
                      "typeString": "contract Corporate"
                    }
                  },
                  "id": 611,
                  "nodeType": "ExpressionStatement",
                  "src": "4946:14:1"
                },
                {
                  "expression": {
                    "id": 614,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 556,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 520,
                      "src": "4771:6:1",
=======
                      "id": 612,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 578,
                      "src": "4970:6:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
<<<<<<< HEAD
                      "id": 557,
=======
                      "id": 613,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "4780:1:1",
=======
                      "src": "4979:1:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
<<<<<<< HEAD
                    "src": "4771:10:1",
=======
                    "src": "4970:10:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 559,
                  "nodeType": "ExpressionStatement",
                  "src": "4771:10:1"
                }
              ]
            },
            "id": 561,
=======
                  "id": 615,
                  "nodeType": "ExpressionStatement",
                  "src": "4970:10:1"
                }
              ]
            },
            "id": 617,
>>>>>>> main
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 547,
=======
              "id": 606,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 546,
                  "mutability": "mutable",
                  "name": "parent",
                  "nameLocation": "4718:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 561,
                  "src": "4710:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4710:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
=======
                  "id": 605,
                  "mutability": "mutable",
                  "name": "corp",
                  "nameLocation": "4930:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "4920:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Corporate_$573",
                    "typeString": "contract Corporate"
                  },
                  "typeName": {
                    "id": 604,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 603,
                      "name": "Corporate",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 573,
                      "src": "4920:9:1"
                    },
                    "referencedDeclaration": 573,
                    "src": "4920:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Corporate_$573",
                      "typeString": "contract Corporate"
>>>>>>> main
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4709:16:1"
            },
            "returnParameters": {
              "id": 548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4726:0:1"
            },
            "scope": 657,
            "src": "4698:90:1",
=======
              "src": "4919:16:1"
            },
            "returnParameters": {
              "id": 607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4936:0:1"
            },
            "scope": 725,
            "src": "4908:79:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 581,
              "nodeType": "Block",
              "src": "5005:154:1",
              "statements": [
                {
                  "assignments": [
                    569
=======
              "id": 643,
              "nodeType": "Block",
              "src": "5204:172:1",
              "statements": [
                {
                  "assignments": [
                    625
>>>>>>> main
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 569,
                      "mutability": "mutable",
                      "name": "prevAmount",
                      "nameLocation": "5020:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 581,
                      "src": "5015:15:1",
=======
                      "id": 625,
                      "mutability": "mutable",
                      "name": "prevAmount",
                      "nameLocation": "5219:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 643,
                      "src": "5214:15:1",
>>>>>>> main
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 568,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5015:4:1",
=======
                        "id": 624,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5214:4:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 571,
                  "initialValue": {
                    "id": 570,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 520,
                    "src": "5033:6:1",
=======
                  "id": 627,
                  "initialValue": {
                    "id": 626,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 578,
                    "src": "5232:6:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "5015:24:1"
                },
                {
                  "expression": {
                    "id": 574,
=======
                  "src": "5214:24:1"
                },
                {
                  "expression": {
                    "id": 630,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 572,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 520,
                      "src": "5049:6:1",
=======
                      "id": 628,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 578,
                      "src": "5248:6:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
<<<<<<< HEAD
                      "id": 573,
=======
                      "id": 629,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "5058:1:1",
=======
                      "src": "5257:1:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
<<<<<<< HEAD
                    "src": "5049:10:1",
=======
                    "src": "5248:10:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 575,
                  "nodeType": "ExpressionStatement",
                  "src": "5049:10:1"
=======
                  "id": 631,
                  "nodeType": "ExpressionStatement",
                  "src": "5248:10:1"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 578,
                        "name": "prevAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 569,
                        "src": "5089:10:1",
=======
                        "id": 640,
                        "name": "prevAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 625,
                        "src": "5306:10:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 576,
                        "name": "parent_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 518,
                        "src": "5076:7:1",
=======
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 636,
                                "name": "parent_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 576,
                                "src": "5291:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Corporate_$573",
                                  "typeString": "contract Corporate"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Corporate_$573",
                                  "typeString": "contract Corporate"
                                }
                              ],
                              "id": 635,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5283:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 634,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5283:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5283:16:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5275:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 632,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5275:8:1",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5275:25:1",
                        "tryCall": false,
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
<<<<<<< HEAD
                      "id": 577,
=======
                      "id": 639,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "send",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "src": "5076:12:1",
=======
                      "src": "5275:30:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
<<<<<<< HEAD
                    "id": 579,
=======
                    "id": 641,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5076:24:1",
=======
                    "src": "5275:42:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 567,
                  "id": 580,
                  "nodeType": "Return",
                  "src": "5069:31:1"
=======
                  "functionReturnParameters": 623,
                  "id": 642,
                  "nodeType": "Return",
                  "src": "5268:49:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "8b734233",
<<<<<<< HEAD
            "id": 582,
=======
            "id": 644,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 564,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 563,
                  "name": "accountsAccess",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 656,
                  "src": "4975:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4975:14:1"
              }
            ],
            "name": "getTake",
            "nameLocation": "4950:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4957:2:1"
            },
            "returnParameters": {
              "id": 567,
=======
                "id": 620,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 619,
                  "name": "accountsAccess",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 724,
                  "src": "5174:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "5174:14:1"
              }
            ],
            "name": "getTake",
            "nameLocation": "5149:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5156:2:1"
            },
            "returnParameters": {
              "id": 623,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 566,
=======
                  "id": 622,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 582,
                  "src": "4998:4:1",
=======
                  "scope": 644,
                  "src": "5197:4:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 565,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4998:4:1",
=======
                    "id": 621,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5197:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4997:6:1"
            },
            "scope": 657,
            "src": "4941:218:1",
=======
              "src": "5196:6:1"
            },
            "scope": 725,
            "src": "5140:236:1",
>>>>>>> main
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 615,
              "nodeType": "Block",
              "src": "5355:230:1",
=======
              "id": 677,
              "nodeType": "Block",
              "src": "5572:230:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 599,
=======
                        "id": 661,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
<<<<<<< HEAD
                            "id": 596,
                            "name": "person_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 586,
                            "src": "5373:9:1",
=======
                            "id": 658,
                            "name": "person_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 648,
                            "src": "5590:9:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
<<<<<<< HEAD
                          "id": 597,
=======
                          "id": 659,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "src": "5373:17:1",
=======
                          "src": "5590:17:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
<<<<<<< HEAD
                          "id": 598,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 520,
                          "src": "5394:6:1",
=======
                          "id": 660,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 578,
                          "src": "5611:6:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "src": "5373:27:1",
=======
                        "src": "5590:27:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520526563656976657220636f6e747261637420646f6573206e6f7420686176652073756666696369656e742062616c616e636520666f722074686973207472616e73616374696f6e",
<<<<<<< HEAD
                        "id": 600,
=======
                        "id": 662,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "5402:77:1",
=======
                        "src": "5619:77:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d4a4ee7a07ecef3c3534871c9565519b24ca382dbfc79331d46c1dd632076b2",
                          "typeString": "literal_string \"The Receiver contract does not have sufficient balance for this transaction\""
                        },
                        "value": "The Receiver contract does not have sufficient balance for this transaction"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d4a4ee7a07ecef3c3534871c9565519b24ca382dbfc79331d46c1dd632076b2",
                          "typeString": "literal_string \"The Receiver contract does not have sufficient balance for this transaction\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 595,
=======
                      "id": 657,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "5365:7:1",
=======
                      "src": "5582:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 601,
=======
                    "id": 663,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5365:115:1",
=======
                    "src": "5582:115:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 602,
                  "nodeType": "ExpressionStatement",
                  "src": "5365:115:1"
                },
                {
                  "expression": {
                    "id": 611,
=======
                  "id": 664,
                  "nodeType": "ExpressionStatement",
                  "src": "5582:115:1"
                },
                {
                  "expression": {
                    "id": 673,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 603,
                        "name": "transactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 542,
                        "src": "5491:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_transaction_$537_storage_$",
                          "typeString": "mapping(uint256 => struct Subsidiary.transaction storage ref)"
                        }
                      },
                      "id": 605,
                      "indexExpression": {
                        "id": 604,
                        "name": "transID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 584,
                        "src": "5504:7:1",
=======
                        "id": 665,
                        "name": "transactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 600,
                        "src": "5708:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_transaction_$595_storage_$",
                          "typeString": "mapping(uint256 => struct Subsidiary.transaction storage ref)"
                        }
                      },
                      "id": 667,
                      "indexExpression": {
                        "id": 666,
                        "name": "transID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 646,
                        "src": "5721:7:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "5491:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_transaction_$537_storage",
=======
                      "src": "5708:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_transaction_$595_storage",
>>>>>>> main
                        "typeString": "struct Subsidiary.transaction storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
<<<<<<< HEAD
                          "id": 607,
                          "name": "transID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 584,
                          "src": "5527:7:1",
=======
                          "id": 669,
                          "name": "transID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 646,
                          "src": "5744:7:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
<<<<<<< HEAD
                          "id": 608,
                          "name": "person_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 586,
                          "src": "5536:9:1",
=======
                          "id": 670,
                          "name": "person_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 648,
                          "src": "5753:9:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
<<<<<<< HEAD
                          "id": 609,
                          "name": "tx_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 588,
                          "src": "5547:9:1",
=======
                          "id": 671,
                          "name": "tx_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 650,
                          "src": "5764:9:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
<<<<<<< HEAD
                        "id": 606,
                        "name": "transaction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "5515:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_transaction_$537_storage_ptr_$",
                          "typeString": "type(struct Subsidiary.transaction storage pointer)"
                        }
                      },
                      "id": 610,
=======
                        "id": 668,
                        "name": "transaction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 595,
                        "src": "5732:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_transaction_$595_storage_ptr_$",
                          "typeString": "type(struct Subsidiary.transaction storage pointer)"
                        }
                      },
                      "id": 672,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "5515:42:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_transaction_$537_memory_ptr",
                        "typeString": "struct Subsidiary.transaction memory"
                      }
                    },
                    "src": "5491:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_transaction_$537_storage",
                      "typeString": "struct Subsidiary.transaction storage ref"
                    }
                  },
                  "id": 612,
                  "nodeType": "ExpressionStatement",
                  "src": "5491:66:1"
=======
                      "src": "5732:42:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_transaction_$595_memory_ptr",
                        "typeString": "struct Subsidiary.transaction memory"
                      }
                    },
                    "src": "5708:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_transaction_$595_storage",
                      "typeString": "struct Subsidiary.transaction storage ref"
                    }
                  },
                  "id": 674,
                  "nodeType": "ExpressionStatement",
                  "src": "5708:66:1"
>>>>>>> main
                },
                {
                  "expression": {
                    "hexValue": "74727565",
<<<<<<< HEAD
                    "id": 613,
=======
                    "id": 675,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
<<<<<<< HEAD
                    "src": "5574:4:1",
=======
                    "src": "5791:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 594,
                  "id": 614,
                  "nodeType": "Return",
                  "src": "5567:11:1"
=======
                  "functionReturnParameters": 656,
                  "id": 676,
                  "nodeType": "Return",
                  "src": "5784:11:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "ef5ea07c",
<<<<<<< HEAD
            "id": 616,
=======
            "id": 678,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 591,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 590,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 645,
                  "src": "5323:10:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "5323:10:1"
              }
            ],
            "name": "insertTransaction",
            "nameLocation": "5256:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 589,
=======
                "id": 653,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 652,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 710,
                  "src": "5540:10:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "5540:10:1"
              }
            ],
            "name": "insertTransaction",
            "nameLocation": "5473:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 651,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 584,
                  "mutability": "mutable",
                  "name": "transID",
                  "nameLocation": "5279:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 616,
                  "src": "5274:12:1",
=======
                  "id": 646,
                  "mutability": "mutable",
                  "name": "transID",
                  "nameLocation": "5496:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 678,
                  "src": "5491:12:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 583,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5274:4:1",
=======
                    "id": 645,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5491:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 586,
                  "mutability": "mutable",
                  "name": "person_id",
                  "nameLocation": "5296:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 616,
                  "src": "5288:17:1",
=======
                  "id": 648,
                  "mutability": "mutable",
                  "name": "person_id",
                  "nameLocation": "5513:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 678,
                  "src": "5505:17:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 585,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5288:7:1",
=======
                    "id": 647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5505:7:1",
>>>>>>> main
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 588,
                  "mutability": "mutable",
                  "name": "tx_amount",
                  "nameLocation": "5312:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 616,
                  "src": "5307:14:1",
=======
                  "id": 650,
                  "mutability": "mutable",
                  "name": "tx_amount",
                  "nameLocation": "5529:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 678,
                  "src": "5524:14:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 587,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5307:4:1",
=======
                    "id": 649,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5524:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5273:49:1"
            },
            "returnParameters": {
              "id": 594,
=======
              "src": "5490:49:1"
            },
            "returnParameters": {
              "id": 656,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 593,
=======
                  "id": 655,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 616,
                  "src": "5349:4:1",
=======
                  "scope": 678,
                  "src": "5566:4:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 592,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5349:4:1",
=======
                    "id": 654,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5566:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5348:6:1"
            },
            "scope": 657,
            "src": "5247:338:1",
=======
              "src": "5565:6:1"
            },
            "scope": 725,
            "src": "5464:338:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 626,
              "nodeType": "Block",
              "src": "5664:58:1",
=======
              "id": 688,
              "nodeType": "Block",
              "src": "5881:58:1",
>>>>>>> main
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
<<<<<<< HEAD
                          "id": 620,
=======
                          "id": 682,
>>>>>>> main
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                          "src": "5693:3:1",
=======
                          "src": "5910:3:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
<<<<<<< HEAD
                        "id": 621,
=======
                        "id": 683,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "src": "5693:10:1",
=======
                        "src": "5910:10:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
<<<<<<< HEAD
                          "id": 622,
=======
                          "id": 684,
>>>>>>> main
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                          "src": "5705:3:1",
=======
                          "src": "5922:3:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
<<<<<<< HEAD
                        "id": 623,
=======
                        "id": 685,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "src": "5705:9:1",
=======
                        "src": "5922:9:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
<<<<<<< HEAD
                      "id": 619,
                      "name": "ValueReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 530,
                      "src": "5679:13:1",
=======
                      "id": 681,
                      "name": "ValueReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "5896:13:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 624,
=======
                    "id": 686,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5679:36:1",
=======
                    "src": "5896:36:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 625,
                  "nodeType": "EmitStatement",
                  "src": "5674:41:1"
                }
              ]
            },
            "id": 627,
=======
                  "id": 687,
                  "nodeType": "EmitStatement",
                  "src": "5891:41:1"
                }
              ]
            },
            "id": 689,
>>>>>>> main
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 617,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5645:2:1"
            },
            "returnParameters": {
              "id": 618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5664:0:1"
            },
            "scope": 657,
            "src": "5638:84:1",
=======
              "id": 679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5862:2:1"
            },
            "returnParameters": {
              "id": 680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5881:0:1"
            },
            "scope": 725,
            "src": "5855:84:1",
>>>>>>> main
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 644,
              "nodeType": "Block",
              "src": "5752:101:1",
=======
              "id": 709,
              "nodeType": "Block",
              "src": "5969:110:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
<<<<<<< HEAD
                        "id": 640,
=======
                        "id": 705,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
<<<<<<< HEAD
                          "id": 633,
=======
                          "id": 698,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
<<<<<<< HEAD
                              "id": 630,
=======
                              "id": 692,
>>>>>>> main
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                              "src": "5770:3:1",
=======
                              "src": "5987:3:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
<<<<<<< HEAD
                            "id": 631,
=======
                            "id": 693,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "src": "5770:10:1",
=======
                            "src": "5987:10:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
<<<<<<< HEAD
                            "id": 632,
                            "name": "parent_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 518,
                            "src": "5784:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "5770:21:1",
=======
                            "arguments": [
                              {
                                "id": 696,
                                "name": "parent_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 576,
                                "src": "6009:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Corporate_$573",
                                  "typeString": "contract Corporate"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Corporate_$573",
                                  "typeString": "contract Corporate"
                                }
                              ],
                              "id": 695,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6001:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 694,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6001:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6001:16:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5987:30:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
<<<<<<< HEAD
                          "id": 639,
=======
                          "id": 704,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
<<<<<<< HEAD
                              "id": 634,
                              "name": "permissionedAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 524,
                              "src": "5795:19:1",
=======
                              "id": 699,
                              "name": "permissionedAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 582,
                              "src": "6021:19:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
<<<<<<< HEAD
                            "id": 637,
                            "indexExpression": {
                              "expression": {
                                "id": 635,
=======
                            "id": 702,
                            "indexExpression": {
                              "expression": {
                                "id": 700,
>>>>>>> main
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                                "src": "5815:3:1",
=======
                                "src": "6041:3:1",
>>>>>>> main
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
<<<<<<< HEAD
                              "id": 636,
=======
                              "id": 701,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "src": "5815:10:1",
=======
                              "src": "6041:10:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "5795:31:1",
=======
                            "src": "6021:31:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "74727565",
<<<<<<< HEAD
                            "id": 638,
=======
                            "id": 703,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "5830:4:1",
=======
                            "src": "6056:4:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
<<<<<<< HEAD
                          "src": "5795:39:1",
=======
                          "src": "6021:39:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD
                        "src": "5770:64:1",
=======
                        "src": "5987:73:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "id": 629,
=======
                      "id": 691,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "5762:7:1",
=======
                      "src": "5979:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 641,
=======
                    "id": 706,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5762:73:1",
=======
                    "src": "5979:82:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 642,
                  "nodeType": "ExpressionStatement",
                  "src": "5762:73:1"
                },
                {
                  "id": 643,
                  "nodeType": "PlaceholderStatement",
                  "src": "5845:1:1"
                }
              ]
            },
            "id": 645,
            "name": "restricted",
            "nameLocation": "5741:10:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5752:0:1"
            },
            "src": "5732:121:1",
=======
                  "id": 707,
                  "nodeType": "ExpressionStatement",
                  "src": "5979:82:1"
                },
                {
                  "id": 708,
                  "nodeType": "PlaceholderStatement",
                  "src": "6071:1:1"
                }
              ]
            },
            "id": 710,
            "name": "restricted",
            "nameLocation": "5958:10:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5969:0:1"
            },
            "src": "5949:130:1",
>>>>>>> main
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 655,
              "nodeType": "Block",
              "src": "5883:58:1",
=======
              "id": 723,
              "nodeType": "Block",
              "src": "6109:67:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 651,
=======
                        "id": 719,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
<<<<<<< HEAD
                            "id": 648,
=======
                            "id": 713,
>>>>>>> main
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                            "src": "5901:3:1",
=======
                            "src": "6127:3:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
<<<<<<< HEAD
                          "id": 649,
=======
                          "id": 714,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "src": "5901:10:1",
=======
                          "src": "6127:10:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
<<<<<<< HEAD
                          "id": 650,
                          "name": "parent_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 518,
                          "src": "5915:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5901:21:1",
=======
                          "arguments": [
                            {
                              "id": 717,
                              "name": "parent_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 576,
                              "src": "6149:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Corporate_$573",
                                "typeString": "contract Corporate"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Corporate_$573",
                                "typeString": "contract Corporate"
                              }
                            ],
                            "id": 716,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6141:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 715,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6141:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6141:16:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6127:30:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "id": 647,
=======
                      "id": 712,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "5893:7:1",
=======
                      "src": "6119:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 652,
=======
                    "id": 720,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5893:30:1",
=======
                    "src": "6119:39:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 653,
                  "nodeType": "ExpressionStatement",
                  "src": "5893:30:1"
                },
                {
                  "id": 654,
                  "nodeType": "PlaceholderStatement",
                  "src": "5933:1:1"
                }
              ]
            },
            "id": 656,
            "name": "accountsAccess",
            "nameLocation": "5868:14:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5883:0:1"
            },
            "src": "5859:82:1",
=======
                  "id": 721,
                  "nodeType": "ExpressionStatement",
                  "src": "6119:39:1"
                },
                {
                  "id": 722,
                  "nodeType": "PlaceholderStatement",
                  "src": "6168:1:1"
                }
              ]
            },
            "id": 724,
            "name": "accountsAccess",
            "nameLocation": "6094:14:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6109:0:1"
            },
            "src": "6085:91:1",
>>>>>>> main
            "virtual": false,
            "visibility": "internal"
          }
        ],
<<<<<<< HEAD
        "scope": 658,
        "src": "4110:1833:1",
        "usedErrors": []
      }
    ],
    "src": "0:5943:1"
=======
        "scope": 726,
        "src": "4325:1853:1",
        "usedErrors": []
      }
    ],
    "src": "0:6178:1"
>>>>>>> main
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/CorporateFactory.sol",
    "exportedSymbols": {
<<<<<<< HEAD
      "Corporate": [
        516
      ],
      "CorporateFactory": [
        286
      ],
      "Subsidiary": [
        657
      ],
      "Whitelist": [
        1298
      ]
    },
    "id": 658,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 112,
=======
      "Admin": [
        134
      ],
      "Corporate": [
        573
      ],
      "CorporateFactory": [
        333
      ],
      "Subsidiary": [
        725
      ],
      "Whitelist": [
        1425
      ]
    },
    "id": 726,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 136,
>>>>>>> main
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:1"
      },
      {
        "absolutePath": "project:/contracts/Whitelist.sol",
        "file": "./Whitelist.sol",
<<<<<<< HEAD
        "id": 113,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 658,
        "sourceUnit": 1299,
=======
        "id": 137,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 726,
        "sourceUnit": 1426,
>>>>>>> main
        "src": "33:25:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
<<<<<<< HEAD
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          516
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 286,
        "linearizedBaseContracts": [
          286
        ],
        "name": "CorporateFactory",
        "nameLocation": "70:16:1",
=======
        "absolutePath": "project:/contracts/Admin.sol",
        "file": "./Admin.sol",
        "id": 138,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 726,
        "sourceUnit": 135,
        "src": "59:21:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          573
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 333,
        "linearizedBaseContracts": [
          333
        ],
        "name": "CorporateFactory",
        "nameLocation": "92:16:1",
>>>>>>> main
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
<<<<<<< HEAD
            "id": 115,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "109:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 286,
            "src": "94:20:1",
=======
            "id": 140,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "131:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 333,
            "src": "116:20:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 114,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "94:7:1",
=======
              "id": 139,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "116:7:1",
>>>>>>> main
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "functionSelector": "68a0b4e7",
            "id": 120,
            "mutability": "mutable",
            "name": "corporates",
            "nameLocation": "172:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 286,
            "src": "138:44:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$132_storage_$",
              "typeString": "mapping(uint256 => struct CorporateFactory.corporate)"
            },
            "typeName": {
              "id": 119,
              "keyType": {
                "id": 116,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "146:4:1",
=======
            "functionSelector": "f851a440",
            "id": 143,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "173:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 333,
            "src": "160:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Admin_$134",
              "typeString": "contract Admin"
            },
            "typeName": {
              "id": 142,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 141,
                "name": "Admin",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 134,
                "src": "160:5:1"
              },
              "referencedDeclaration": 134,
              "src": "160:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Admin_$134",
                "typeString": "contract Admin"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "68a0b4e7",
            "id": 148,
            "mutability": "mutable",
            "name": "corporates",
            "nameLocation": "218:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 333,
            "src": "184:44:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$160_storage_$",
              "typeString": "mapping(uint256 => struct CorporateFactory.corporate)"
            },
            "typeName": {
              "id": 147,
              "keyType": {
                "id": 144,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "192:4:1",
>>>>>>> main
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "138:26:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$132_storage_$",
                "typeString": "mapping(uint256 => struct CorporateFactory.corporate)"
              },
              "valueType": {
                "id": 118,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 117,
                  "name": "corporate",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 132,
                  "src": "154:9:1"
                },
                "referencedDeclaration": 132,
                "src": "154:9:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_corporate_$132_storage_ptr",
=======
              "src": "184:26:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$160_storage_$",
                "typeString": "mapping(uint256 => struct CorporateFactory.corporate)"
              },
              "valueType": {
                "id": 146,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 145,
                  "name": "corporate",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 160,
                  "src": "200:9:1"
                },
                "referencedDeclaration": 160,
                "src": "200:9:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_corporate_$160_storage_ptr",
>>>>>>> main
                  "typeString": "struct CorporateFactory.corporate"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 122,
            "mutability": "mutable",
            "name": "numCorps",
            "nameLocation": "193:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 286,
            "src": "188:13:1",
=======
            "id": 150,
            "mutability": "mutable",
            "name": "numCorps",
            "nameLocation": "239:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 333,
            "src": "234:13:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 121,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "188:4:1",
=======
              "id": 149,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "234:4:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 125,
            "mutability": "mutable",
            "name": "active",
            "nameLocation": "266:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 286,
            "src": "261:18:1",
=======
            "id": 153,
            "mutability": "mutable",
            "name": "active",
            "nameLocation": "312:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 333,
            "src": "307:18:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 123,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "261:4:1",
=======
              "id": 151,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "307:4:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
<<<<<<< HEAD
              "id": 124,
=======
              "id": 152,
>>>>>>> main
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
<<<<<<< HEAD
              "src": "275:4:1",
=======
              "src": "321:4:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "CorporateFactory.corporate",
<<<<<<< HEAD
            "id": 132,
            "members": [
              {
                "constant": false,
                "id": 127,
                "mutability": "mutable",
                "name": "corpAddress",
                "nameLocation": "321:11:1",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "313:19:1",
=======
            "id": 160,
            "members": [
              {
                "constant": false,
                "id": 155,
                "mutability": "mutable",
                "name": "corpAddress",
                "nameLocation": "367:11:1",
                "nodeType": "VariableDeclaration",
                "scope": 160,
                "src": "359:19:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 126,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "313:7:1",
=======
                  "id": 154,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "359:7:1",
>>>>>>> main
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 129,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "347:2:1",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "342:7:1",
=======
                "id": 157,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "393:2:1",
                "nodeType": "VariableDeclaration",
                "scope": 160,
                "src": "388:7:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 128,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "342:4:1",
=======
                  "id": 156,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "388:4:1",
>>>>>>> main
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 131,
                "mutability": "mutable",
                "name": "valid",
                "nameLocation": "364:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 132,
                "src": "359:10:1",
=======
                "id": 159,
                "mutability": "mutable",
                "name": "valid",
                "nameLocation": "410:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 160,
                "src": "405:10:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 130,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "359:4:1",
=======
                  "id": 158,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "405:4:1",
>>>>>>> main
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "corporate",
<<<<<<< HEAD
            "nameLocation": "293:9:1",
            "nodeType": "StructDefinition",
            "scope": 286,
            "src": "286:90:1",
=======
            "nameLocation": "339:9:1",
            "nodeType": "StructDefinition",
            "scope": 333,
            "src": "332:90:1",
>>>>>>> main
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 140,
              "nodeType": "Block",
              "src": "396:35:1",
              "statements": [
                {
                  "expression": {
                    "id": 138,
=======
              "id": 175,
              "nodeType": "Block",
              "src": "454:59:1",
              "statements": [
                {
                  "expression": {
                    "id": 169,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 135,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "406:5:1",
=======
                      "id": 166,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 140,
                      "src": "464:5:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
<<<<<<< HEAD
                        "id": 136,
=======
                        "id": 167,
>>>>>>> main
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                        "src": "414:3:1",
=======
                        "src": "472:3:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
<<<<<<< HEAD
                      "id": 137,
=======
                      "id": 168,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "src": "414:10:1",
=======
                      "src": "472:10:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "src": "406:18:1",
=======
                    "src": "464:18:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "406:18:1"
                }
              ]
            },
            "id": 141,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "393:2:1"
            },
            "returnParameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "396:0:1"
            },
            "scope": 286,
            "src": "382:49:1",
=======
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "464:18:1"
                },
                {
                  "expression": {
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 171,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "492:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Admin_$134",
                        "typeString": "contract Admin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 172,
                      "name": "admin_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
                      "src": "500:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Admin_$134",
                        "typeString": "contract Admin"
                      }
                    },
                    "src": "492:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Admin_$134",
                      "typeString": "contract Admin"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "492:14:1"
                }
              ]
            },
            "id": 176,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "admin_",
                  "nameLocation": "446:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "440:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Admin_$134",
                    "typeString": "contract Admin"
                  },
                  "typeName": {
                    "id": 162,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 161,
                      "name": "Admin",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 134,
                      "src": "440:5:1"
                    },
                    "referencedDeclaration": 134,
                    "src": "440:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Admin_$134",
                      "typeString": "contract Admin"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "439:14:1"
            },
            "returnParameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "454:0:1"
            },
            "scope": 333,
            "src": "428:85:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 181,
              "nodeType": "Block",
              "src": "530:186:1",
              "statements": [
                {
                  "assignments": [
                    154
=======
              "id": 220,
              "nodeType": "Block",
              "src": "615:204:1",
              "statements": [
                {
                  "assignments": [
                    189
>>>>>>> main
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 154,
                      "mutability": "mutable",
                      "name": "newCorp",
                      "nameLocation": "550:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 181,
                      "src": "540:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Corporate_$516",
                        "typeString": "contract Corporate"
                      },
                      "typeName": {
                        "id": 153,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 152,
                          "name": "Corporate",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 516,
                          "src": "540:9:1"
                        },
                        "referencedDeclaration": 516,
                        "src": "540:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Corporate_$516",
=======
                      "id": 189,
                      "mutability": "mutable",
                      "name": "newCorp",
                      "nameLocation": "635:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 220,
                      "src": "625:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Corporate_$573",
                        "typeString": "contract Corporate"
                      },
                      "typeName": {
                        "id": 188,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 187,
                          "name": "Corporate",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 573,
                          "src": "625:9:1"
                        },
                        "referencedDeclaration": 573,
                        "src": "625:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Corporate_$573",
>>>>>>> main
                          "typeString": "contract Corporate"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 161,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 158,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "574:5:1",
=======
                  "id": 197,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 193,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "659:5:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 159,
                        "name": "corpName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "580:8:1",
=======
                        "id": 194,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "665:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Admin_$134",
                          "typeString": "contract Admin"
                        }
                      },
                      {
                        "id": 195,
                        "name": "corpName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "671:8:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
<<<<<<< HEAD
=======
                          "typeIdentifier": "t_contract$_Admin_$134",
                          "typeString": "contract Admin"
                        },
                        {
>>>>>>> main
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
<<<<<<< HEAD
                      "id": 157,
=======
                      "id": 192,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
<<<<<<< HEAD
                      "src": "560:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_string_memory_ptr_$returns$_t_contract$_Corporate_$516_$",
                        "typeString": "function (address,string memory) returns (contract Corporate)"
                      },
                      "typeName": {
                        "id": 156,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 155,
                          "name": "Corporate",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 516,
                          "src": "564:9:1"
                        },
                        "referencedDeclaration": 516,
                        "src": "564:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Corporate_$516",
=======
                      "src": "645:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_contract$_Admin_$134_$_t_string_memory_ptr_$returns$_t_contract$_Corporate_$573_$",
                        "typeString": "function (address,contract Admin,string memory) returns (contract Corporate)"
                      },
                      "typeName": {
                        "id": 191,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 190,
                          "name": "Corporate",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 573,
                          "src": "649:9:1"
                        },
                        "referencedDeclaration": 573,
                        "src": "649:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Corporate_$573",
>>>>>>> main
                          "typeString": "contract Corporate"
                        }
                      }
                    },
<<<<<<< HEAD
                    "id": 160,
=======
                    "id": 196,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "560:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Corporate_$516",
=======
                    "src": "645:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Corporate_$573",
>>>>>>> main
                      "typeString": "contract Corporate"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "540:49:1"
                },
                {
                  "expression": {
                    "id": 173,
=======
                  "src": "625:55:1"
                },
                {
                  "expression": {
                    "id": 209,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 162,
                        "name": "corporates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "599:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$132_storage_$",
                          "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                        }
                      },
                      "id": 164,
                      "indexExpression": {
                        "id": 163,
                        "name": "numCorps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "610:8:1",
=======
                        "id": 198,
                        "name": "corporates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "690:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$160_storage_$",
                          "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                        }
                      },
                      "id": 200,
                      "indexExpression": {
                        "id": 199,
                        "name": "numCorps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150,
                        "src": "701:8:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "599:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$132_storage",
=======
                      "src": "690:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$160_storage",
>>>>>>> main
                        "typeString": "struct CorporateFactory.corporate storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 168,
                              "name": "newCorp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 154,
                              "src": "640:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Corporate_$516",
=======
                              "id": 204,
                              "name": "newCorp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 189,
                              "src": "731:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Corporate_$573",
>>>>>>> main
                                "typeString": "contract Corporate"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
<<<<<<< HEAD
                                "typeIdentifier": "t_contract$_Corporate_$516",
                                "typeString": "contract Corporate"
                              }
                            ],
                            "id": 167,
=======
                                "typeIdentifier": "t_contract$_Corporate_$573",
                                "typeString": "contract Corporate"
                              }
                            ],
                            "id": 203,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "632:7:1",
=======
                            "src": "723:7:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 166,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "632:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 169,
=======
                              "id": 202,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "723:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 205,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "632:16:1",
=======
                          "src": "723:16:1",
>>>>>>> main
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
<<<<<<< HEAD
                          "id": 170,
                          "name": "numCorps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122,
                          "src": "650:8:1",
=======
                          "id": 206,
                          "name": "numCorps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 150,
                          "src": "741:8:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
<<<<<<< HEAD
                          "id": 171,
=======
                          "id": 207,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "660:4:1",
=======
                          "src": "751:4:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
<<<<<<< HEAD
                        "id": 165,
                        "name": "corporate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "622:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_corporate_$132_storage_ptr_$",
                          "typeString": "type(struct CorporateFactory.corporate storage pointer)"
                        }
                      },
                      "id": 172,
=======
                        "id": 201,
                        "name": "corporate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "713:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_corporate_$160_storage_ptr_$",
                          "typeString": "type(struct CorporateFactory.corporate storage pointer)"
                        }
                      },
                      "id": 208,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "622:43:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$132_memory_ptr",
                        "typeString": "struct CorporateFactory.corporate memory"
                      }
                    },
                    "src": "599:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_corporate_$132_storage",
                      "typeString": "struct CorporateFactory.corporate storage ref"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "599:66:1"
                },
                {
                  "expression": {
                    "id": 177,
=======
                      "src": "713:43:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$160_memory_ptr",
                        "typeString": "struct CorporateFactory.corporate memory"
                      }
                    },
                    "src": "690:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_corporate_$160_storage",
                      "typeString": "struct CorporateFactory.corporate storage ref"
                    }
                  },
                  "id": 210,
                  "nodeType": "ExpressionStatement",
                  "src": "690:66:1"
                },
                {
                  "expression": {
                    "id": 213,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 175,
                      "name": "numCorps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122,
                      "src": "675:8:1",
=======
                      "id": 211,
                      "name": "numCorps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "766:8:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
<<<<<<< HEAD
                      "id": 176,
=======
                      "id": 212,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "687:1:1",
=======
                      "src": "778:1:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
<<<<<<< HEAD
                    "src": "675:13:1",
=======
                    "src": "766:13:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "675:13:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "705:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 151,
                  "id": 180,
                  "nodeType": "Return",
                  "src": "698:11:1"
=======
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "766:13:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 217,
                        "name": "newCorp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 189,
                        "src": "804:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Corporate_$573",
                          "typeString": "contract Corporate"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Corporate_$573",
                          "typeString": "contract Corporate"
                        }
                      ],
                      "id": 216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "796:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 215,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "796:7:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "796:16:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 186,
                  "id": 219,
                  "nodeType": "Return",
                  "src": "789:23:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "a5102b37",
<<<<<<< HEAD
            "id": 182,
=======
            "id": 221,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 146,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 145,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 274,
                  "src": "489:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "489:12:1"
              },
              {
                "id": 148,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 147,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 285,
                  "src": "502:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "502:14:1"
              }
            ],
            "name": "createCorp",
            "nameLocation": "446:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 144,
=======
                "id": 181,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 180,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 321,
                  "src": "571:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "571:12:1"
              },
              {
                "id": 183,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 182,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 332,
                  "src": "584:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "584:14:1"
              }
            ],
            "name": "createCorp",
            "nameLocation": "528:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 179,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 143,
                  "mutability": "mutable",
                  "name": "corpName",
                  "nameLocation": "471:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 182,
                  "src": "457:22:1",
=======
                  "id": 178,
                  "mutability": "mutable",
                  "name": "corpName",
                  "nameLocation": "553:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "539:22:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 142,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "457:6:1",
=======
                    "id": 177,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "539:6:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "456:24:1"
            },
            "returnParameters": {
              "id": 151,
=======
              "src": "538:24:1"
            },
            "returnParameters": {
              "id": 186,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 150,
=======
                  "id": 185,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 182,
                  "src": "525:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "525:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
=======
                  "scope": 221,
                  "src": "607:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "607:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
>>>>>>> main
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "524:6:1"
            },
            "scope": 286,
            "src": "437:279:1",
=======
              "src": "606:9:1"
            },
            "scope": 333,
            "src": "519:300:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 198,
              "nodeType": "Block",
              "src": "811:50:1",
=======
              "id": 235,
              "nodeType": "Block",
              "src": "901:50:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 193,
                        "name": "corporates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "828:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$132_storage_$",
                          "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                        }
                      },
                      "id": 195,
                      "indexExpression": {
                        "id": 194,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 184,
                        "src": "839:2:1",
=======
                        "id": 230,
                        "name": "corporates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "918:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$160_storage_$",
                          "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                        }
                      },
                      "id": 232,
                      "indexExpression": {
                        "id": 231,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "929:2:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "828:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$132_storage",
                        "typeString": "struct CorporateFactory.corporate storage ref"
                      }
                    },
                    "id": 196,
=======
                      "src": "918:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$160_storage",
                        "typeString": "struct CorporateFactory.corporate storage ref"
                      }
                    },
                    "id": 233,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "corpAddress",
                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                    "referencedDeclaration": 127,
                    "src": "828:26:1",
=======
                    "referencedDeclaration": 155,
                    "src": "918:26:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 192,
                  "id": 197,
                  "nodeType": "Return",
                  "src": "821:33:1"
=======
                  "functionReturnParameters": 229,
                  "id": 234,
                  "nodeType": "Return",
                  "src": "911:33:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "010d6663",
<<<<<<< HEAD
            "id": 199,
=======
            "id": 236,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 187,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 186,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 274,
                  "src": "765:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "765:12:1"
              },
              {
                "id": 189,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 188,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 285,
                  "src": "778:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "778:14:1"
              }
            ],
            "name": "getCorporate",
            "nameLocation": "731:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 185,
=======
                "id": 226,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 225,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 332,
                  "src": "868:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "868:14:1"
              }
            ],
            "name": "getCorporate",
            "nameLocation": "834:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 224,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 184,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "749:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "744:7:1",
=======
                  "id": 223,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "852:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "847:7:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 183,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "744:4:1",
=======
                    "id": 222,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "847:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "743:9:1"
            },
            "returnParameters": {
              "id": 192,
=======
              "src": "846:9:1"
            },
            "returnParameters": {
              "id": 229,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 191,
=======
                  "id": 228,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 199,
                  "src": "801:7:1",
=======
                  "scope": 236,
                  "src": "891:7:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "801:7:1",
=======
                    "id": 227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "891:7:1",
>>>>>>> main
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "800:9:1"
            },
            "scope": 286,
            "src": "722:139:1",
=======
              "src": "890:9:1"
            },
            "scope": 333,
            "src": "825:126:1",
>>>>>>> main
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 214,
              "nodeType": "Block",
              "src": "937:57:1",
              "statements": [
                {
                  "expression": {
                    "id": 209,
=======
              "id": 251,
              "nodeType": "Block",
              "src": "1027:57:1",
              "statements": [
                {
                  "expression": {
                    "id": 246,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 206,
                      "name": "active",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 125,
                      "src": "947:6:1",
=======
                      "id": 243,
                      "name": "active",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153,
                      "src": "1037:6:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 208,
=======
                      "id": 245,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
<<<<<<< HEAD
                      "src": "956:7:1",
                      "subExpression": {
                        "id": 207,
                        "name": "active",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "957:6:1",
=======
                      "src": "1046:7:1",
                      "subExpression": {
                        "id": 244,
                        "name": "active",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "1047:6:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
<<<<<<< HEAD
                    "src": "947:16:1",
=======
                    "src": "1037:16:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 210,
                  "nodeType": "ExpressionStatement",
                  "src": "947:16:1"
=======
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "1037:16:1"
>>>>>>> main
                },
                {
                  "expression": {
                    "components": [
                      {
<<<<<<< HEAD
                        "id": 211,
                        "name": "active",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "980:6:1",
=======
                        "id": 248,
                        "name": "active",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "1070:6:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
<<<<<<< HEAD
                    "id": 212,
=======
                    "id": 249,
>>>>>>> main
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
<<<<<<< HEAD
                    "src": "979:8:1",
=======
                    "src": "1069:8:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 205,
                  "id": 213,
                  "nodeType": "Return",
                  "src": "973:14:1"
=======
                  "functionReturnParameters": 242,
                  "id": 250,
                  "nodeType": "Return",
                  "src": "1063:14:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "4aa2f240",
<<<<<<< HEAD
            "id": 215,
=======
            "id": 252,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 202,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 201,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 274,
                  "src": "910:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "910:12:1"
              }
            ],
            "name": "toggleContractActivation",
            "nameLocation": "876:24:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "900:2:1"
            },
            "returnParameters": {
              "id": 205,
=======
                "id": 239,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 238,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 321,
                  "src": "1000:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1000:12:1"
              }
            ],
            "name": "toggleContractActivation",
            "nameLocation": "966:24:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "990:2:1"
            },
            "returnParameters": {
              "id": 242,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 204,
=======
                  "id": 241,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 215,
                  "src": "932:4:1",
=======
                  "scope": 252,
                  "src": "1022:4:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 203,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "932:4:1",
=======
                    "id": 240,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1022:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "931:6:1"
            },
            "scope": 286,
            "src": "867:127:1",
=======
              "src": "1021:6:1"
            },
            "scope": 333,
            "src": "957:127:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 233,
              "nodeType": "Block",
              "src": "1084:45:1",
              "statements": [
                {
                  "expression": {
                    "id": 231,
=======
              "id": 272,
              "nodeType": "Block",
              "src": "1174:66:1",
              "statements": [
                {
                  "expression": {
                    "id": 268,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
<<<<<<< HEAD
                          "id": 226,
                          "name": "corporates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120,
                          "src": "1094:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$132_storage_$",
                            "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                          }
                        },
                        "id": 228,
                        "indexExpression": {
                          "id": 227,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 217,
                          "src": "1105:2:1",
=======
                          "id": 263,
                          "name": "corporates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 148,
                          "src": "1184:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$160_storage_$",
                            "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                          }
                        },
                        "id": 265,
                        "indexExpression": {
                          "id": 264,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 254,
                          "src": "1195:2:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
<<<<<<< HEAD
                        "src": "1094:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_corporate_$132_storage",
                          "typeString": "struct CorporateFactory.corporate storage ref"
                        }
                      },
                      "id": 229,
=======
                        "src": "1184:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_corporate_$160_storage",
                          "typeString": "struct CorporateFactory.corporate storage ref"
                        }
                      },
                      "id": 266,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "valid",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 131,
                      "src": "1094:20:1",
=======
                      "referencedDeclaration": 159,
                      "src": "1184:20:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
<<<<<<< HEAD
                      "id": 230,
=======
                      "id": 267,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "1117:5:1",
=======
                      "src": "1207:5:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
<<<<<<< HEAD
                    "src": "1094:28:1",
=======
                    "src": "1184:28:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "1094:28:1"
=======
                  "id": 269,
                  "nodeType": "ExpressionStatement",
                  "src": "1184:28:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1229:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 262,
                  "id": 271,
                  "nodeType": "Return",
                  "src": "1222:11:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "1f2e4f06",
<<<<<<< HEAD
            "id": 234,
=======
            "id": 273,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 220,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 219,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 274,
                  "src": "1042:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1042:12:1"
              },
              {
                "id": 222,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 221,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 285,
                  "src": "1055:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1055:14:1"
              }
            ],
            "name": "disableCorporate",
            "nameLocation": "1009:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 218,
=======
                "id": 257,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 256,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 321,
                  "src": "1132:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1132:12:1"
              },
              {
                "id": 259,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 258,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 332,
                  "src": "1145:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1145:14:1"
              }
            ],
            "name": "disableCorporate",
            "nameLocation": "1099:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 255,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 217,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1031:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "1026:7:1",
=======
                  "id": 254,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1121:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "1116:7:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 216,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1026:4:1",
=======
                    "id": 253,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1116:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1025:9:1"
            },
            "returnParameters": {
              "id": 225,
=======
              "src": "1115:9:1"
            },
            "returnParameters": {
              "id": 262,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 224,
=======
                  "id": 261,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 234,
                  "src": "1079:4:1",
=======
                  "scope": 273,
                  "src": "1169:4:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 223,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1079:4:1",
=======
                    "id": 260,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1169:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1078:6:1"
            },
            "scope": 286,
            "src": "1000:129:1",
=======
              "src": "1168:6:1"
            },
            "scope": 333,
            "src": "1090:150:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 261,
              "nodeType": "Block",
              "src": "1216:129:1",
=======
              "id": 300,
              "nodeType": "Block",
              "src": "1327:129:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 252,
=======
                        "id": 291,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
<<<<<<< HEAD
                              "id": 244,
                              "name": "corporates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 120,
                              "src": "1234:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$132_storage_$",
                                "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                              }
                            },
                            "id": 246,
                            "indexExpression": {
                              "id": 245,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 236,
                              "src": "1245:2:1",
=======
                              "id": 283,
                              "name": "corporates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 148,
                              "src": "1345:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$160_storage_$",
                                "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                              }
                            },
                            "id": 285,
                            "indexExpression": {
                              "id": 284,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 275,
                              "src": "1356:2:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "1234:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_corporate_$132_storage",
                              "typeString": "struct CorporateFactory.corporate storage ref"
                            }
                          },
                          "id": 247,
=======
                            "src": "1345:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_corporate_$160_storage",
                              "typeString": "struct CorporateFactory.corporate storage ref"
                            }
                          },
                          "id": 286,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "corpAddress",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 127,
                          "src": "1234:26:1",
=======
                          "referencedDeclaration": 155,
                          "src": "1345:26:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
<<<<<<< HEAD
                              "id": 250,
=======
                              "id": 289,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "1272:1:1",
=======
                              "src": "1383:1:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
<<<<<<< HEAD
                            "id": 249,
=======
                            "id": 288,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "1264:7:1",
=======
                            "src": "1375:7:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 248,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1264:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 251,
=======
                              "id": 287,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1375:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 290,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "1264:10:1",
=======
                          "src": "1375:10:1",
>>>>>>> main
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "1234:40:1",
=======
                        "src": "1345:40:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420612076616c696420636f72706f72617465",
<<<<<<< HEAD
                        "id": 253,
=======
                        "id": 292,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "1276:23:1",
=======
                        "src": "1387:23:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f6bc05d6cfec2f3d11cc140380ae93e4894c4ff78d29d480116a9b54f690ed81",
                          "typeString": "literal_string \"Not a valid corporate\""
                        },
                        "value": "Not a valid corporate"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f6bc05d6cfec2f3d11cc140380ae93e4894c4ff78d29d480116a9b54f690ed81",
                          "typeString": "literal_string \"Not a valid corporate\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 243,
=======
                      "id": 282,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "1226:7:1",
=======
                      "src": "1337:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 254,
=======
                    "id": 293,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1226:74:1",
=======
                    "src": "1337:74:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 255,
                  "nodeType": "ExpressionStatement",
                  "src": "1226:74:1"
=======
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "1337:74:1"
>>>>>>> main
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 256,
                        "name": "corporates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "1317:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$132_storage_$",
                          "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                        }
                      },
                      "id": 258,
                      "indexExpression": {
                        "id": 257,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "1328:2:1",
=======
                        "id": 295,
                        "name": "corporates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "1428:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_corporate_$160_storage_$",
                          "typeString": "mapping(uint256 => struct CorporateFactory.corporate storage ref)"
                        }
                      },
                      "id": 297,
                      "indexExpression": {
                        "id": 296,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "1439:2:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "1317:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$132_storage",
                        "typeString": "struct CorporateFactory.corporate storage ref"
                      }
                    },
                    "id": 259,
=======
                      "src": "1428:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_corporate_$160_storage",
                        "typeString": "struct CorporateFactory.corporate storage ref"
                      }
                    },
                    "id": 298,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "valid",
                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                    "referencedDeclaration": 131,
                    "src": "1317:20:1",
=======
                    "referencedDeclaration": 159,
                    "src": "1428:20:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 242,
                  "id": 260,
                  "nodeType": "Return",
                  "src": "1310:27:1"
=======
                  "functionReturnParameters": 281,
                  "id": 299,
                  "nodeType": "Return",
                  "src": "1421:27:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "dad15402",
<<<<<<< HEAD
            "id": 262,
=======
            "id": 301,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 239,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 238,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 285,
                  "src": "1187:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1187:14:1"
              }
            ],
            "name": "checkIfCorporateValid",
            "nameLocation": "1144:21:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 237,
=======
                "id": 278,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 277,
                  "name": "activeContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 332,
                  "src": "1298:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1298:14:1"
              }
            ],
            "name": "checkIfCorporateValid",
            "nameLocation": "1255:21:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 276,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 236,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1171:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "1166:7:1",
=======
                  "id": 275,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1282:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 301,
                  "src": "1277:7:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 235,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1166:4:1",
=======
                    "id": 274,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1277:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1165:9:1"
            },
            "returnParameters": {
              "id": 242,
=======
              "src": "1276:9:1"
            },
            "returnParameters": {
              "id": 281,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 241,
=======
                  "id": 280,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 262,
                  "src": "1211:4:1",
=======
                  "scope": 301,
                  "src": "1322:4:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 240,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1211:4:1",
=======
                    "id": 279,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1322:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1210:6:1"
            },
            "scope": 286,
            "src": "1135:210:1",
=======
              "src": "1321:6:1"
            },
            "scope": 333,
            "src": "1246:210:1",
>>>>>>> main
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 273,
              "nodeType": "Block",
              "src": "1377:99:1",
=======
              "id": 320,
              "nodeType": "Block",
              "src": "1488:137:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
<<<<<<< HEAD
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 268,
=======
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 315,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "expression": {
                            "id": 265,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1395:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1395:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 267,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "1409:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1395:19:1",
=======
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 304,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1506:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1506:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 306,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "1520:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1506:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 308,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1529:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 309,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1529:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 312,
                                "name": "admin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 143,
                                "src": "1551:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Admin_$134",
                                  "typeString": "contract Admin"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Admin_$134",
                                  "typeString": "contract Admin"
                                }
                              ],
                              "id": 311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1543:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 310,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1543:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1543:14:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1529:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1506:51:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
<<<<<<< HEAD
                        "hexValue": "4f6e6c7920746865206f776e65722063616e2061636365737320746869732066756e6374696f6e",
                        "id": 269,
=======
                        "hexValue": "4f6e6c7920746865206f776e65722f61646d696e2063616e2061636365737320746869732066756e6374696f6e",
                        "id": 316,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "1416:41:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d16f59b504098a079530c74a740fd9528074bf9303890ee5d92c6cda0f420382",
                          "typeString": "literal_string \"Only the owner can access this function\""
                        },
                        "value": "Only the owner can access this function"
=======
                        "src": "1559:47:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9117372dee0cc0d2de362cb86d76bf0d641de1fdff920d9111bc207da94e8744",
                          "typeString": "literal_string \"Only the owner/admin can access this function\""
                        },
                        "value": "Only the owner/admin can access this function"
>>>>>>> main
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_stringliteral_d16f59b504098a079530c74a740fd9528074bf9303890ee5d92c6cda0f420382",
                          "typeString": "literal_string \"Only the owner can access this function\""
                        }
                      ],
                      "id": 264,
=======
                          "typeIdentifier": "t_stringliteral_9117372dee0cc0d2de362cb86d76bf0d641de1fdff920d9111bc207da94e8744",
                          "typeString": "literal_string \"Only the owner/admin can access this function\""
                        }
                      ],
                      "id": 303,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "1387:7:1",
=======
                      "src": "1498:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 270,
=======
                    "id": 317,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1387:71:1",
=======
                    "src": "1498:109:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "1387:71:1"
                },
                {
                  "id": 272,
                  "nodeType": "PlaceholderStatement",
                  "src": "1468:1:1"
                }
              ]
            },
            "id": 274,
            "name": "permissioned",
            "nameLocation": "1364:12:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1377:0:1"
            },
            "src": "1355:121:1",
=======
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "1498:109:1"
                },
                {
                  "id": 319,
                  "nodeType": "PlaceholderStatement",
                  "src": "1617:1:1"
                }
              ]
            },
            "id": 321,
            "name": "permissioned",
            "nameLocation": "1475:12:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1488:0:1"
            },
            "src": "1466:159:1",
>>>>>>> main
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 284,
              "nodeType": "Block",
              "src": "1505:80:1",
=======
              "id": 331,
              "nodeType": "Block",
              "src": "1654:80:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
<<<<<<< HEAD
                        "id": 279,
=======
                        "id": 326,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 277,
                          "name": "active",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 125,
                          "src": "1523:6:1",
=======
                          "id": 324,
                          "name": "active",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153,
                          "src": "1672:6:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
<<<<<<< HEAD
                          "id": 278,
=======
                          "id": 325,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "1533:4:1",
=======
                          "src": "1682:4:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
<<<<<<< HEAD
                        "src": "1523:14:1",
=======
                        "src": "1672:14:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e7472616374206e6f206c6f6e67657220616374697665",
<<<<<<< HEAD
                        "id": 280,
=======
                        "id": 327,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "1539:27:1",
=======
                        "src": "1688:27:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f58632cc2fd82b679e2eb5e7970f18e723cc77db983190e019e39c32cbac431",
                          "typeString": "literal_string \"Contract no longer active\""
                        },
                        "value": "Contract no longer active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f58632cc2fd82b679e2eb5e7970f18e723cc77db983190e019e39c32cbac431",
                          "typeString": "literal_string \"Contract no longer active\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 276,
=======
                      "id": 323,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "1515:7:1",
=======
                      "src": "1664:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 281,
=======
                    "id": 328,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1515:52:1",
=======
                    "src": "1664:52:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "1515:52:1"
                },
                {
                  "id": 283,
                  "nodeType": "PlaceholderStatement",
                  "src": "1577:1:1"
                }
              ]
            },
            "id": 285,
            "name": "activeContract",
            "nameLocation": "1491:14:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1505:0:1"
            },
            "src": "1482:103:1",
=======
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "1664:52:1"
                },
                {
                  "id": 330,
                  "nodeType": "PlaceholderStatement",
                  "src": "1726:1:1"
                }
              ]
            },
            "id": 332,
            "name": "activeContract",
            "nameLocation": "1640:14:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1654:0:1"
            },
            "src": "1631:103:1",
>>>>>>> main
            "virtual": false,
            "visibility": "internal"
          }
        ],
<<<<<<< HEAD
        "scope": 658,
        "src": "61:1526:1",
=======
        "scope": 726,
        "src": "83:1653:1",
>>>>>>> main
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
<<<<<<< HEAD
          657
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 516,
        "linearizedBaseContracts": [
          516
        ],
        "name": "Corporate",
        "nameLocation": "1598:9:1",
=======
          725
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 573,
        "linearizedBaseContracts": [
          573
        ],
        "name": "Corporate",
        "nameLocation": "1747:9:1",
>>>>>>> main
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "89165e40",
<<<<<<< HEAD
            "id": 288,
            "mutability": "mutable",
            "name": "creator_",
            "nameLocation": "1629:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "1614:23:1",
=======
            "id": 335,
            "mutability": "mutable",
            "name": "creator_",
            "nameLocation": "1778:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "1763:23:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 287,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1614:7:1",
=======
              "id": 334,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1763:7:1",
>>>>>>> main
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
<<<<<<< HEAD
            "id": 290,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "1685:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "1670:20:1",
=======
            "id": 337,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "1834:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "1819:20:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 289,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1670:7:1",
=======
              "id": 336,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1819:7:1",
>>>>>>> main
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "functionSelector": "34929e9a",
            "id": 292,
            "mutability": "mutable",
            "name": "corporate_id",
            "nameLocation": "1751:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "1739:24:1",
=======
            "functionSelector": "f851a440",
            "id": 340,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "1901:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "1888:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Admin_$134",
              "typeString": "contract Admin"
            },
            "typeName": {
              "id": 339,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 338,
                "name": "Admin",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 134,
                "src": "1888:5:1"
              },
              "referencedDeclaration": 134,
              "src": "1888:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Admin_$134",
                "typeString": "contract Admin"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "34929e9a",
            "id": 342,
            "mutability": "mutable",
            "name": "corporate_id",
            "nameLocation": "1924:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "1912:24:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 291,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1739:4:1",
=======
              "id": 341,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1912:4:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8ba4d864",
<<<<<<< HEAD
            "id": 294,
            "mutability": "mutable",
            "name": "corporate_name_",
            "nameLocation": "1783:15:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "1769:29:1",
=======
            "id": 344,
            "mutability": "mutable",
            "name": "corporate_name_",
            "nameLocation": "1956:15:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "1942:29:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 293,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1769:6:1",
=======
              "id": 343,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1942:6:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "869080bf",
<<<<<<< HEAD
            "id": 299,
            "mutability": "mutable",
            "name": "subsidiaries",
            "nameLocation": "1859:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "1828:43:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$314_storage_$",
              "typeString": "mapping(address => struct Corporate.sub)"
            },
            "typeName": {
              "id": 298,
              "keyType": {
                "id": 295,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1836:7:1",
=======
            "id": 349,
            "mutability": "mutable",
            "name": "subsidiaries",
            "nameLocation": "2032:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "2001:43:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$364_storage_$",
              "typeString": "mapping(address => struct Corporate.sub)"
            },
            "typeName": {
              "id": 348,
              "keyType": {
                "id": 345,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2009:7:1",
>>>>>>> main
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "1828:23:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$314_storage_$",
                "typeString": "mapping(address => struct Corporate.sub)"
              },
              "valueType": {
                "id": 297,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 296,
                  "name": "sub",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 314,
                  "src": "1847:3:1"
                },
                "referencedDeclaration": 314,
                "src": "1847:3:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_sub_$314_storage_ptr",
=======
              "src": "2001:23:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$364_storage_$",
                "typeString": "mapping(address => struct Corporate.sub)"
              },
              "valueType": {
                "id": 347,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 346,
                  "name": "sub",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 364,
                  "src": "2020:3:1"
                },
                "referencedDeclaration": 364,
                "src": "2020:3:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_sub_$364_storage_ptr",
>>>>>>> main
                  "typeString": "struct Corporate.sub"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f8a64f9a",
<<<<<<< HEAD
            "id": 302,
            "mutability": "mutable",
            "name": "subs",
            "nameLocation": "1939:4:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "1922:21:1",
=======
            "id": 352,
            "mutability": "mutable",
            "name": "subs",
            "nameLocation": "2112:4:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "2095:21:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
<<<<<<< HEAD
                "id": 300,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1922:7:1",
=======
                "id": 350,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2095:7:1",
>>>>>>> main
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
<<<<<<< HEAD
              "id": 301,
              "nodeType": "ArrayTypeName",
              "src": "1922:9:1",
=======
              "id": 351,
              "nodeType": "ArrayTypeName",
              "src": "2095:9:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "93e59dc1",
<<<<<<< HEAD
            "id": 305,
            "mutability": "mutable",
            "name": "whitelist",
            "nameLocation": "2030:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "2013:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Whitelist_$1298",
              "typeString": "contract Whitelist"
            },
            "typeName": {
              "id": 304,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 303,
                "name": "Whitelist",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1298,
                "src": "2013:9:1"
              },
              "referencedDeclaration": 1298,
              "src": "2013:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Whitelist_$1298",
=======
            "id": 355,
            "mutability": "mutable",
            "name": "whitelist",
            "nameLocation": "2203:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "2186:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Whitelist_$1425",
              "typeString": "contract Whitelist"
            },
            "typeName": {
              "id": 354,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 353,
                "name": "Whitelist",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1425,
                "src": "2186:9:1"
              },
              "referencedDeclaration": 1425,
              "src": "2186:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Whitelist_$1425",
>>>>>>> main
                "typeString": "contract Whitelist"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 307,
            "mutability": "mutable",
            "name": "valid",
            "nameLocation": "2092:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 516,
            "src": "2087:10:1",
=======
            "id": 357,
            "mutability": "mutable",
            "name": "valid",
            "nameLocation": "2265:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "2260:10:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 306,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2087:4:1",
=======
              "id": 356,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2260:4:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Corporate.sub",
<<<<<<< HEAD
            "id": 314,
            "members": [
              {
                "constant": false,
                "id": 309,
                "mutability": "mutable",
                "name": "subAddress",
                "nameLocation": "2172:10:1",
                "nodeType": "VariableDeclaration",
                "scope": 314,
                "src": "2164:18:1",
=======
            "id": 364,
            "members": [
              {
                "constant": false,
                "id": 359,
                "mutability": "mutable",
                "name": "subAddress",
                "nameLocation": "2345:10:1",
                "nodeType": "VariableDeclaration",
                "scope": 364,
                "src": "2337:18:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 308,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2164:7:1",
=======
                  "id": 358,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2337:7:1",
>>>>>>> main
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 311,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "2197:2:1",
                "nodeType": "VariableDeclaration",
                "scope": 314,
                "src": "2192:7:1",
=======
                "id": 361,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "2370:2:1",
                "nodeType": "VariableDeclaration",
                "scope": 364,
                "src": "2365:7:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 310,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2192:4:1",
=======
                  "id": 360,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2365:4:1",
>>>>>>> main
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 313,
                "mutability": "mutable",
                "name": "valid",
                "nameLocation": "2214:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 314,
                "src": "2209:10:1",
=======
                "id": 363,
                "mutability": "mutable",
                "name": "valid",
                "nameLocation": "2387:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 364,
                "src": "2382:10:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 312,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2209:4:1",
=======
                  "id": 362,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2382:4:1",
>>>>>>> main
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "sub",
<<<<<<< HEAD
            "nameLocation": "2150:3:1",
            "nodeType": "StructDefinition",
            "scope": 516,
            "src": "2143:83:1",
=======
            "nameLocation": "2323:3:1",
            "nodeType": "StructDefinition",
            "scope": 573,
            "src": "2316:83:1",
>>>>>>> main
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 338,
              "nodeType": "Block",
              "src": "2357:121:1",
              "statements": [
                {
                  "expression": {
                    "id": 323,
=======
              "id": 395,
              "nodeType": "Block",
              "src": "2544:145:1",
              "statements": [
                {
                  "expression": {
                    "id": 376,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 321,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 290,
                      "src": "2367:5:1",
=======
                      "id": 374,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 337,
                      "src": "2554:5:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 322,
                      "name": "owner_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 316,
                      "src": "2375:6:1",
=======
                      "id": 375,
                      "name": "owner_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 366,
                      "src": "2562:6:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "src": "2367:14:1",
=======
                    "src": "2554:14:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "2367:14:1"
                },
                {
                  "expression": {
                    "id": 328,
=======
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "2554:14:1"
                },
                {
                  "expression": {
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 378,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 340,
                      "src": "2578:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Admin_$134",
                        "typeString": "contract Admin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 379,
                      "name": "admin_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 369,
                      "src": "2586:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Admin_$134",
                        "typeString": "contract Admin"
                      }
                    },
                    "src": "2578:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Admin_$134",
                      "typeString": "contract Admin"
                    }
                  },
                  "id": 381,
                  "nodeType": "ExpressionStatement",
                  "src": "2578:14:1"
                },
                {
                  "expression": {
                    "id": 385,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 325,
                      "name": "creator_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 288,
                      "src": "2391:8:1",
=======
                      "id": 382,
                      "name": "creator_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 335,
                      "src": "2602:8:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
<<<<<<< HEAD
                        "id": 326,
=======
                        "id": 383,
>>>>>>> main
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                        "src": "2402:3:1",
=======
                        "src": "2613:3:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
<<<<<<< HEAD
                      "id": 327,
=======
                      "id": 384,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "src": "2402:10:1",
=======
                      "src": "2613:10:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "src": "2391:21:1",
=======
                    "src": "2602:21:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "2391:21:1"
                },
                {
                  "expression": {
                    "id": 332,
=======
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "2602:21:1"
                },
                {
                  "expression": {
                    "id": 389,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 330,
                      "name": "corporate_name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 294,
                      "src": "2422:15:1",
=======
                      "id": 387,
                      "name": "corporate_name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 344,
                      "src": "2633:15:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 331,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 318,
                      "src": "2440:4:1",
=======
                      "id": 388,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 371,
                      "src": "2651:4:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
<<<<<<< HEAD
                    "src": "2422:22:1",
=======
                    "src": "2633:22:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
<<<<<<< HEAD
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "2422:22:1"
                },
                {
                  "expression": {
                    "id": 336,
=======
                  "id": 390,
                  "nodeType": "ExpressionStatement",
                  "src": "2633:22:1"
                },
                {
                  "expression": {
                    "id": 393,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 334,
                      "name": "valid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 307,
                      "src": "2455:5:1",
=======
                      "id": 391,
                      "name": "valid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 357,
                      "src": "2666:5:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
<<<<<<< HEAD
                      "id": 335,
=======
                      "id": 392,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "2463:4:1",
=======
                      "src": "2674:4:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
<<<<<<< HEAD
                    "src": "2455:12:1",
=======
                    "src": "2666:12:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "2455:12:1"
                }
              ]
            },
            "id": 339,
=======
                  "id": 394,
                  "nodeType": "ExpressionStatement",
                  "src": "2666:12:1"
                }
              ]
            },
            "id": 396,
>>>>>>> main
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 319,
=======
              "id": 372,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 316,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "2330:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 339,
                  "src": "2322:14:1",
=======
                  "id": 366,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "2503:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 396,
                  "src": "2495:14:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 315,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2322:7:1",
=======
                    "id": 365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2495:7:1",
>>>>>>> main
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 318,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "2352:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 339,
                  "src": "2338:18:1",
=======
                  "id": 369,
                  "mutability": "mutable",
                  "name": "admin_",
                  "nameLocation": "2517:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 396,
                  "src": "2511:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Admin_$134",
                    "typeString": "contract Admin"
                  },
                  "typeName": {
                    "id": 368,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 367,
                      "name": "Admin",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 134,
                      "src": "2511:5:1"
                    },
                    "referencedDeclaration": 134,
                    "src": "2511:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Admin_$134",
                      "typeString": "contract Admin"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 371,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "2539:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 396,
                  "src": "2525:18:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 317,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2338:6:1",
=======
                    "id": 370,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2525:6:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2321:36:1"
            },
            "returnParameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2357:0:1"
            },
            "scope": 516,
            "src": "2310:168:1",
=======
              "src": "2494:50:1"
            },
            "returnParameters": {
              "id": 373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2544:0:1"
            },
            "scope": 573,
            "src": "2483:206:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 400,
              "nodeType": "Block",
              "src": "2657:378:1",
=======
              "id": 457,
              "nodeType": "Block",
              "src": "2871:370:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 358,
=======
                        "id": 415,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "arguments": [
                            {
                              "id": 352,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 341,
                              "src": "2760:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 351,
                            "name": "getSubContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 417,
                            "src": "2745:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2745:18:1",
                          "tryCall": false,
=======
                          "baseExpression": {
                            "id": 408,
                            "name": "subs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 352,
                            "src": "2959:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 410,
                          "indexExpression": {
                            "id": 409,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 398,
                            "src": "2964:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2959:8:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
<<<<<<< HEAD
                        "operator": "!=",
=======
                        "operator": "==",
>>>>>>> main
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
<<<<<<< HEAD
                              "id": 356,
=======
                              "id": 413,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "2775:1:1",
=======
                              "src": "2979:1:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
<<<<<<< HEAD
                            "id": 355,
=======
                            "id": 412,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "2767:7:1",
=======
                            "src": "2971:7:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 354,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2767:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 357,
=======
                              "id": 411,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2971:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 414,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "2767:10:1",
=======
                          "src": "2971:10:1",
>>>>>>> main
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "2745:32:1",
=======
                        "src": "2959:22:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "id": 350,
=======
                      "id": 407,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "2737:7:1",
=======
                      "src": "2951:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 359,
=======
                    "id": 416,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2737:41:1",
=======
                    "src": "2951:31:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "2737:41:1"
                },
                {
                  "assignments": [
                    363
=======
                  "id": 417,
                  "nodeType": "ExpressionStatement",
                  "src": "2951:31:1"
                },
                {
                  "assignments": [
                    420
>>>>>>> main
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 363,
                      "mutability": "mutable",
                      "name": "newSub",
                      "nameLocation": "2799:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 400,
                      "src": "2788:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Subsidiary_$657",
                        "typeString": "contract Subsidiary"
                      },
                      "typeName": {
                        "id": 362,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 361,
                          "name": "Subsidiary",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 657,
                          "src": "2788:10:1"
                        },
                        "referencedDeclaration": 657,
                        "src": "2788:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Subsidiary_$657",
=======
                      "id": 420,
                      "mutability": "mutable",
                      "name": "newSub",
                      "nameLocation": "3003:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 457,
                      "src": "2992:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Subsidiary_$725",
                        "typeString": "contract Subsidiary"
                      },
                      "typeName": {
                        "id": 419,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 418,
                          "name": "Subsidiary",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 725,
                          "src": "2992:10:1"
                        },
                        "referencedDeclaration": 725,
                        "src": "2992:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Subsidiary_$725",
>>>>>>> main
                          "typeString": "contract Subsidiary"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 372,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 369,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2831:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Corporate_$516",
                              "typeString": "contract Corporate"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Corporate_$516",
                              "typeString": "contract Corporate"
                            }
                          ],
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2823:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 367,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2823:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2823:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
=======
                  "id": 426,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 424,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "3027:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Corporate_$573",
                          "typeString": "contract Corporate"
>>>>>>> main
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 366,
=======
                          "typeIdentifier": "t_contract$_Corporate_$573",
                          "typeString": "contract Corporate"
                        }
                      ],
                      "id": 423,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
<<<<<<< HEAD
                      "src": "2808:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Subsidiary_$657_$",
                        "typeString": "function (address) returns (contract Subsidiary)"
                      },
                      "typeName": {
                        "id": 365,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 364,
                          "name": "Subsidiary",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 657,
                          "src": "2812:10:1"
                        },
                        "referencedDeclaration": 657,
                        "src": "2812:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Subsidiary_$657",
=======
                      "src": "3012:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Corporate_$573_$returns$_t_contract$_Subsidiary_$725_$",
                        "typeString": "function (contract Corporate) returns (contract Subsidiary)"
                      },
                      "typeName": {
                        "id": 422,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 421,
                          "name": "Subsidiary",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 725,
                          "src": "3016:10:1"
                        },
                        "referencedDeclaration": 725,
                        "src": "3016:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Subsidiary_$725",
>>>>>>> main
                          "typeString": "contract Subsidiary"
                        }
                      }
                    },
<<<<<<< HEAD
                    "id": 371,
=======
                    "id": 425,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2808:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Subsidiary_$657",
=======
                    "src": "3012:20:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Subsidiary_$725",
>>>>>>> main
                      "typeString": "contract Subsidiary"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "2788:49:1"
=======
                  "src": "2992:40:1"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 378,
                            "name": "newSub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 363,
                            "src": "2865:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Subsidiary_$657",
=======
                            "id": 432,
                            "name": "newSub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 420,
                            "src": "3060:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Subsidiary_$725",
>>>>>>> main
                              "typeString": "contract Subsidiary"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
<<<<<<< HEAD
                              "typeIdentifier": "t_contract$_Subsidiary_$657",
                              "typeString": "contract Subsidiary"
                            }
                          ],
                          "id": 377,
=======
                              "typeIdentifier": "t_contract$_Subsidiary_$725",
                              "typeString": "contract Subsidiary"
                            }
                          ],
                          "id": 431,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "2857:7:1",
=======
                          "src": "3052:7:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 376,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2857:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 379,
=======
                            "id": 430,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3052:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 433,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "2857:15:1",
=======
                        "src": "3052:15:1",
>>>>>>> main
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 373,
                        "name": "subs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "2847:4:1",
=======
                        "id": 427,
                        "name": "subs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "3042:4:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
<<<<<<< HEAD
                      "id": 375,
=======
                      "id": 429,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "src": "2847:9:1",
=======
                      "src": "3042:9:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
<<<<<<< HEAD
                    "id": 380,
=======
                    "id": 434,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2847:26:1",
=======
                    "src": "3042:26:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 381,
                  "nodeType": "ExpressionStatement",
                  "src": "2847:26:1"
                },
                {
                  "expression": {
                    "id": 396,
=======
                  "id": 435,
                  "nodeType": "ExpressionStatement",
                  "src": "3042:26:1"
                },
                {
                  "expression": {
                    "id": 450,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 382,
                        "name": "subsidiaries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "2919:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$314_storage_$",
                          "typeString": "mapping(address => struct Corporate.sub storage ref)"
                        }
                      },
                      "id": 387,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 385,
                            "name": "newSub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 363,
                            "src": "2940:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Subsidiary_$657",
=======
                        "id": 436,
                        "name": "subsidiaries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 349,
                        "src": "3114:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$364_storage_$",
                          "typeString": "mapping(address => struct Corporate.sub storage ref)"
                        }
                      },
                      "id": 441,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 439,
                            "name": "newSub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 420,
                            "src": "3135:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Subsidiary_$725",
>>>>>>> main
                              "typeString": "contract Subsidiary"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
<<<<<<< HEAD
                              "typeIdentifier": "t_contract$_Subsidiary_$657",
                              "typeString": "contract Subsidiary"
                            }
                          ],
                          "id": 384,
=======
                              "typeIdentifier": "t_contract$_Subsidiary_$725",
                              "typeString": "contract Subsidiary"
                            }
                          ],
                          "id": 438,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "2932:7:1",
=======
                          "src": "3127:7:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 383,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2932:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 386,
=======
                            "id": 437,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3127:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 440,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "2932:15:1",
=======
                        "src": "3127:15:1",
>>>>>>> main
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "2919:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_sub_$314_storage",
=======
                      "src": "3114:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_sub_$364_storage",
>>>>>>> main
                        "typeString": "struct Corporate.sub storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 391,
                              "name": "newSub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 363,
                              "src": "2963:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Subsidiary_$657",
=======
                              "id": 445,
                              "name": "newSub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 420,
                              "src": "3158:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Subsidiary_$725",
>>>>>>> main
                                "typeString": "contract Subsidiary"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
<<<<<<< HEAD
                                "typeIdentifier": "t_contract$_Subsidiary_$657",
                                "typeString": "contract Subsidiary"
                              }
                            ],
                            "id": 390,
=======
                                "typeIdentifier": "t_contract$_Subsidiary_$725",
                                "typeString": "contract Subsidiary"
                              }
                            ],
                            "id": 444,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "2955:7:1",
=======
                            "src": "3150:7:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 389,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2955:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 392,
=======
                              "id": 443,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3150:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 446,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "2955:15:1",
=======
                          "src": "3150:15:1",
>>>>>>> main
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
<<<<<<< HEAD
                          "id": 393,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 341,
                          "src": "2972:2:1",
=======
                          "id": 447,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 398,
                          "src": "3167:2:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
<<<<<<< HEAD
                          "id": 394,
=======
                          "id": 448,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "2976:4:1",
=======
                          "src": "3171:4:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
<<<<<<< HEAD
                        "id": 388,
                        "name": "sub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 314,
                        "src": "2951:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_sub_$314_storage_ptr_$",
                          "typeString": "type(struct Corporate.sub storage pointer)"
                        }
                      },
                      "id": 395,
=======
                        "id": 442,
                        "name": "sub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 364,
                        "src": "3146:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_sub_$364_storage_ptr_$",
                          "typeString": "type(struct Corporate.sub storage pointer)"
                        }
                      },
                      "id": 449,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "2951:30:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_sub_$314_memory_ptr",
                        "typeString": "struct Corporate.sub memory"
                      }
                    },
                    "src": "2919:62:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_sub_$314_storage",
                      "typeString": "struct Corporate.sub storage ref"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "2919:62:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3024:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 349,
                  "id": 399,
                  "nodeType": "Return",
                  "src": "3017:11:1"
=======
                      "src": "3146:30:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_sub_$364_memory_ptr",
                        "typeString": "struct Corporate.sub memory"
                      }
                    },
                    "src": "3114:62:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_sub_$364_storage",
                      "typeString": "struct Corporate.sub storage ref"
                    }
                  },
                  "id": 451,
                  "nodeType": "ExpressionStatement",
                  "src": "3114:62:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 454,
                        "name": "newSub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 420,
                        "src": "3227:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Subsidiary_$725",
                          "typeString": "contract Subsidiary"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Subsidiary_$725",
                          "typeString": "contract Subsidiary"
                        }
                      ],
                      "id": 453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3219:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 452,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3219:7:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3219:15:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 406,
                  "id": 456,
                  "nodeType": "Return",
                  "src": "3212:22:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "805f4202",
<<<<<<< HEAD
            "id": 401,
=======
            "id": 458,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 344,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 343,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 505,
                  "src": "2617:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2617:12:1"
              },
              {
                "id": 346,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 345,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 515,
                  "src": "2630:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2630:13:1"
              }
            ],
            "name": "createSub",
            "nameLocation": "2590:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 342,
=======
                "id": 401,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 400,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 562,
                  "src": "2828:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2828:12:1"
              },
              {
                "id": 403,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 402,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "2841:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2841:13:1"
              }
            ],
            "name": "createSub",
            "nameLocation": "2801:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 399,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 341,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2605:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 401,
                  "src": "2600:7:1",
=======
                  "id": 398,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2816:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 458,
                  "src": "2811:7:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 340,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2600:4:1",
=======
                    "id": 397,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2811:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2599:9:1"
            },
            "returnParameters": {
              "id": 349,
=======
              "src": "2810:9:1"
            },
            "returnParameters": {
              "id": 406,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 348,
=======
                  "id": 405,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 401,
                  "src": "2652:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 347,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2652:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
=======
                  "scope": 458,
                  "src": "2863:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2863:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
>>>>>>> main
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2651:6:1"
            },
            "scope": 516,
            "src": "2581:454:1",
=======
              "src": "2862:9:1"
            },
            "scope": 573,
            "src": "2792:449:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 416,
              "nodeType": "Block",
              "src": "3168:32:1",
=======
              "id": 471,
              "nodeType": "Block",
              "src": "3361:32:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
<<<<<<< HEAD
                      "id": 412,
                      "name": "subs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "3185:4:1",
=======
                      "id": 467,
                      "name": "subs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 352,
                      "src": "3378:4:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
<<<<<<< HEAD
                    "id": 414,
                    "indexExpression": {
                      "id": 413,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 403,
                      "src": "3190:2:1",
=======
                    "id": 469,
                    "indexExpression": {
                      "id": 468,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 460,
                      "src": "3383:2:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
<<<<<<< HEAD
                    "src": "3185:8:1",
=======
                    "src": "3378:8:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 411,
                  "id": 415,
                  "nodeType": "Return",
                  "src": "3178:15:1"
=======
                  "functionReturnParameters": 466,
                  "id": 470,
                  "nodeType": "Return",
                  "src": "3371:15:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "f4111496",
<<<<<<< HEAD
            "id": 417,
=======
            "id": 472,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 406,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 405,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 505,
                  "src": "3123:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3123:12:1"
              },
              {
                "id": 408,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 407,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 515,
                  "src": "3136:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3136:13:1"
              }
            ],
            "name": "getSubContract",
            "nameLocation": "3087:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 404,
=======
                "id": 463,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 462,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "3329:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3329:13:1"
              }
            ],
            "name": "getSubContract",
            "nameLocation": "3293:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 461,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 403,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3107:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 417,
                  "src": "3102:7:1",
=======
                  "id": 460,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3313:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 472,
                  "src": "3308:7:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 402,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3102:4:1",
=======
                    "id": 459,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3308:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3101:9:1"
            },
            "returnParameters": {
              "id": 411,
=======
              "src": "3307:9:1"
            },
            "returnParameters": {
              "id": 466,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 410,
=======
                  "id": 465,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 417,
                  "src": "3158:7:1",
=======
                  "scope": 472,
                  "src": "3351:7:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 409,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3158:7:1",
=======
                    "id": 464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3351:7:1",
>>>>>>> main
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3157:9:1"
            },
            "scope": 516,
            "src": "3078:122:1",
=======
              "src": "3350:9:1"
            },
            "scope": 573,
            "src": "3284:109:1",
>>>>>>> main
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 444,
              "nodeType": "Block",
              "src": "3294:144:1",
=======
              "id": 499,
              "nodeType": "Block",
              "src": "3487:144:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 435,
=======
                        "id": 490,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
<<<<<<< HEAD
                              "id": 427,
                              "name": "subsidiaries",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "3312:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$314_storage_$",
                                "typeString": "mapping(address => struct Corporate.sub storage ref)"
                              }
                            },
                            "id": 429,
                            "indexExpression": {
                              "id": 428,
                              "name": "toCheck",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 419,
                              "src": "3325:7:1",
=======
                              "id": 482,
                              "name": "subsidiaries",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 349,
                              "src": "3505:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$364_storage_$",
                                "typeString": "mapping(address => struct Corporate.sub storage ref)"
                              }
                            },
                            "id": 484,
                            "indexExpression": {
                              "id": 483,
                              "name": "toCheck",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 474,
                              "src": "3518:7:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "3312:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_sub_$314_storage",
                              "typeString": "struct Corporate.sub storage ref"
                            }
                          },
                          "id": 430,
=======
                            "src": "3505:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_sub_$364_storage",
                              "typeString": "struct Corporate.sub storage ref"
                            }
                          },
                          "id": 485,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "subAddress",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 309,
                          "src": "3312:32:1",
=======
                          "referencedDeclaration": 359,
                          "src": "3505:32:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
<<<<<<< HEAD
                              "id": 433,
=======
                              "id": 488,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
<<<<<<< HEAD
                              "src": "3356:1:1",
=======
                              "src": "3549:1:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
<<<<<<< HEAD
                            "id": 432,
=======
                            "id": 487,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "3348:7:1",
=======
                            "src": "3541:7:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 431,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3348:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 434,
=======
                              "id": 486,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3541:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 489,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "3348:10:1",
=======
                          "src": "3541:10:1",
>>>>>>> main
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "3312:46:1",
=======
                        "src": "3505:46:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f74206120737562736964696172792061646472657373",
<<<<<<< HEAD
                        "id": 436,
=======
                        "id": 491,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "3360:26:1",
=======
                        "src": "3553:26:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_00e7c86a76d6b37cd7c008118063d660e33a645a376ceac3e4508a2776cb0688",
                          "typeString": "literal_string \"Not a subsidiary address\""
                        },
                        "value": "Not a subsidiary address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_00e7c86a76d6b37cd7c008118063d660e33a645a376ceac3e4508a2776cb0688",
                          "typeString": "literal_string \"Not a subsidiary address\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 426,
=======
                      "id": 481,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "3304:7:1",
=======
                      "src": "3497:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 437,
=======
                    "id": 492,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3304:83:1",
=======
                    "src": "3497:83:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 438,
                  "nodeType": "ExpressionStatement",
                  "src": "3304:83:1"
=======
                  "id": 493,
                  "nodeType": "ExpressionStatement",
                  "src": "3497:83:1"
>>>>>>> main
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 439,
                        "name": "subsidiaries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "3404:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$314_storage_$",
                          "typeString": "mapping(address => struct Corporate.sub storage ref)"
                        }
                      },
                      "id": 441,
                      "indexExpression": {
                        "id": 440,
                        "name": "toCheck",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 419,
                        "src": "3417:7:1",
=======
                        "id": 494,
                        "name": "subsidiaries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 349,
                        "src": "3597:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_sub_$364_storage_$",
                          "typeString": "mapping(address => struct Corporate.sub storage ref)"
                        }
                      },
                      "id": 496,
                      "indexExpression": {
                        "id": 495,
                        "name": "toCheck",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 474,
                        "src": "3610:7:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "3404:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_sub_$314_storage",
                        "typeString": "struct Corporate.sub storage ref"
                      }
                    },
                    "id": 442,
=======
                      "src": "3597:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_sub_$364_storage",
                        "typeString": "struct Corporate.sub storage ref"
                      }
                    },
                    "id": 497,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "valid",
                    "nodeType": "MemberAccess",
<<<<<<< HEAD
                    "referencedDeclaration": 313,
                    "src": "3404:27:1",
=======
                    "referencedDeclaration": 363,
                    "src": "3597:27:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 425,
                  "id": 443,
                  "nodeType": "Return",
                  "src": "3397:34:1"
=======
                  "functionReturnParameters": 480,
                  "id": 498,
                  "nodeType": "Return",
                  "src": "3590:34:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "6fdbaf43",
<<<<<<< HEAD
            "id": 445,
=======
            "id": 500,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 422,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 421,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 515,
                  "src": "3267:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3267:13:1"
              }
            ],
            "name": "checkIfSubsidiaryValid",
            "nameLocation": "3215:22:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 420,
=======
                "id": 477,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 476,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "3460:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3460:13:1"
              }
            ],
            "name": "checkIfSubsidiaryValid",
            "nameLocation": "3408:22:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 475,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 419,
                  "mutability": "mutable",
                  "name": "toCheck",
                  "nameLocation": "3246:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 445,
                  "src": "3238:15:1",
=======
                  "id": 474,
                  "mutability": "mutable",
                  "name": "toCheck",
                  "nameLocation": "3439:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 500,
                  "src": "3431:15:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3238:7:1",
=======
                    "id": 473,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3431:7:1",
>>>>>>> main
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3237:17:1"
            },
            "returnParameters": {
              "id": 425,
=======
              "src": "3430:17:1"
            },
            "returnParameters": {
              "id": 480,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 424,
=======
                  "id": 479,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 445,
                  "src": "3289:4:1",
=======
                  "scope": 500,
                  "src": "3482:4:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 423,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3289:4:1",
=======
                    "id": 478,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3482:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3288:6:1"
            },
            "scope": 516,
            "src": "3206:232:1",
=======
              "src": "3481:6:1"
            },
            "scope": 573,
            "src": "3399:232:1",
>>>>>>> main
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 474,
              "nodeType": "Block",
              "src": "3555:158:1",
=======
              "id": 529,
              "nodeType": "Block",
              "src": "3748:158:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
<<<<<<< HEAD
                        "id": 466,
=======
                        "id": 521,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
<<<<<<< HEAD
                          "id": 460,
=======
                          "id": 515,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
<<<<<<< HEAD
                                "id": 456,
                                "name": "whitelist_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 448,
                                "src": "3573:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Whitelist_$1298",
                                  "typeString": "contract Whitelist"
                                }
                              },
                              "id": 457,
=======
                                "id": 511,
                                "name": "whitelist_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 503,
                                "src": "3766:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Whitelist_$1425",
                                  "typeString": "contract Whitelist"
                                }
                              },
                              "id": 512,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 1280,
                              "src": "3573:16:1",
=======
                              "referencedDeclaration": 1407,
                              "src": "3766:16:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
<<<<<<< HEAD
                            "id": 458,
=======
                            "id": 513,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "3573:18:1",
=======
                            "src": "3766:18:1",
>>>>>>> main
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
<<<<<<< HEAD
                            "id": 459,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 290,
                            "src": "3595:5:1",
=======
                            "id": 514,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 337,
                            "src": "3788:5:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
<<<<<<< HEAD
                          "src": "3573:27:1",
=======
                          "src": "3766:27:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
<<<<<<< HEAD
                          "id": 465,
=======
                          "id": 520,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
<<<<<<< HEAD
                                "id": 461,
                                "name": "whitelist",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 305,
                                "src": "3604:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Whitelist_$1298",
                                  "typeString": "contract Whitelist"
                                }
                              },
                              "id": 462,
=======
                                "id": 516,
                                "name": "whitelist",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 355,
                                "src": "3797:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Whitelist_$1425",
                                  "typeString": "contract Whitelist"
                                }
                              },
                              "id": 517,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "referencedDeclaration": 1280,
                              "src": "3604:15:1",
=======
                              "referencedDeclaration": 1407,
                              "src": "3797:15:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
<<<<<<< HEAD
                            "id": 463,
=======
                            "id": 518,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "3604:17:1",
=======
                            "src": "3797:17:1",
>>>>>>> main
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
<<<<<<< HEAD
                            "id": 464,
                            "name": "creator_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 288,
                            "src": "3625:8:1",
=======
                            "id": 519,
                            "name": "creator_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 335,
                            "src": "3818:8:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
<<<<<<< HEAD
                          "src": "3604:29:1",
=======
                          "src": "3797:29:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD
                        "src": "3573:60:1",
=======
                        "src": "3766:60:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c697374206e6f742063726561746564206279206b6e6f776e207061727479",
<<<<<<< HEAD
                        "id": 467,
=======
                        "id": 522,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "3635:38:1",
=======
                        "src": "3828:38:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cf9dd211e1ca90d9268a7ae8097b7e406e991130fcf3aad7805d3e2292c4115c",
                          "typeString": "literal_string \"Whitelist not created by known party\""
                        },
                        "value": "Whitelist not created by known party"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cf9dd211e1ca90d9268a7ae8097b7e406e991130fcf3aad7805d3e2292c4115c",
                          "typeString": "literal_string \"Whitelist not created by known party\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 455,
=======
                      "id": 510,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "3565:7:1",
=======
                      "src": "3758:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 468,
=======
                    "id": 523,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3565:109:1",
=======
                    "src": "3758:109:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "3565:109:1"
                },
                {
                  "expression": {
                    "id": 472,
=======
                  "id": 524,
                  "nodeType": "ExpressionStatement",
                  "src": "3758:109:1"
                },
                {
                  "expression": {
                    "id": 527,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 470,
                      "name": "whitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 305,
                      "src": "3684:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$1298",
=======
                      "id": 525,
                      "name": "whitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 355,
                      "src": "3877:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$1425",
>>>>>>> main
                        "typeString": "contract Whitelist"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 471,
                      "name": "whitelist_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 448,
                      "src": "3696:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$1298",
                        "typeString": "contract Whitelist"
                      }
                    },
                    "src": "3684:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$1298",
                      "typeString": "contract Whitelist"
                    }
                  },
                  "id": 473,
                  "nodeType": "ExpressionStatement",
                  "src": "3684:22:1"
=======
                      "id": 526,
                      "name": "whitelist_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 503,
                      "src": "3889:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$1425",
                        "typeString": "contract Whitelist"
                      }
                    },
                    "src": "3877:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$1425",
                      "typeString": "contract Whitelist"
                    }
                  },
                  "id": 528,
                  "nodeType": "ExpressionStatement",
                  "src": "3877:22:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "3d0f963e",
<<<<<<< HEAD
            "id": 475,
=======
            "id": 530,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 451,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 450,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 505,
                  "src": "3528:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3528:12:1"
              },
              {
                "id": 453,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 452,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 515,
                  "src": "3541:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3541:13:1"
              }
            ],
            "name": "updateWhitelist",
            "nameLocation": "3483:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 449,
=======
                "id": 506,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 505,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 562,
                  "src": "3721:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3721:12:1"
              },
              {
                "id": 508,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 507,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "3734:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3734:13:1"
              }
            ],
            "name": "updateWhitelist",
            "nameLocation": "3676:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 504,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 448,
                  "mutability": "mutable",
                  "name": "whitelist_",
                  "nameLocation": "3509:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "3499:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Whitelist_$1298",
                    "typeString": "contract Whitelist"
                  },
                  "typeName": {
                    "id": 447,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 446,
                      "name": "Whitelist",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1298,
                      "src": "3499:9:1"
                    },
                    "referencedDeclaration": 1298,
                    "src": "3499:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$1298",
=======
                  "id": 503,
                  "mutability": "mutable",
                  "name": "whitelist_",
                  "nameLocation": "3702:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "3692:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Whitelist_$1425",
                    "typeString": "contract Whitelist"
                  },
                  "typeName": {
                    "id": 502,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 501,
                      "name": "Whitelist",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1425,
                      "src": "3692:9:1"
                    },
                    "referencedDeclaration": 1425,
                    "src": "3692:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$1425",
>>>>>>> main
                      "typeString": "contract Whitelist"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3498:22:1"
            },
            "returnParameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3555:0:1"
            },
            "scope": 516,
            "src": "3474:239:1",
=======
              "src": "3691:22:1"
            },
            "returnParameters": {
              "id": 509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3748:0:1"
            },
            "scope": 573,
            "src": "3667:239:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 488,
              "nodeType": "Block",
              "src": "3822:30:1",
              "statements": [
                {
                  "expression": {
                    "id": 486,
=======
              "id": 545,
              "nodeType": "Block",
              "src": "4015:52:1",
              "statements": [
                {
                  "expression": {
                    "id": 541,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 484,
                      "name": "valid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 307,
                      "src": "3832:5:1",
=======
                      "id": 539,
                      "name": "valid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 357,
                      "src": "4025:5:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
<<<<<<< HEAD
                      "id": 485,
=======
                      "id": 540,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "3840:5:1",
=======
                      "src": "4033:5:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
<<<<<<< HEAD
                    "src": "3832:13:1",
=======
                    "src": "4025:13:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 487,
                  "nodeType": "ExpressionStatement",
                  "src": "3832:13:1"
=======
                  "id": 542,
                  "nodeType": "ExpressionStatement",
                  "src": "4025:13:1"
                },
                {
                  "expression": {
                    "id": 543,
                    "name": "valid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 357,
                    "src": "4055:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 538,
                  "id": 544,
                  "nodeType": "Return",
                  "src": "4048:12:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "98f4448a",
<<<<<<< HEAD
            "id": 489,
=======
            "id": 546,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 478,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 477,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 505,
                  "src": "3782:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3782:12:1"
              },
              {
                "id": 480,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 479,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 515,
                  "src": "3795:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3795:13:1"
              }
            ],
            "name": "disableCorporate",
            "nameLocation": "3756:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3772:2:1"
            },
            "returnParameters": {
              "id": 483,
=======
                "id": 533,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 532,
                  "name": "permissioned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 562,
                  "src": "3975:12:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3975:12:1"
              },
              {
                "id": 535,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 534,
                  "name": "validContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "3988:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3988:13:1"
              }
            ],
            "name": "disableCorporate",
            "nameLocation": "3949:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3965:2:1"
            },
            "returnParameters": {
              "id": 538,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 482,
=======
                  "id": 537,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 489,
                  "src": "3817:4:1",
=======
                  "scope": 546,
                  "src": "4010:4:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 481,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3817:4:1",
=======
                    "id": 536,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4010:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3816:6:1"
            },
            "scope": 516,
            "src": "3747:105:1",
=======
              "src": "4009:6:1"
            },
            "scope": 573,
            "src": "3940:127:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 504,
              "nodeType": "Block",
              "src": "3880:82:1",
=======
              "id": 561,
              "nodeType": "Block",
              "src": "4095:82:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
<<<<<<< HEAD
                        "id": 500,
=======
                        "id": 557,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
<<<<<<< HEAD
                          "id": 495,
=======
                          "id": 552,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
<<<<<<< HEAD
                              "id": 492,
=======
                              "id": 549,
>>>>>>> main
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                              "src": "3898:3:1",
=======
                              "src": "4113:3:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
<<<<<<< HEAD
                            "id": 493,
=======
                            "id": 550,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "src": "3898:10:1",
=======
                            "src": "4113:10:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
<<<<<<< HEAD
                            "id": 494,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 290,
                            "src": "3912:5:1",
=======
                            "id": 551,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 337,
                            "src": "4127:5:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
<<<<<<< HEAD
                          "src": "3898:19:1",
=======
                          "src": "4113:19:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
<<<<<<< HEAD
                          "id": 499,
=======
                          "id": 556,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
<<<<<<< HEAD
                              "id": 496,
=======
                              "id": 553,
>>>>>>> main
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                              "src": "3921:3:1",
=======
                              "src": "4136:3:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
<<<<<<< HEAD
                            "id": 497,
=======
                            "id": 554,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "src": "3921:10:1",
=======
                            "src": "4136:10:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
<<<<<<< HEAD
                            "id": 498,
                            "name": "creator_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 288,
                            "src": "3935:8:1",
=======
                            "id": 555,
                            "name": "creator_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 335,
                            "src": "4150:8:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
<<<<<<< HEAD
                          "src": "3921:22:1",
=======
                          "src": "4136:22:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD
                        "src": "3898:45:1",
=======
                        "src": "4113:45:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "id": 491,
=======
                      "id": 548,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "3890:7:1",
=======
                      "src": "4105:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 501,
=======
                    "id": 558,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3890:54:1",
=======
                    "src": "4105:54:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 502,
                  "nodeType": "ExpressionStatement",
                  "src": "3890:54:1"
                },
                {
                  "id": 503,
                  "nodeType": "PlaceholderStatement",
                  "src": "3954:1:1"
                }
              ]
            },
            "id": 505,
            "name": "permissioned",
            "nameLocation": "3867:12:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3880:0:1"
            },
            "src": "3858:104:1",
=======
                  "id": 559,
                  "nodeType": "ExpressionStatement",
                  "src": "4105:54:1"
                },
                {
                  "id": 560,
                  "nodeType": "PlaceholderStatement",
                  "src": "4169:1:1"
                }
              ]
            },
            "id": 562,
            "name": "permissioned",
            "nameLocation": "4082:12:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4095:0:1"
            },
            "src": "4073:104:1",
>>>>>>> main
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 514,
              "nodeType": "Block",
              "src": "3991:50:1",
=======
              "id": 571,
              "nodeType": "Block",
              "src": "4206:50:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
<<<<<<< HEAD
                        "id": 510,
=======
                        "id": 567,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 508,
                          "name": "valid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "4009:5:1",
=======
                          "id": 565,
                          "name": "valid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 357,
                          "src": "4224:5:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
<<<<<<< HEAD
                          "id": 509,
=======
                          "id": 566,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "4018:4:1",
=======
                          "src": "4233:4:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
<<<<<<< HEAD
                        "src": "4009:13:1",
=======
                        "src": "4224:13:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "id": 507,
=======
                      "id": 564,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "4001:7:1",
=======
                      "src": "4216:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 511,
=======
                    "id": 568,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "4001:22:1",
=======
                    "src": "4216:22:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 512,
                  "nodeType": "ExpressionStatement",
                  "src": "4001:22:1"
                },
                {
                  "id": 513,
                  "nodeType": "PlaceholderStatement",
                  "src": "4033:1:1"
                }
              ]
            },
            "id": 515,
            "name": "validContract",
            "nameLocation": "3977:13:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3991:0:1"
            },
            "src": "3968:73:1",
=======
                  "id": 569,
                  "nodeType": "ExpressionStatement",
                  "src": "4216:22:1"
                },
                {
                  "id": 570,
                  "nodeType": "PlaceholderStatement",
                  "src": "4248:1:1"
                }
              ]
            },
            "id": 572,
            "name": "validContract",
            "nameLocation": "4192:13:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 563,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4206:0:1"
            },
            "src": "4183:73:1",
>>>>>>> main
            "virtual": false,
            "visibility": "internal"
          }
        ],
<<<<<<< HEAD
        "scope": 658,
        "src": "1589:2454:1",
=======
        "scope": 726,
        "src": "1738:2520:1",
>>>>>>> main
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
<<<<<<< HEAD
        "id": 657,
        "linearizedBaseContracts": [
          657
        ],
        "name": "Subsidiary",
        "nameLocation": "4119:10:1",
=======
        "id": 725,
        "linearizedBaseContracts": [
          725
        ],
        "name": "Subsidiary",
        "nameLocation": "4334:10:1",
>>>>>>> main
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "b119a9d6",
<<<<<<< HEAD
            "id": 518,
            "mutability": "mutable",
            "name": "parent_",
            "nameLocation": "4159:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 657,
            "src": "4136:30:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 517,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4136:15:1",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
=======
            "id": 576,
            "mutability": "mutable",
            "name": "parent_",
            "nameLocation": "4368:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 725,
            "src": "4351:24:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Corporate_$573",
              "typeString": "contract Corporate"
            },
            "typeName": {
              "id": 575,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 574,
                "name": "Corporate",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 573,
                "src": "4351:9:1"
              },
              "referencedDeclaration": 573,
              "src": "4351:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Corporate_$573",
                "typeString": "contract Corporate"
>>>>>>> main
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 520,
            "mutability": "mutable",
            "name": "amount",
            "nameLocation": "4199:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 657,
            "src": "4194:11:1",
=======
            "id": 578,
            "mutability": "mutable",
            "name": "amount",
            "nameLocation": "4408:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 725,
            "src": "4403:11:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 519,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "4194:4:1",
=======
              "id": 577,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "4403:4:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 524,
            "mutability": "mutable",
            "name": "permissionedAddress",
            "nameLocation": "4255:19:1",
            "nodeType": "VariableDeclaration",
            "scope": 657,
            "src": "4222:52:1",
=======
            "id": 582,
            "mutability": "mutable",
            "name": "permissionedAddress",
            "nameLocation": "4464:19:1",
            "nodeType": "VariableDeclaration",
            "scope": 725,
            "src": "4431:52:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 523,
              "keyType": {
                "id": 521,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4230:7:1",
=======
              "id": 581,
              "keyType": {
                "id": 579,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4439:7:1",
>>>>>>> main
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "4222:24:1",
=======
              "src": "4431:24:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
<<<<<<< HEAD
                "id": 522,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "4241:4:1",
=======
                "id": 580,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "4450:4:1",
>>>>>>> main
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
<<<<<<< HEAD
            "id": 530,
            "name": "ValueReceived",
            "nameLocation": "4349:13:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 529,
=======
            "id": 588,
            "name": "ValueReceived",
            "nameLocation": "4558:13:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 587,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 526,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "4371:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "4363:12:1",
=======
                  "id": 584,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "4580:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "4572:12:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 525,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4363:7:1",
=======
                    "id": 583,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4572:7:1",
>>>>>>> main
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 528,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4382:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "4377:11:1",
=======
                  "id": 586,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4591:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "4586:11:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 527,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4377:4:1",
=======
                    "id": 585,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4586:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4362:27:1"
            },
            "src": "4343:47:1"
          },
          {
            "canonicalName": "Subsidiary.transaction",
            "id": 537,
            "members": [
              {
                "constant": false,
                "id": 532,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "4430:2:1",
                "nodeType": "VariableDeclaration",
                "scope": 537,
                "src": "4425:7:1",
=======
              "src": "4571:27:1"
            },
            "src": "4552:47:1"
          },
          {
            "canonicalName": "Subsidiary.transaction",
            "id": 595,
            "members": [
              {
                "constant": false,
                "id": 590,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "4639:2:1",
                "nodeType": "VariableDeclaration",
                "scope": 595,
                "src": "4634:7:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 531,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "4425:4:1",
=======
                  "id": 589,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "4634:4:1",
>>>>>>> main
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 534,
                "mutability": "mutable",
                "name": "receiver_id",
                "nameLocation": "4451:11:1",
                "nodeType": "VariableDeclaration",
                "scope": 537,
                "src": "4443:19:1",
=======
                "id": 592,
                "mutability": "mutable",
                "name": "receiver_id",
                "nameLocation": "4660:11:1",
                "nodeType": "VariableDeclaration",
                "scope": 595,
                "src": "4652:19:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 533,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "4443:7:1",
=======
                  "id": 591,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "4652:7:1",
>>>>>>> main
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 536,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "4477:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 537,
                "src": "4472:11:1",
=======
                "id": 594,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "4686:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 595,
                "src": "4681:11:1",
>>>>>>> main
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 535,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "4472:4:1",
=======
                  "id": 593,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "4681:4:1",
>>>>>>> main
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "transaction",
<<<<<<< HEAD
            "nameLocation": "4404:11:1",
            "nodeType": "StructDefinition",
            "scope": 657,
            "src": "4397:93:1",
=======
            "nameLocation": "4613:11:1",
            "nodeType": "StructDefinition",
            "scope": 725,
            "src": "4606:93:1",
>>>>>>> main
            "visibility": "public"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 542,
            "mutability": "mutable",
            "name": "transactions",
            "nameLocation": "4560:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 657,
            "src": "4531:41:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_transaction_$537_storage_$",
              "typeString": "mapping(uint256 => struct Subsidiary.transaction)"
            },
            "typeName": {
              "id": 541,
              "keyType": {
                "id": 538,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "4539:4:1",
=======
            "id": 600,
            "mutability": "mutable",
            "name": "transactions",
            "nameLocation": "4769:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 725,
            "src": "4740:41:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_transaction_$595_storage_$",
              "typeString": "mapping(uint256 => struct Subsidiary.transaction)"
            },
            "typeName": {
              "id": 599,
              "keyType": {
                "id": 596,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "4748:4:1",
>>>>>>> main
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "4531:28:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_transaction_$537_storage_$",
                "typeString": "mapping(uint256 => struct Subsidiary.transaction)"
              },
              "valueType": {
                "id": 540,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 539,
                  "name": "transaction",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 537,
                  "src": "4547:11:1"
                },
                "referencedDeclaration": 537,
                "src": "4547:11:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_transaction_$537_storage_ptr",
=======
              "src": "4740:28:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_transaction_$595_storage_$",
                "typeString": "mapping(uint256 => struct Subsidiary.transaction)"
              },
              "valueType": {
                "id": 598,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 597,
                  "name": "transaction",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 595,
                  "src": "4756:11:1"
                },
                "referencedDeclaration": 595,
                "src": "4756:11:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_transaction_$595_storage_ptr",
>>>>>>> main
                  "typeString": "struct Subsidiary.transaction"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 544,
            "mutability": "mutable",
            "name": "numOfTransactions",
            "nameLocation": "4675:17:1",
            "nodeType": "VariableDeclaration",
            "scope": 657,
            "src": "4670:22:1",
=======
            "id": 602,
            "mutability": "mutable",
            "name": "numOfTransactions",
            "nameLocation": "4884:17:1",
            "nodeType": "VariableDeclaration",
            "scope": 725,
            "src": "4879:22:1",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 543,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "4670:4:1",
=======
              "id": 601,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "4879:4:1",
>>>>>>> main
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 560,
              "nodeType": "Block",
              "src": "4726:62:1",
              "statements": [
                {
                  "expression": {
                    "id": 554,
=======
              "id": 616,
              "nodeType": "Block",
              "src": "4936:51:1",
              "statements": [
                {
                  "expression": {
                    "id": 610,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 549,
                      "name": "parent_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "4736:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
=======
                      "id": 608,
                      "name": "parent_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 576,
                      "src": "4946:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Corporate_$573",
                        "typeString": "contract Corporate"
>>>>>>> main
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "arguments": [
                        {
                          "id": 552,
                          "name": "parent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 546,
                          "src": "4754:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4746:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 550,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4746:8:1",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4746:15:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4736:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 555,
                  "nodeType": "ExpressionStatement",
                  "src": "4736:25:1"
                },
                {
                  "expression": {
                    "id": 558,
=======
                      "id": 609,
                      "name": "corp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 605,
                      "src": "4956:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Corporate_$573",
                        "typeString": "contract Corporate"
                      }
                    },
                    "src": "4946:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Corporate_$573",
                      "typeString": "contract Corporate"
                    }
                  },
                  "id": 611,
                  "nodeType": "ExpressionStatement",
                  "src": "4946:14:1"
                },
                {
                  "expression": {
                    "id": 614,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 556,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 520,
                      "src": "4771:6:1",
=======
                      "id": 612,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 578,
                      "src": "4970:6:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
<<<<<<< HEAD
                      "id": 557,
=======
                      "id": 613,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "4780:1:1",
=======
                      "src": "4979:1:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
<<<<<<< HEAD
                    "src": "4771:10:1",
=======
                    "src": "4970:10:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 559,
                  "nodeType": "ExpressionStatement",
                  "src": "4771:10:1"
                }
              ]
            },
            "id": 561,
=======
                  "id": 615,
                  "nodeType": "ExpressionStatement",
                  "src": "4970:10:1"
                }
              ]
            },
            "id": 617,
>>>>>>> main
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 547,
=======
              "id": 606,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 546,
                  "mutability": "mutable",
                  "name": "parent",
                  "nameLocation": "4718:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 561,
                  "src": "4710:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4710:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
=======
                  "id": 605,
                  "mutability": "mutable",
                  "name": "corp",
                  "nameLocation": "4930:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "4920:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Corporate_$573",
                    "typeString": "contract Corporate"
                  },
                  "typeName": {
                    "id": 604,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 603,
                      "name": "Corporate",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 573,
                      "src": "4920:9:1"
                    },
                    "referencedDeclaration": 573,
                    "src": "4920:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Corporate_$573",
                      "typeString": "contract Corporate"
>>>>>>> main
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4709:16:1"
            },
            "returnParameters": {
              "id": 548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4726:0:1"
            },
            "scope": 657,
            "src": "4698:90:1",
=======
              "src": "4919:16:1"
            },
            "returnParameters": {
              "id": 607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4936:0:1"
            },
            "scope": 725,
            "src": "4908:79:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 581,
              "nodeType": "Block",
              "src": "5005:154:1",
              "statements": [
                {
                  "assignments": [
                    569
=======
              "id": 643,
              "nodeType": "Block",
              "src": "5204:172:1",
              "statements": [
                {
                  "assignments": [
                    625
>>>>>>> main
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 569,
                      "mutability": "mutable",
                      "name": "prevAmount",
                      "nameLocation": "5020:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 581,
                      "src": "5015:15:1",
=======
                      "id": 625,
                      "mutability": "mutable",
                      "name": "prevAmount",
                      "nameLocation": "5219:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 643,
                      "src": "5214:15:1",
>>>>>>> main
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 568,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5015:4:1",
=======
                        "id": 624,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5214:4:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 571,
                  "initialValue": {
                    "id": 570,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 520,
                    "src": "5033:6:1",
=======
                  "id": 627,
                  "initialValue": {
                    "id": 626,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 578,
                    "src": "5232:6:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "5015:24:1"
                },
                {
                  "expression": {
                    "id": 574,
=======
                  "src": "5214:24:1"
                },
                {
                  "expression": {
                    "id": 630,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 572,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 520,
                      "src": "5049:6:1",
=======
                      "id": 628,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 578,
                      "src": "5248:6:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
<<<<<<< HEAD
                      "id": 573,
=======
                      "id": 629,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "5058:1:1",
=======
                      "src": "5257:1:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
<<<<<<< HEAD
                    "src": "5049:10:1",
=======
                    "src": "5248:10:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 575,
                  "nodeType": "ExpressionStatement",
                  "src": "5049:10:1"
=======
                  "id": 631,
                  "nodeType": "ExpressionStatement",
                  "src": "5248:10:1"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 578,
                        "name": "prevAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 569,
                        "src": "5089:10:1",
=======
                        "id": 640,
                        "name": "prevAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 625,
                        "src": "5306:10:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 576,
                        "name": "parent_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 518,
                        "src": "5076:7:1",
=======
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 636,
                                "name": "parent_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 576,
                                "src": "5291:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Corporate_$573",
                                  "typeString": "contract Corporate"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Corporate_$573",
                                  "typeString": "contract Corporate"
                                }
                              ],
                              "id": 635,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5283:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 634,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5283:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5283:16:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5275:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 632,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5275:8:1",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5275:25:1",
                        "tryCall": false,
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
<<<<<<< HEAD
                      "id": 577,
=======
                      "id": 639,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "send",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "src": "5076:12:1",
=======
                      "src": "5275:30:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
<<<<<<< HEAD
                    "id": 579,
=======
                    "id": 641,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5076:24:1",
=======
                    "src": "5275:42:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 567,
                  "id": 580,
                  "nodeType": "Return",
                  "src": "5069:31:1"
=======
                  "functionReturnParameters": 623,
                  "id": 642,
                  "nodeType": "Return",
                  "src": "5268:49:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "8b734233",
<<<<<<< HEAD
            "id": 582,
=======
            "id": 644,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 564,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 563,
                  "name": "accountsAccess",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 656,
                  "src": "4975:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4975:14:1"
              }
            ],
            "name": "getTake",
            "nameLocation": "4950:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4957:2:1"
            },
            "returnParameters": {
              "id": 567,
=======
                "id": 620,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 619,
                  "name": "accountsAccess",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 724,
                  "src": "5174:14:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "5174:14:1"
              }
            ],
            "name": "getTake",
            "nameLocation": "5149:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5156:2:1"
            },
            "returnParameters": {
              "id": 623,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 566,
=======
                  "id": 622,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 582,
                  "src": "4998:4:1",
=======
                  "scope": 644,
                  "src": "5197:4:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 565,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4998:4:1",
=======
                    "id": 621,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5197:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "4997:6:1"
            },
            "scope": 657,
            "src": "4941:218:1",
=======
              "src": "5196:6:1"
            },
            "scope": 725,
            "src": "5140:236:1",
>>>>>>> main
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 615,
              "nodeType": "Block",
              "src": "5355:230:1",
=======
              "id": 677,
              "nodeType": "Block",
              "src": "5572:230:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 599,
=======
                        "id": 661,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
<<<<<<< HEAD
                            "id": 596,
                            "name": "person_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 586,
                            "src": "5373:9:1",
=======
                            "id": 658,
                            "name": "person_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 648,
                            "src": "5590:9:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
<<<<<<< HEAD
                          "id": 597,
=======
                          "id": 659,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "src": "5373:17:1",
=======
                          "src": "5590:17:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
<<<<<<< HEAD
                          "id": 598,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 520,
                          "src": "5394:6:1",
=======
                          "id": 660,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 578,
                          "src": "5611:6:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "src": "5373:27:1",
=======
                        "src": "5590:27:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520526563656976657220636f6e747261637420646f6573206e6f7420686176652073756666696369656e742062616c616e636520666f722074686973207472616e73616374696f6e",
<<<<<<< HEAD
                        "id": 600,
=======
                        "id": 662,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "5402:77:1",
=======
                        "src": "5619:77:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d4a4ee7a07ecef3c3534871c9565519b24ca382dbfc79331d46c1dd632076b2",
                          "typeString": "literal_string \"The Receiver contract does not have sufficient balance for this transaction\""
                        },
                        "value": "The Receiver contract does not have sufficient balance for this transaction"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d4a4ee7a07ecef3c3534871c9565519b24ca382dbfc79331d46c1dd632076b2",
                          "typeString": "literal_string \"The Receiver contract does not have sufficient balance for this transaction\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 595,
=======
                      "id": 657,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "5365:7:1",
=======
                      "src": "5582:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 601,
=======
                    "id": 663,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5365:115:1",
=======
                    "src": "5582:115:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 602,
                  "nodeType": "ExpressionStatement",
                  "src": "5365:115:1"
                },
                {
                  "expression": {
                    "id": 611,
=======
                  "id": 664,
                  "nodeType": "ExpressionStatement",
                  "src": "5582:115:1"
                },
                {
                  "expression": {
                    "id": 673,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 603,
                        "name": "transactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 542,
                        "src": "5491:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_transaction_$537_storage_$",
                          "typeString": "mapping(uint256 => struct Subsidiary.transaction storage ref)"
                        }
                      },
                      "id": 605,
                      "indexExpression": {
                        "id": 604,
                        "name": "transID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 584,
                        "src": "5504:7:1",
=======
                        "id": 665,
                        "name": "transactions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 600,
                        "src": "5708:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_transaction_$595_storage_$",
                          "typeString": "mapping(uint256 => struct Subsidiary.transaction storage ref)"
                        }
                      },
                      "id": 667,
                      "indexExpression": {
                        "id": 666,
                        "name": "transID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 646,
                        "src": "5721:7:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "5491:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_transaction_$537_storage",
=======
                      "src": "5708:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_transaction_$595_storage",
>>>>>>> main
                        "typeString": "struct Subsidiary.transaction storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
<<<<<<< HEAD
                          "id": 607,
                          "name": "transID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 584,
                          "src": "5527:7:1",
=======
                          "id": 669,
                          "name": "transID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 646,
                          "src": "5744:7:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
<<<<<<< HEAD
                          "id": 608,
                          "name": "person_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 586,
                          "src": "5536:9:1",
=======
                          "id": 670,
                          "name": "person_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 648,
                          "src": "5753:9:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
<<<<<<< HEAD
                          "id": 609,
                          "name": "tx_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 588,
                          "src": "5547:9:1",
=======
                          "id": 671,
                          "name": "tx_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 650,
                          "src": "5764:9:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
<<<<<<< HEAD
                        "id": 606,
                        "name": "transaction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "5515:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_transaction_$537_storage_ptr_$",
                          "typeString": "type(struct Subsidiary.transaction storage pointer)"
                        }
                      },
                      "id": 610,
=======
                        "id": 668,
                        "name": "transaction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 595,
                        "src": "5732:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_transaction_$595_storage_ptr_$",
                          "typeString": "type(struct Subsidiary.transaction storage pointer)"
                        }
                      },
                      "id": 672,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "5515:42:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_transaction_$537_memory_ptr",
                        "typeString": "struct Subsidiary.transaction memory"
                      }
                    },
                    "src": "5491:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_transaction_$537_storage",
                      "typeString": "struct Subsidiary.transaction storage ref"
                    }
                  },
                  "id": 612,
                  "nodeType": "ExpressionStatement",
                  "src": "5491:66:1"
=======
                      "src": "5732:42:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_transaction_$595_memory_ptr",
                        "typeString": "struct Subsidiary.transaction memory"
                      }
                    },
                    "src": "5708:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_transaction_$595_storage",
                      "typeString": "struct Subsidiary.transaction storage ref"
                    }
                  },
                  "id": 674,
                  "nodeType": "ExpressionStatement",
                  "src": "5708:66:1"
>>>>>>> main
                },
                {
                  "expression": {
                    "hexValue": "74727565",
<<<<<<< HEAD
                    "id": 613,
=======
                    "id": 675,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
<<<<<<< HEAD
                    "src": "5574:4:1",
=======
                    "src": "5791:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 594,
                  "id": 614,
                  "nodeType": "Return",
                  "src": "5567:11:1"
=======
                  "functionReturnParameters": 656,
                  "id": 676,
                  "nodeType": "Return",
                  "src": "5784:11:1"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "ef5ea07c",
<<<<<<< HEAD
            "id": 616,
=======
            "id": 678,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 591,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 590,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 645,
                  "src": "5323:10:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "5323:10:1"
              }
            ],
            "name": "insertTransaction",
            "nameLocation": "5256:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 589,
=======
                "id": 653,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 652,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 710,
                  "src": "5540:10:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "5540:10:1"
              }
            ],
            "name": "insertTransaction",
            "nameLocation": "5473:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 651,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 584,
                  "mutability": "mutable",
                  "name": "transID",
                  "nameLocation": "5279:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 616,
                  "src": "5274:12:1",
=======
                  "id": 646,
                  "mutability": "mutable",
                  "name": "transID",
                  "nameLocation": "5496:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 678,
                  "src": "5491:12:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 583,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5274:4:1",
=======
                    "id": 645,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5491:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 586,
                  "mutability": "mutable",
                  "name": "person_id",
                  "nameLocation": "5296:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 616,
                  "src": "5288:17:1",
=======
                  "id": 648,
                  "mutability": "mutable",
                  "name": "person_id",
                  "nameLocation": "5513:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 678,
                  "src": "5505:17:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 585,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5288:7:1",
=======
                    "id": 647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5505:7:1",
>>>>>>> main
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 588,
                  "mutability": "mutable",
                  "name": "tx_amount",
                  "nameLocation": "5312:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 616,
                  "src": "5307:14:1",
=======
                  "id": 650,
                  "mutability": "mutable",
                  "name": "tx_amount",
                  "nameLocation": "5529:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 678,
                  "src": "5524:14:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 587,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5307:4:1",
=======
                    "id": 649,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5524:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5273:49:1"
            },
            "returnParameters": {
              "id": 594,
=======
              "src": "5490:49:1"
            },
            "returnParameters": {
              "id": 656,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 593,
=======
                  "id": 655,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 616,
                  "src": "5349:4:1",
=======
                  "scope": 678,
                  "src": "5566:4:1",
>>>>>>> main
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 592,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5349:4:1",
=======
                    "id": 654,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5566:4:1",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "5348:6:1"
            },
            "scope": 657,
            "src": "5247:338:1",
=======
              "src": "5565:6:1"
            },
            "scope": 725,
            "src": "5464:338:1",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 626,
              "nodeType": "Block",
              "src": "5664:58:1",
=======
              "id": 688,
              "nodeType": "Block",
              "src": "5881:58:1",
>>>>>>> main
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
<<<<<<< HEAD
                          "id": 620,
=======
                          "id": 682,
>>>>>>> main
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                          "src": "5693:3:1",
=======
                          "src": "5910:3:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
<<<<<<< HEAD
                        "id": 621,
=======
                        "id": 683,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "src": "5693:10:1",
=======
                        "src": "5910:10:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
<<<<<<< HEAD
                          "id": 622,
=======
                          "id": 684,
>>>>>>> main
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                          "src": "5705:3:1",
=======
                          "src": "5922:3:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
<<<<<<< HEAD
                        "id": 623,
=======
                        "id": 685,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "src": "5705:9:1",
=======
                        "src": "5922:9:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
<<<<<<< HEAD
                      "id": 619,
                      "name": "ValueReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 530,
                      "src": "5679:13:1",
=======
                      "id": 681,
                      "name": "ValueReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "5896:13:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 624,
=======
                    "id": 686,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5679:36:1",
=======
                    "src": "5896:36:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 625,
                  "nodeType": "EmitStatement",
                  "src": "5674:41:1"
                }
              ]
            },
            "id": 627,
=======
                  "id": 687,
                  "nodeType": "EmitStatement",
                  "src": "5891:41:1"
                }
              ]
            },
            "id": 689,
>>>>>>> main
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 617,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5645:2:1"
            },
            "returnParameters": {
              "id": 618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5664:0:1"
            },
            "scope": 657,
            "src": "5638:84:1",
=======
              "id": 679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5862:2:1"
            },
            "returnParameters": {
              "id": 680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5881:0:1"
            },
            "scope": 725,
            "src": "5855:84:1",
>>>>>>> main
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 644,
              "nodeType": "Block",
              "src": "5752:101:1",
=======
              "id": 709,
              "nodeType": "Block",
              "src": "5969:110:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
<<<<<<< HEAD
                        "id": 640,
=======
                        "id": 705,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
<<<<<<< HEAD
                          "id": 633,
=======
                          "id": 698,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
<<<<<<< HEAD
                              "id": 630,
=======
                              "id": 692,
>>>>>>> main
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                              "src": "5770:3:1",
=======
                              "src": "5987:3:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
<<<<<<< HEAD
                            "id": 631,
=======
                            "id": 693,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "src": "5770:10:1",
=======
                            "src": "5987:10:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
<<<<<<< HEAD
                            "id": 632,
                            "name": "parent_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 518,
                            "src": "5784:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "5770:21:1",
=======
                            "arguments": [
                              {
                                "id": 696,
                                "name": "parent_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 576,
                                "src": "6009:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Corporate_$573",
                                  "typeString": "contract Corporate"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Corporate_$573",
                                  "typeString": "contract Corporate"
                                }
                              ],
                              "id": 695,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6001:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 694,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6001:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6001:16:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5987:30:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
<<<<<<< HEAD
                          "id": 639,
=======
                          "id": 704,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
<<<<<<< HEAD
                              "id": 634,
                              "name": "permissionedAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 524,
                              "src": "5795:19:1",
=======
                              "id": 699,
                              "name": "permissionedAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 582,
                              "src": "6021:19:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
<<<<<<< HEAD
                            "id": 637,
                            "indexExpression": {
                              "expression": {
                                "id": 635,
=======
                            "id": 702,
                            "indexExpression": {
                              "expression": {
                                "id": 700,
>>>>>>> main
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                                "src": "5815:3:1",
=======
                                "src": "6041:3:1",
>>>>>>> main
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
<<<<<<< HEAD
                              "id": 636,
=======
                              "id": 701,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
<<<<<<< HEAD
                              "src": "5815:10:1",
=======
                              "src": "6041:10:1",
>>>>>>> main
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
<<<<<<< HEAD
                            "src": "5795:31:1",
=======
                            "src": "6021:31:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "74727565",
<<<<<<< HEAD
                            "id": 638,
=======
                            "id": 703,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "5830:4:1",
=======
                            "src": "6056:4:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
<<<<<<< HEAD
                          "src": "5795:39:1",
=======
                          "src": "6021:39:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD
                        "src": "5770:64:1",
=======
                        "src": "5987:73:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "id": 629,
=======
                      "id": 691,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "5762:7:1",
=======
                      "src": "5979:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 641,
=======
                    "id": 706,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5762:73:1",
=======
                    "src": "5979:82:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 642,
                  "nodeType": "ExpressionStatement",
                  "src": "5762:73:1"
                },
                {
                  "id": 643,
                  "nodeType": "PlaceholderStatement",
                  "src": "5845:1:1"
                }
              ]
            },
            "id": 645,
            "name": "restricted",
            "nameLocation": "5741:10:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5752:0:1"
            },
            "src": "5732:121:1",
=======
                  "id": 707,
                  "nodeType": "ExpressionStatement",
                  "src": "5979:82:1"
                },
                {
                  "id": 708,
                  "nodeType": "PlaceholderStatement",
                  "src": "6071:1:1"
                }
              ]
            },
            "id": 710,
            "name": "restricted",
            "nameLocation": "5958:10:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5969:0:1"
            },
            "src": "5949:130:1",
>>>>>>> main
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 655,
              "nodeType": "Block",
              "src": "5883:58:1",
=======
              "id": 723,
              "nodeType": "Block",
              "src": "6109:67:1",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 651,
=======
                        "id": 719,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
<<<<<<< HEAD
                            "id": 648,
=======
                            "id": 713,
>>>>>>> main
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                            "src": "5901:3:1",
=======
                            "src": "6127:3:1",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
<<<<<<< HEAD
                          "id": 649,
=======
                          "id": 714,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "src": "5901:10:1",
=======
                          "src": "6127:10:1",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
<<<<<<< HEAD
                          "id": 650,
                          "name": "parent_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 518,
                          "src": "5915:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5901:21:1",
=======
                          "arguments": [
                            {
                              "id": 717,
                              "name": "parent_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 576,
                              "src": "6149:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Corporate_$573",
                                "typeString": "contract Corporate"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Corporate_$573",
                                "typeString": "contract Corporate"
                              }
                            ],
                            "id": 716,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6141:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 715,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6141:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6141:16:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6127:30:1",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "id": 647,
=======
                      "id": 712,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "5893:7:1",
=======
                      "src": "6119:7:1",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 652,
=======
                    "id": 720,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "5893:30:1",
=======
                    "src": "6119:39:1",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 653,
                  "nodeType": "ExpressionStatement",
                  "src": "5893:30:1"
                },
                {
                  "id": 654,
                  "nodeType": "PlaceholderStatement",
                  "src": "5933:1:1"
                }
              ]
            },
            "id": 656,
            "name": "accountsAccess",
            "nameLocation": "5868:14:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5883:0:1"
            },
            "src": "5859:82:1",
=======
                  "id": 721,
                  "nodeType": "ExpressionStatement",
                  "src": "6119:39:1"
                },
                {
                  "id": 722,
                  "nodeType": "PlaceholderStatement",
                  "src": "6168:1:1"
                }
              ]
            },
            "id": 724,
            "name": "accountsAccess",
            "nameLocation": "6094:14:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6109:0:1"
            },
            "src": "6085:91:1",
>>>>>>> main
            "virtual": false,
            "visibility": "internal"
          }
        ],
<<<<<<< HEAD
        "scope": 658,
        "src": "4110:1833:1",
        "usedErrors": []
      }
    ],
    "src": "0:5943:1"
=======
        "scope": 726,
        "src": "4325:1853:1",
        "usedErrors": []
      }
    ],
    "src": "0:6178:1"
>>>>>>> main
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
<<<<<<< HEAD
      "address": "0xFA32D5a373BcEecbF9628Ffa777d3CE1c0256d46",
      "transactionHash": "0x588d492f7e060caef3654b6ce49abb1cd16774b6b7d0eb9fb8aee9fec6df60da"
    }
  },
  "schemaVersion": "3.4.2",
  "updatedAt": "2021-07-29T03:31:43.232Z",
=======
      "address": "0xa80B84a49e90F3E2E1Eb360406dB3c68D75Dd2f1",
      "transactionHash": "0xd50dcdd7284e7385c20fd69db4d6e0a216de95fc1f2d1d026e796f2c68e440b2"
    }
  },
  "schemaVersion": "3.4.2",
  "updatedAt": "2021-07-29T06:07:26.384Z",
>>>>>>> main
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}