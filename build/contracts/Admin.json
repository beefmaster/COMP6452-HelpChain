{
  "contractName": "Admin",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "corporateFactory",
      "outputs": [
        {
          "internalType": "contract CorporateFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
<<<<<<< HEAD
      "type": "function",
      "constant": true
=======
      "type": "function"
>>>>>>> main
    },
    {
      "inputs": [],
      "name": "fundsPool",
      "outputs": [
        {
          "internalType": "contract FundsPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
<<<<<<< HEAD
      "type": "function",
      "constant": true
=======
      "type": "function"
    },
    {
      "inputs": [],
      "name": "giverFactory",
      "outputs": [
        {
          "internalType": "contract GiverFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
>>>>>>> main
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
<<<<<<< HEAD
      "type": "function",
      "constant": true
=======
      "type": "function"
>>>>>>> main
    },
    {
      "inputs": [],
      "name": "receiverFactory",
      "outputs": [
        {
          "internalType": "contract ReceiverFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
<<<<<<< HEAD
      "type": "function",
      "constant": true
=======
      "type": "function"
>>>>>>> main
    },
    {
      "inputs": [
        {
          "internalType": "contract FundsPool",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "updateFundsPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract CorporateFactory",
          "name": "fac",
          "type": "address"
        }
      ],
      "name": "updateCorporateFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ReceiverFactory",
          "name": "fac",
          "type": "address"
        }
      ],
      "name": "updateReceiverFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
<<<<<<< HEAD
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"corporateFactory\",\"outputs\":[{\"internalType\":\"contract CorporateFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundsPool\",\"outputs\":[{\"internalType\":\"contract FundsPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverFactory\",\"outputs\":[{\"internalType\":\"contract ReceiverFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract CorporateFactory\",\"name\":\"fac\",\"type\":\"address\"}],\"name\":\"updateCorporateFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract FundsPool\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"updateFundsPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ReceiverFactory\",\"name\":\"fac\",\"type\":\"address\"}],\"name\":\"updateReceiverFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Admin.sol\":\"Admin\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Admin.sol\":{\"keccak256\":\"0xb1a1b3fa9638ab2e4f6816da2be16bf06da93c5adcda103c5cf9f72315b35f8a\",\"urls\":[\"bzz-raw://f80c57cde308948ec69c466c086c81b6e2da8b58e9ff6b53cdd859d3b7bf11af\",\"dweb:/ipfs/QmaonGnes4WsvhP4LvEqaxeCCcTHuFXXfw1ZTrp5Zqbv4h\"]},\"project:/contracts/CorporateFactory.sol\":{\"keccak256\":\"0x7dee83257bd9f0137db6acb4c638a2bbafafef70a37755130fa6f717a2f08b08\",\"urls\":[\"bzz-raw://8d13a47611cd65485871a0237b45449d2aaf74330bd30aa1637fafb21804750d\",\"dweb:/ipfs/QmQexnmJYwJK23Rkgj6QAXztP15VLu1QjrAZs1A1bCLEHN\"]},\"project:/contracts/FundsPool.sol\":{\"keccak256\":\"0xc45f2844e3751b1067a4a80523cee6e8503819a87c4685b0eaea4bd64dc32733\",\"urls\":[\"bzz-raw://fa893d4530c290b3d0d7b21f4b115d3a98aa6437075d1b51730afd81600e8985\",\"dweb:/ipfs/QmUAFzN5PQ6eaVhhPkwvGCodrbqdqg9YHbzN8kBnSxMH7w\"]},\"project:/contracts/ReceiverFactory.sol\":{\"keccak256\":\"0x02061af1cad20aa28ff6262adada4ee2ac1d68a697df59c3832451ca5b0e0f5f\",\"urls\":[\"bzz-raw://7a953ff695826baed439ceb938f76b05619ce3ee9c83f78364ad9c7fa9543028\",\"dweb:/ipfs/QmTNQTuhW31XTngAq46pqQkax7DiGwzGHCmKKGKa5XN8Lk\"]},\"project:/contracts/Whitelist.sol\":{\"keccak256\":\"0xfa0d024de0f022f219cd144b478590a34ec849ff4e0806a1030c4f953cdeab1e\",\"urls\":[\"bzz-raw://e46cfbcee151b30e3d9b92a5ce06e6c8791323dedfa48749e7ef4701b2b1487a\",\"dweb:/ipfs/Qmdef9QTZbeUsPHcHygWWpNL8yz1RuUoHYKsRbS71r9tVx\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610a38806100616000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100dc578063a635a0a8146100fa578063b34485ce14610116578063cfb17d61146101325761007d565b80634979716d146100825780637011329f146100a05780638a90d601146100be575b600080fd5b61008a61014e565b604051610097919061077b565b60405180910390f35b6100a8610174565b6040516100b591906107b1565b60405180910390f35b6100c6610198565b6040516100d39190610796565b60405180910390f35b6100e46101be565b6040516100f19190610760565b60405180910390f35b610114600480360381019061010f9190610684565b6101e4565b005b610130600480360381019061012b9190610657565b610335565b005b61014c600480360381019061014791906106b1565b610486565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8073ffffffffffffffffffffffffffffffffffffffff1663f851a4406040518163ffffffff1660e01b815260040160206040518083038186803b15801561022a57600080fd5b505afa15801561023e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610262919061062a565b73ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e8906107ec565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561037b57600080fd5b505afa15801561038f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b3919061062a565b73ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610442576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610439906107cc565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104cc57600080fd5b505afa1580156104e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610504919061062a565b73ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610593576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058a906107cc565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000815190506105e5816109a6565b92915050565b6000813590506105fa816109bd565b92915050565b60008135905061060f816109d4565b92915050565b600081359050610624816109eb565b92915050565b6000602082840312156106405761063f610903565b5b600061064e848285016105d6565b91505092915050565b60006020828403121561066d5761066c610903565b5b600061067b848285016105eb565b91505092915050565b60006020828403121561069a57610699610903565b5b60006106a884828501610600565b91505092915050565b6000602082840312156106c7576106c6610903565b5b60006106d584828501610615565b91505092915050565b6106e78161081d565b82525050565b6106f681610897565b82525050565b610705816108bb565b82525050565b610714816108df565b82525050565b600061072760248361080c565b915061073282610908565b604082019050919050565b600061074a60218361080c565b915061075582610957565b604082019050919050565b600060208201905061077560008301846106de565b92915050565b600060208201905061079060008301846106ed565b92915050565b60006020820190506107ab60008301846106fc565b92915050565b60006020820190506107c6600083018461070b565b92915050565b600060208201905081810360008301526107e58161071a565b9050919050565b600060208201905081810360008301526108058161073d565b9050919050565b600082825260208201905092915050565b600061082882610877565b9050919050565b600061083a82610877565b9050919050565b600061084c8261081d565b9050919050565b600061085e8261082f565b9050919050565b60006108708261081d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108a2826108a9565b9050919050565b60006108b482610877565b9050919050565b60006108c6826108cd565b9050919050565b60006108d882610877565b9050919050565b60006108ea826108f1565b9050919050565b60006108fc82610877565b9050919050565b600080fd5b7f466163746f727920776173206e6f74206372656174656420627920746865206160008201527f646d696e00000000000000000000000000000000000000000000000000000000602082015250565b7f506f6f6c20776173206e6f742063726561746564206279207468652061646d6960008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b6109af8161081d565b81146109ba57600080fd5b50565b6109c681610841565b81146109d157600080fd5b50565b6109dd81610853565b81146109e857600080fd5b50565b6109f481610865565b81146109ff57600080fd5b5056fea2646970667358221220958b0823c1f46bfb8a88e9acab6c909011dc001019109ad6cf3ecfe6b8a7ce0a64736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100dc578063a635a0a8146100fa578063b34485ce14610116578063cfb17d61146101325761007d565b80634979716d146100825780637011329f146100a05780638a90d601146100be575b600080fd5b61008a61014e565b604051610097919061077b565b60405180910390f35b6100a8610174565b6040516100b591906107b1565b60405180910390f35b6100c6610198565b6040516100d39190610796565b60405180910390f35b6100e46101be565b6040516100f19190610760565b60405180910390f35b610114600480360381019061010f9190610684565b6101e4565b005b610130600480360381019061012b9190610657565b610335565b005b61014c600480360381019061014791906106b1565b610486565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8073ffffffffffffffffffffffffffffffffffffffff1663f851a4406040518163ffffffff1660e01b815260040160206040518083038186803b15801561022a57600080fd5b505afa15801561023e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610262919061062a565b73ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e8906107ec565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561037b57600080fd5b505afa15801561038f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b3919061062a565b73ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610442576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610439906107cc565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104cc57600080fd5b505afa1580156104e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610504919061062a565b73ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610593576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058a906107cc565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000815190506105e5816109a6565b92915050565b6000813590506105fa816109bd565b92915050565b60008135905061060f816109d4565b92915050565b600081359050610624816109eb565b92915050565b6000602082840312156106405761063f610903565b5b600061064e848285016105d6565b91505092915050565b60006020828403121561066d5761066c610903565b5b600061067b848285016105eb565b91505092915050565b60006020828403121561069a57610699610903565b5b60006106a884828501610600565b91505092915050565b6000602082840312156106c7576106c6610903565b5b60006106d584828501610615565b91505092915050565b6106e78161081d565b82525050565b6106f681610897565b82525050565b610705816108bb565b82525050565b610714816108df565b82525050565b600061072760248361080c565b915061073282610908565b604082019050919050565b600061074a60218361080c565b915061075582610957565b604082019050919050565b600060208201905061077560008301846106de565b92915050565b600060208201905061079060008301846106ed565b92915050565b60006020820190506107ab60008301846106fc565b92915050565b60006020820190506107c6600083018461070b565b92915050565b600060208201905081810360008301526107e58161071a565b9050919050565b600060208201905081810360008301526108058161073d565b9050919050565b600082825260208201905092915050565b600061082882610877565b9050919050565b600061083a82610877565b9050919050565b600061084c8261081d565b9050919050565b600061085e8261082f565b9050919050565b60006108708261081d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108a2826108a9565b9050919050565b60006108b482610877565b9050919050565b60006108c6826108cd565b9050919050565b60006108d882610877565b9050919050565b60006108ea826108f1565b9050919050565b60006108fc82610877565b9050919050565b600080fd5b7f466163746f727920776173206e6f74206372656174656420627920746865206160008201527f646d696e00000000000000000000000000000000000000000000000000000000602082015250565b7f506f6f6c20776173206e6f742063726561746564206279207468652061646d6960008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b6109af8161081d565b81146109ba57600080fd5b50565b6109c681610841565b81146109d157600080fd5b50565b6109dd81610853565b81146109e857600080fd5b50565b6109f481610865565b81146109ff57600080fd5b5056fea2646970667358221220958b0823c1f46bfb8a88e9acab6c909011dc001019109ad6cf3ecfe6b8a7ce0a64736f6c63430008060033",
=======
    },
    {
      "inputs": [
        {
          "internalType": "contract GiverFactory",
          "name": "fac",
          "type": "address"
        }
      ],
      "name": "updateGiverFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"corporateFactory\",\"outputs\":[{\"internalType\":\"contract CorporateFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundsPool\",\"outputs\":[{\"internalType\":\"contract FundsPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"giverFactory\",\"outputs\":[{\"internalType\":\"contract GiverFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverFactory\",\"outputs\":[{\"internalType\":\"contract ReceiverFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract CorporateFactory\",\"name\":\"fac\",\"type\":\"address\"}],\"name\":\"updateCorporateFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract FundsPool\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"updateFundsPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract GiverFactory\",\"name\":\"fac\",\"type\":\"address\"}],\"name\":\"updateGiverFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ReceiverFactory\",\"name\":\"fac\",\"type\":\"address\"}],\"name\":\"updateReceiverFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Admin.sol\":\"Admin\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Admin.sol\":{\"keccak256\":\"0xb7d2d551c1fd90bd0101c7b424d76a819f03655f88d03a845d72c3863776128f\",\"urls\":[\"bzz-raw://861c063cb4c0305fd961af50d2099e0c1aef78ec347680cb17ce1b2697958926\",\"dweb:/ipfs/QmRjx5twmEnR6m4DvfKfuWZryBzQUSE71uHq8kNEfm2GcR\"]},\"project:/contracts/CorporateFactory.sol\":{\"keccak256\":\"0x85f69673a556be5da424034827fc7df5e6919a8caef9a8481c6655f673c8c387\",\"urls\":[\"bzz-raw://fbda6b9907c1d7f8eab1a2d851b513b734484c9fc609ea5a1a1697e51745eb31\",\"dweb:/ipfs/QmPZZBjwLGmpVNCUbusVzC4Yp9wTRQ5rVsvJpHxKBmLkJ6\"]},\"project:/contracts/FundsPool.sol\":{\"keccak256\":\"0xc45f2844e3751b1067a4a80523cee6e8503819a87c4685b0eaea4bd64dc32733\",\"urls\":[\"bzz-raw://fa893d4530c290b3d0d7b21f4b115d3a98aa6437075d1b51730afd81600e8985\",\"dweb:/ipfs/QmUAFzN5PQ6eaVhhPkwvGCodrbqdqg9YHbzN8kBnSxMH7w\"]},\"project:/contracts/GiverFactory.sol\":{\"keccak256\":\"0x407f3d7849b386f5a4dbf997d4563f4f6ee2d966f67dbb43769f66b32b5f063d\",\"urls\":[\"bzz-raw://e91505602a76026ab3a5faae5f786b741137f366f75b1d5af194523233bc7103\",\"dweb:/ipfs/QmTKfzcTMFmHAoBjuodu89CyCrrjGAyeMHmErnMzVhpHGW\"]},\"project:/contracts/ReceiverFactory.sol\":{\"keccak256\":\"0x6d0b15835daaef37a6f7f6418ef615294d7790ab958ca11ee36950d0a9b7ab45\",\"urls\":[\"bzz-raw://b3afe0c513b61f6ac214e58d2caa685b595804816fb19c3c1f456c2f057e7c96\",\"dweb:/ipfs/QmXx74DuVeHFWS3WpKRK3kvd4X32Yd89xuVZUP6SycHriK\"]},\"project:/contracts/Whitelist.sol\":{\"keccak256\":\"0x692bdfad1d15e852adc20980e627a0ec38b195975df8b8c1a5d15b63884f848a\",\"urls\":[\"bzz-raw://ee70e20928351b069ff828d8d5cc43bebae3e2602a24fc2673e862a10ca4872a\",\"dweb:/ipfs/QmUEAEjUKhQAsnydyr96xiQyngbGkgdmRxEFt8hymYgLSY\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610cb8806100616000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b1461010e578063a635a0a81461012c578063b34485ce14610148578063cab9e70614610164578063cfb17d611461018257610093565b80634979716d146100985780635d9f790b146100b65780637011329f146100d25780638a90d601146100f0575b600080fd5b6100a061019e565b6040516100ad9190610993565b60405180910390f35b6100d060048036038101906100cb919061088d565b6101c4565b005b6100da610315565b6040516100e791906109e4565b60405180910390f35b6100f8610339565b60405161010591906109ae565b60405180910390f35b61011661035f565b6040516101239190610978565b60405180910390f35b61014660048036038101906101419190610860565b610385565b005b610162600480360381019061015d9190610833565b6104d6565b005b61016c610627565b60405161017991906109c9565b60405180910390f35b61019c600480360381019061019791906108ba565b61064d565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561020a57600080fd5b505afa15801561021e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102429190610806565b73ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c8906109ff565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8073ffffffffffffffffffffffffffffffffffffffff1663f851a4406040518163ffffffff1660e01b815260040160206040518083038186803b1580156103cb57600080fd5b505afa1580156103df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104039190610806565b73ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610492576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048990610a1f565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561051c57600080fd5b505afa158015610530573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105549190610806565b73ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105da906109ff565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561069357600080fd5b505afa1580156106a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cb9190610806565b73ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461075a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610751906109ff565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000815190506107ac81610c0f565b92915050565b6000813590506107c181610c26565b92915050565b6000813590506107d681610c3d565b92915050565b6000813590506107eb81610c54565b92915050565b60008135905061080081610c6b565b92915050565b60006020828403121561081c5761081b610b6c565b5b600061082a8482850161079d565b91505092915050565b60006020828403121561084957610848610b6c565b5b6000610857848285016107b2565b91505092915050565b60006020828403121561087657610875610b6c565b5b6000610884848285016107c7565b91505092915050565b6000602082840312156108a3576108a2610b6c565b5b60006108b1848285016107dc565b91505092915050565b6000602082840312156108d0576108cf610b6c565b5b60006108de848285016107f1565b91505092915050565b6108f081610a50565b82525050565b6108ff81610adc565b82525050565b61090e81610b00565b82525050565b61091d81610b24565b82525050565b61092c81610b48565b82525050565b600061093f602483610a3f565b915061094a82610b71565b604082019050919050565b6000610962602183610a3f565b915061096d82610bc0565b604082019050919050565b600060208201905061098d60008301846108e7565b92915050565b60006020820190506109a860008301846108f6565b92915050565b60006020820190506109c36000830184610905565b92915050565b60006020820190506109de6000830184610914565b92915050565b60006020820190506109f96000830184610923565b92915050565b60006020820190508181036000830152610a1881610932565b9050919050565b60006020820190508181036000830152610a3881610955565b9050919050565b600082825260208201905092915050565b6000610a5b82610abc565b9050919050565b6000610a6d82610abc565b9050919050565b6000610a7f82610a50565b9050919050565b6000610a9182610a62565b9050919050565b6000610aa382610a50565b9050919050565b6000610ab582610a50565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ae782610aee565b9050919050565b6000610af982610abc565b9050919050565b6000610b0b82610b12565b9050919050565b6000610b1d82610abc565b9050919050565b6000610b2f82610b36565b9050919050565b6000610b4182610abc565b9050919050565b6000610b5382610b5a565b9050919050565b6000610b6582610abc565b9050919050565b600080fd5b7f466163746f727920776173206e6f74206372656174656420627920746865206160008201527f646d696e00000000000000000000000000000000000000000000000000000000602082015250565b7f506f6f6c20776173206e6f742063726561746564206279207468652061646d6960008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b610c1881610a50565b8114610c2357600080fd5b50565b610c2f81610a74565b8114610c3a57600080fd5b50565b610c4681610a86565b8114610c5157600080fd5b50565b610c5d81610a98565b8114610c6857600080fd5b50565b610c7481610aaa565b8114610c7f57600080fd5b5056fea2646970667358221220b47713e778845423c43044f3ff723434cef8ec75120a28ab60e4ea2e18d4301664736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b1461010e578063a635a0a81461012c578063b34485ce14610148578063cab9e70614610164578063cfb17d611461018257610093565b80634979716d146100985780635d9f790b146100b65780637011329f146100d25780638a90d601146100f0575b600080fd5b6100a061019e565b6040516100ad9190610993565b60405180910390f35b6100d060048036038101906100cb919061088d565b6101c4565b005b6100da610315565b6040516100e791906109e4565b60405180910390f35b6100f8610339565b60405161010591906109ae565b60405180910390f35b61011661035f565b6040516101239190610978565b60405180910390f35b61014660048036038101906101419190610860565b610385565b005b610162600480360381019061015d9190610833565b6104d6565b005b61016c610627565b60405161017991906109c9565b60405180910390f35b61019c600480360381019061019791906108ba565b61064d565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561020a57600080fd5b505afa15801561021e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102429190610806565b73ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c8906109ff565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8073ffffffffffffffffffffffffffffffffffffffff1663f851a4406040518163ffffffff1660e01b815260040160206040518083038186803b1580156103cb57600080fd5b505afa1580156103df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104039190610806565b73ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610492576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048990610a1f565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561051c57600080fd5b505afa158015610530573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105549190610806565b73ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105da906109ff565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8073ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561069357600080fd5b505afa1580156106a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cb9190610806565b73ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461075a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610751906109ff565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000815190506107ac81610c0f565b92915050565b6000813590506107c181610c26565b92915050565b6000813590506107d681610c3d565b92915050565b6000813590506107eb81610c54565b92915050565b60008135905061080081610c6b565b92915050565b60006020828403121561081c5761081b610b6c565b5b600061082a8482850161079d565b91505092915050565b60006020828403121561084957610848610b6c565b5b6000610857848285016107b2565b91505092915050565b60006020828403121561087657610875610b6c565b5b6000610884848285016107c7565b91505092915050565b6000602082840312156108a3576108a2610b6c565b5b60006108b1848285016107dc565b91505092915050565b6000602082840312156108d0576108cf610b6c565b5b60006108de848285016107f1565b91505092915050565b6108f081610a50565b82525050565b6108ff81610adc565b82525050565b61090e81610b00565b82525050565b61091d81610b24565b82525050565b61092c81610b48565b82525050565b600061093f602483610a3f565b915061094a82610b71565b604082019050919050565b6000610962602183610a3f565b915061096d82610bc0565b604082019050919050565b600060208201905061098d60008301846108e7565b92915050565b60006020820190506109a860008301846108f6565b92915050565b60006020820190506109c36000830184610905565b92915050565b60006020820190506109de6000830184610914565b92915050565b60006020820190506109f96000830184610923565b92915050565b60006020820190508181036000830152610a1881610932565b9050919050565b60006020820190508181036000830152610a3881610955565b9050919050565b600082825260208201905092915050565b6000610a5b82610abc565b9050919050565b6000610a6d82610abc565b9050919050565b6000610a7f82610a50565b9050919050565b6000610a9182610a62565b9050919050565b6000610aa382610a50565b9050919050565b6000610ab582610a50565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ae782610aee565b9050919050565b6000610af982610abc565b9050919050565b6000610b0b82610b12565b9050919050565b6000610b1d82610abc565b9050919050565b6000610b2f82610b36565b9050919050565b6000610b4182610abc565b9050919050565b6000610b5382610b5a565b9050919050565b6000610b6582610abc565b9050919050565b600080fd5b7f466163746f727920776173206e6f74206372656174656420627920746865206160008201527f646d696e00000000000000000000000000000000000000000000000000000000602082015250565b7f506f6f6c20776173206e6f742063726561746564206279207468652061646d6960008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b610c1881610a50565b8114610c2357600080fd5b50565b610c2f81610a74565b8114610c3a57600080fd5b50565b610c4681610a86565b8114610c5157600080fd5b50565b610c5d81610a98565b8114610c6857600080fd5b50565b610c7481610aaa565b8114610c7f57600080fd5b5056fea2646970667358221220b47713e778845423c43044f3ff723434cef8ec75120a28ab60e4ea2e18d4301664736f6c63430008060033",
>>>>>>> main
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
<<<<<<< HEAD
        "src": "0:8821:7",
=======
        "src": "0:10441:6",
>>>>>>> main
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "70:80:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:7",
=======
              "src": "70:80:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "95:6:7"
=======
                        "src": "95:6:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "89:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:7"
=======
                      "src": "89:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "80:5:7"
=======
                      "src": "80:5:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "138:5:7"
=======
                        "src": "138:5:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "111:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:7"
=======
                      "src": "111:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:6"
>>>>>>> main
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "48:6:7",
=======
                "src": "48:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:6",
                "type": ""
              }
            ],
            "src": "7:143:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "232:111:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "242:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "264:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "251:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "251:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "242:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "331:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_CorporateFactory_$333",
                      "nodeType": "YulIdentifier",
                      "src": "280:50:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "280:57:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "280:57:6"
                }
              ]
            },
            "name": "abi_decode_t_contract$_CorporateFactory_$333",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "210:6:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "56:3:7",
=======
                "src": "218:3:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "64:5:7",
                "type": ""
              }
            ],
            "src": "7:143:7"
=======
                "src": "226:5:6",
                "type": ""
              }
            ],
            "src": "156:187:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "232:111:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "242:29:7",
=======
              "src": "418:104:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "428:29:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "264:6:7"
=======
                        "src": "450:6:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "251:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "251:20:7"
=======
                      "src": "437:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "437:20:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "242:5:7"
=======
                      "src": "428:5:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "331:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_CorporateFactory_$286",
                      "nodeType": "YulIdentifier",
                      "src": "280:50:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "280:57:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "280:57:7"
                }
              ]
            },
            "name": "abi_decode_t_contract$_CorporateFactory_$286",
=======
                        "src": "510:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_FundsPool_$897",
                      "nodeType": "YulIdentifier",
                      "src": "466:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "466:50:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "466:50:6"
                }
              ]
            },
            "name": "abi_decode_t_contract$_FundsPool_$897",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "210:6:7",
=======
                "src": "396:6:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "218:3:7",
=======
                "src": "404:3:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "226:5:7",
                "type": ""
              }
            ],
            "src": "156:187:7"
=======
                "src": "412:5:6",
                "type": ""
              }
            ],
            "src": "349:173:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "418:104:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "428:29:7",
=======
              "src": "601:108:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "611:29:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "450:6:7"
=======
                        "src": "633:6:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "437:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "437:20:7"
=======
                      "src": "620:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "620:20:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "428:5:7"
=======
                      "src": "611:5:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "510:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_FundsPool_$829",
                      "nodeType": "YulIdentifier",
                      "src": "466:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "466:50:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "466:50:7"
                }
              ]
            },
            "name": "abi_decode_t_contract$_FundsPool_$829",
=======
                        "src": "697:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_GiverFactory_$1091",
                      "nodeType": "YulIdentifier",
                      "src": "649:47:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "649:54:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "649:54:6"
                }
              ]
            },
            "name": "abi_decode_t_contract$_GiverFactory_$1091",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "396:6:7",
=======
                "src": "579:6:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "404:3:7",
=======
                "src": "587:3:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "412:5:7",
                "type": ""
              }
            ],
            "src": "349:173:7"
=======
                "src": "595:5:6",
                "type": ""
              }
            ],
            "src": "528:181:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "604:111:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "614:29:7",
=======
              "src": "791:111:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "801:29:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "636:6:7"
=======
                        "src": "823:6:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "623:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "623:20:7"
=======
                      "src": "810:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "810:20:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "614:5:7"
=======
                      "src": "801:5:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "703:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_ReceiverFactory_$1276",
                      "nodeType": "YulIdentifier",
                      "src": "652:50:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "652:57:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "652:57:7"
                }
              ]
            },
            "name": "abi_decode_t_contract$_ReceiverFactory_$1276",
=======
                        "src": "890:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_ReceiverFactory_$1403",
                      "nodeType": "YulIdentifier",
                      "src": "839:50:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "839:57:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "839:57:6"
                }
              ]
            },
            "name": "abi_decode_t_contract$_ReceiverFactory_$1403",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "582:6:7",
=======
                "src": "769:6:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "590:3:7",
=======
                "src": "777:3:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "598:5:7",
                "type": ""
              }
            ],
            "src": "528:187:7"
=======
                "src": "785:5:6",
                "type": ""
              }
            ],
            "src": "715:187:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "798:274:7",
=======
              "src": "985:274:6",
>>>>>>> main
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "844:83:7",
=======
                    "src": "1031:83:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "846:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "846:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "846:79:7"
=======
                            "src": "1033:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1033:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1033:79:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "819:7:7"
=======
                            "src": "1006:7:6"
>>>>>>> main
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "828:9:7"
=======
                            "src": "1015:9:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "815:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "815:23:7"
=======
                          "src": "1002:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1002:23:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "840:2:7",
=======
                        "src": "1027:2:6",
>>>>>>> main
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "811:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "811:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "808:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "937:128:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "952:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "966:1:7",
=======
                      "src": "998:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "998:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "995:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1124:128:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1139:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1153:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
<<<<<<< HEAD
                          "src": "956:6:7",
=======
                          "src": "1143:6:6",
>>>>>>> main
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
<<<<<<< HEAD
                      "src": "981:74:7",
=======
                      "src": "1168:74:6",
>>>>>>> main
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "1027:9:7"
=======
                                "src": "1214:9:6"
>>>>>>> main
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "1038:6:7"
=======
                                "src": "1225:6:6"
>>>>>>> main
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
                              "src": "1023:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1023:22:7"
=======
                              "src": "1210:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1210:22:6"
>>>>>>> main
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1047:7:7"
=======
                            "src": "1234:7:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "991:31:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "991:64:7"
=======
                          "src": "1178:31:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1178:64:6"
>>>>>>> main
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "981:6:7"
=======
                          "src": "1168:6:6"
>>>>>>> main
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "768:9:7",
=======
                "src": "955:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "966:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "978:6:6",
                "type": ""
              }
            ],
            "src": "908:351:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1355:287:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1401:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1403:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1403:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1403:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1376:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1385:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1372:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1372:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1397:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1368:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1368:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1365:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1494:141:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1509:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1523:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1513:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1538:87:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1597:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1608:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1593:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1593:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1617:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_CorporateFactory_$333",
                          "nodeType": "YulIdentifier",
                          "src": "1548:44:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1548:77:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1538:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_CorporateFactory_$333",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1325:9:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "779:7:7",
=======
                "src": "1336:7:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "791:6:7",
                "type": ""
              }
            ],
            "src": "721:351:7"
=======
                "src": "1348:6:6",
                "type": ""
              }
            ],
            "src": "1265:377:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "1168:287:7",
=======
              "src": "1731:280:6",
>>>>>>> main
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "1214:83:7",
=======
                    "src": "1777:83:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1216:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1216:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1216:79:7"
=======
                            "src": "1779:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1779:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1779:79:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1189:7:7"
=======
                            "src": "1752:7:6"
>>>>>>> main
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1198:9:7"
=======
                            "src": "1761:9:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1185:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1185:23:7"
=======
                          "src": "1748:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1748:23:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "1210:2:7",
=======
                        "src": "1773:2:6",
>>>>>>> main
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "1181:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1181:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1178:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1307:141:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1322:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1336:1:7",
=======
                      "src": "1744:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1744:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1741:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1870:134:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1885:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1899:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
<<<<<<< HEAD
                          "src": "1326:6:7",
=======
                          "src": "1889:6:6",
>>>>>>> main
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
<<<<<<< HEAD
                      "src": "1351:87:7",
=======
                      "src": "1914:80:6",
>>>>>>> main
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "1410:9:7"
=======
                                "src": "1966:9:6"
>>>>>>> main
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "1421:6:7"
=======
                                "src": "1977:6:6"
>>>>>>> main
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
                              "src": "1406:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1406:22:7"
=======
                              "src": "1962:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1962:22:6"
>>>>>>> main
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1430:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_CorporateFactory_$286",
                          "nodeType": "YulIdentifier",
                          "src": "1361:44:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1361:77:7"
=======
                            "src": "1986:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_FundsPool_$897",
                          "nodeType": "YulIdentifier",
                          "src": "1924:37:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1924:70:6"
>>>>>>> main
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1351:6:7"
=======
                          "src": "1914:6:6"
>>>>>>> main
                        }
                      ]
                    }
                  ]
                }
              ]
            },
<<<<<<< HEAD
            "name": "abi_decode_tuple_t_contract$_CorporateFactory_$286",
=======
            "name": "abi_decode_tuple_t_contract$_FundsPool_$897",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1138:9:7",
=======
                "src": "1701:9:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1149:7:7",
=======
                "src": "1712:7:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1161:6:7",
                "type": ""
              }
            ],
            "src": "1078:377:7"
=======
                "src": "1724:6:6",
                "type": ""
              }
            ],
            "src": "1648:363:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "1544:280:7",
=======
              "src": "2104:284:6",
>>>>>>> main
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "1590:83:7",
=======
                    "src": "2150:83:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1592:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1592:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1592:79:7"
=======
                            "src": "2152:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2152:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2152:79:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1565:7:7"
=======
                            "src": "2125:7:6"
>>>>>>> main
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1574:9:7"
=======
                            "src": "2134:9:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1561:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1561:23:7"
=======
                          "src": "2121:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2121:23:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "1586:2:7",
=======
                        "src": "2146:2:6",
>>>>>>> main
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "1557:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1557:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1554:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1683:134:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1698:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1712:1:7",
=======
                      "src": "2117:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2117:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2114:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2243:138:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2258:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2272:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
<<<<<<< HEAD
                          "src": "1702:6:7",
=======
                          "src": "2262:6:6",
>>>>>>> main
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
<<<<<<< HEAD
                      "src": "1727:80:7",
=======
                      "src": "2287:84:6",
>>>>>>> main
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "1779:9:7"
=======
                                "src": "2343:9:6"
>>>>>>> main
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "1790:6:7"
=======
                                "src": "2354:6:6"
>>>>>>> main
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
                              "src": "1775:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1775:22:7"
=======
                              "src": "2339:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2339:22:6"
>>>>>>> main
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1799:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_FundsPool_$829",
                          "nodeType": "YulIdentifier",
                          "src": "1737:37:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1737:70:7"
=======
                            "src": "2363:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_GiverFactory_$1091",
                          "nodeType": "YulIdentifier",
                          "src": "2297:41:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2297:74:6"
>>>>>>> main
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1727:6:7"
=======
                          "src": "2287:6:6"
>>>>>>> main
                        }
                      ]
                    }
                  ]
                }
              ]
            },
<<<<<<< HEAD
            "name": "abi_decode_tuple_t_contract$_FundsPool_$829",
=======
            "name": "abi_decode_tuple_t_contract$_GiverFactory_$1091",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1514:9:7",
=======
                "src": "2074:9:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1525:7:7",
=======
                "src": "2085:7:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1537:6:7",
                "type": ""
              }
            ],
            "src": "1461:363:7"
=======
                "src": "2097:6:6",
                "type": ""
              }
            ],
            "src": "2017:371:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "1920:287:7",
=======
              "src": "2484:287:6",
>>>>>>> main
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "1966:83:7",
=======
                    "src": "2530:83:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1968:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1968:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1968:79:7"
=======
                            "src": "2532:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2532:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2532:79:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1941:7:7"
=======
                            "src": "2505:7:6"
>>>>>>> main
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1950:9:7"
=======
                            "src": "2514:9:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1937:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1937:23:7"
=======
                          "src": "2501:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2501:23:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "1962:2:7",
=======
                        "src": "2526:2:6",
>>>>>>> main
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "1933:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1933:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1930:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2059:141:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2074:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2088:1:7",
=======
                      "src": "2497:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2497:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2494:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2623:141:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2638:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2652:1:6",
>>>>>>> main
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
<<<<<<< HEAD
                          "src": "2078:6:7",
=======
                          "src": "2642:6:6",
>>>>>>> main
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
<<<<<<< HEAD
                      "src": "2103:87:7",
=======
                      "src": "2667:87:6",
>>>>>>> main
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "2162:9:7"
=======
                                "src": "2726:9:6"
>>>>>>> main
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "2173:6:7"
=======
                                "src": "2737:6:6"
>>>>>>> main
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
                              "src": "2158:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2158:22:7"
=======
                              "src": "2722:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2722:22:6"
>>>>>>> main
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "2182:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_ReceiverFactory_$1276",
                          "nodeType": "YulIdentifier",
                          "src": "2113:44:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2113:77:7"
=======
                            "src": "2746:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_ReceiverFactory_$1403",
                          "nodeType": "YulIdentifier",
                          "src": "2677:44:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2677:77:6"
>>>>>>> main
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "2103:6:7"
=======
                          "src": "2667:6:6"
>>>>>>> main
                        }
                      ]
                    }
                  ]
                }
              ]
            },
<<<<<<< HEAD
            "name": "abi_decode_tuple_t_contract$_ReceiverFactory_$1276",
=======
            "name": "abi_decode_tuple_t_contract$_ReceiverFactory_$1403",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1890:9:7",
=======
                "src": "2454:9:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1901:7:7",
=======
                "src": "2465:7:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1913:6:7",
                "type": ""
              }
            ],
            "src": "1830:377:7"
=======
                "src": "2477:6:6",
                "type": ""
              }
            ],
            "src": "2394:377:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "2278:53:7",
=======
              "src": "2842:53:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2295:3:7"
=======
                        "src": "2859:3:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "2318:5:7"
=======
                            "src": "2882:5:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "2300:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2300:24:7"
=======
                          "src": "2864:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2864:24:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2288:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2288:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2288:37:7"
=======
                      "src": "2852:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2852:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2852:37:6"
>>>>>>> main
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2266:5:7",
=======
                "src": "2830:5:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2273:3:7",
                "type": ""
              }
            ],
            "src": "2213:118:7"
=======
                "src": "2837:3:6",
                "type": ""
              }
            ],
            "src": "2777:118:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "2426:90:7",
=======
              "src": "2990:90:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2443:3:7"
=======
                        "src": "3007:3:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "2503:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_CorporateFactory_$286_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2448:54:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2448:61:7"
=======
                            "src": "3067:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_CorporateFactory_$333_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3012:54:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3012:61:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2436:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2436:74:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2436:74:7"
                }
              ]
            },
            "name": "abi_encode_t_contract$_CorporateFactory_$286_to_t_address_fromStack",
=======
                      "src": "3000:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3000:74:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3000:74:6"
                }
              ]
            },
            "name": "abi_encode_t_contract$_CorporateFactory_$333_to_t_address_fromStack",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2414:5:7",
=======
                "src": "2978:5:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2421:3:7",
                "type": ""
              }
            ],
            "src": "2337:179:7"
=======
                "src": "2985:3:6",
                "type": ""
              }
            ],
            "src": "2901:179:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "2612:91:7",
=======
              "src": "3176:91:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2629:3:7"
=======
                        "src": "3193:3:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "2690:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_FundsPool_$829_to_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "2634:55:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2634:62:7"
=======
                            "src": "3254:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_FundsPool_$897_to_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "3198:55:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3198:62:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2622:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2622:75:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2622:75:7"
                }
              ]
            },
            "name": "abi_encode_t_contract$_FundsPool_$829_to_t_address_payable_fromStack",
=======
                      "src": "3186:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3186:75:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3186:75:6"
                }
              ]
            },
            "name": "abi_encode_t_contract$_FundsPool_$897_to_t_address_payable_fromStack",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2600:5:7",
=======
                "src": "3164:5:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2607:3:7",
                "type": ""
              }
            ],
            "src": "2522:181:7"
=======
                "src": "3171:3:6",
                "type": ""
              }
            ],
            "src": "3086:181:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "2798:90:7",
=======
              "src": "3359:87:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "2815:3:7"
=======
                        "src": "3376:3:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "2875:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_ReceiverFactory_$1276_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2820:54:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2820:61:7"
=======
                            "src": "3433:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_GiverFactory_$1091_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3381:51:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3381:58:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2808:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2808:74:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2808:74:7"
                }
              ]
            },
            "name": "abi_encode_t_contract$_ReceiverFactory_$1276_to_t_address_fromStack",
=======
                      "src": "3369:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3369:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3369:71:6"
                }
              ]
            },
            "name": "abi_encode_t_contract$_GiverFactory_$1091_to_t_address_fromStack",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2786:5:7",
=======
                "src": "3347:5:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2793:3:7",
                "type": ""
              }
            ],
            "src": "2709:179:7"
=======
                "src": "3354:3:6",
                "type": ""
              }
            ],
            "src": "3273:173:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "3040:220:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3050:74:7",
                  "value": {
=======
              "src": "3541:90:6",
              "statements": [
                {
                  "expression": {
>>>>>>> main
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3116:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3121:2:7",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3057:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3057:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3050:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3222:3:7"
=======
                        "src": "3558:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3618:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_ReceiverFactory_$1403_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3563:54:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3563:61:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3551:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3551:74:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3551:74:6"
                }
              ]
            },
            "name": "abi_encode_t_contract$_ReceiverFactory_$1403_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3529:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3536:3:6",
                "type": ""
              }
            ],
            "src": "3452:179:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3783:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3793:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3859:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3864:2:6",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3800:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3800:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3793:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3965:3:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_18800ddaffb2bbe6f2bc5e467d1cfa9d8c92071f32e94da5dc318c27d42ebc51",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3133:88:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3133:93:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3133:93:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3235:19:7",
=======
                      "src": "3876:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3876:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3876:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3978:19:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3246:3:7"
=======
                        "src": "3989:3:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "3251:2:7",
=======
                        "src": "3994:2:6",
>>>>>>> main
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3242:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3242:12:7"
=======
                      "src": "3985:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3985:12:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3235:3:7"
=======
                      "src": "3978:3:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_18800ddaffb2bbe6f2bc5e467d1cfa9d8c92071f32e94da5dc318c27d42ebc51_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3028:3:7",
=======
                "src": "3771:3:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3036:3:7",
                "type": ""
              }
            ],
            "src": "2894:366:7"
=======
                "src": "3779:3:6",
                "type": ""
              }
            ],
            "src": "3637:366:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "3412:220:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3422:74:7",
=======
              "src": "4155:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4165:74:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3488:3:7"
=======
                        "src": "4231:3:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "3493:2:7",
=======
                        "src": "4236:2:6",
>>>>>>> main
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3429:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3429:67:7"
=======
                      "src": "4172:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4172:67:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3422:3:7"
=======
                      "src": "4165:3:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3594:3:7"
=======
                        "src": "4337:3:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_31acbe3d12b813e111dc1cc4e8ae39d7f2f57f94edf623438aaea3c22cfeb1f7",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3505:88:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3505:93:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3505:93:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3607:19:7",
=======
                      "src": "4248:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4248:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4248:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4350:19:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3618:3:7"
=======
                        "src": "4361:3:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "3623:2:7",
=======
                        "src": "4366:2:6",
>>>>>>> main
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3614:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3614:12:7"
=======
                      "src": "4357:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4357:12:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3607:3:7"
=======
                      "src": "4350:3:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_31acbe3d12b813e111dc1cc4e8ae39d7f2f57f94edf623438aaea3c22cfeb1f7_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3400:3:7",
=======
                "src": "4143:3:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3408:3:7",
                "type": ""
              }
            ],
            "src": "3266:366:7"
=======
                "src": "4151:3:6",
                "type": ""
              }
            ],
            "src": "4009:366:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "3736:124:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3746:26:7",
=======
              "src": "4479:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4489:26:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3758:9:7"
=======
                        "src": "4501:9:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "3769:2:7",
=======
                        "src": "4512:2:6",
>>>>>>> main
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3754:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3754:18:7"
=======
                      "src": "4497:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4497:18:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3746:4:7"
=======
                      "src": "4489:4:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3826:6:7"
=======
                        "src": "4569:6:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "3839:9:7"
=======
                            "src": "4582:9:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "3850:1:7",
=======
                            "src": "4593:1:6",
>>>>>>> main
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "3835:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3835:17:7"
=======
                          "src": "4578:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4578:17:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3782:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3782:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3782:71:7"
=======
                      "src": "4525:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4525:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4525:71:6"
>>>>>>> main
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3708:9:7",
=======
                "src": "4451:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4463:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4474:4:6",
                "type": ""
              }
            ],
            "src": "4381:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4731:148:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4741:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4753:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4764:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4749:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4749:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4741:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4845:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4858:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4869:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4854:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4854:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_CorporateFactory_$333_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4777:67:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4777:95:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4777:95:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_CorporateFactory_$333__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4703:9:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3720:6:7",
=======
                "src": "4715:6:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3731:4:7",
                "type": ""
              }
            ],
            "src": "3638:222:7"
=======
                "src": "4726:4:6",
                "type": ""
              }
            ],
            "src": "4609:270:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "3988:148:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3998:26:7",
=======
              "src": "5008:149:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5018:26:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "4010:9:7"
=======
                        "src": "5030:9:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "4021:2:7",
=======
                        "src": "5041:2:6",
>>>>>>> main
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4006:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4006:18:7"
=======
                      "src": "5026:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5026:18:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3998:4:7"
=======
                      "src": "5018:4:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "4102:6:7"
=======
                        "src": "5123:6:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "4115:9:7"
=======
                            "src": "5136:9:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "4126:1:7",
=======
                            "src": "5147:1:6",
>>>>>>> main
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "4111:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4111:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_CorporateFactory_$286_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4034:67:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4034:95:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4034:95:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_CorporateFactory_$286__to_t_address__fromStack_reversed",
=======
                          "src": "5132:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5132:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_FundsPool_$897_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5054:68:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5054:96:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5054:96:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_FundsPool_$897__to_t_address_payable__fromStack_reversed",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3960:9:7",
=======
                "src": "4980:9:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3972:6:7",
=======
                "src": "4992:6:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3983:4:7",
                "type": ""
              }
            ],
            "src": "3866:270:7"
=======
                "src": "5003:4:6",
                "type": ""
              }
            ],
            "src": "4885:272:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "4265:149:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4275:26:7",
=======
              "src": "5282:145:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5292:26:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "4287:9:7"
=======
                        "src": "5304:9:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "4298:2:7",
=======
                        "src": "5315:2:6",
>>>>>>> main
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4283:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4283:18:7"
=======
                      "src": "5300:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5300:18:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4275:4:7"
=======
                      "src": "5292:4:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "4380:6:7"
=======
                        "src": "5393:6:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "4393:9:7"
=======
                            "src": "5406:9:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "4404:1:7",
=======
                            "src": "5417:1:6",
>>>>>>> main
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "4389:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4389:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_FundsPool_$829_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4311:68:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4311:96:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4311:96:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_FundsPool_$829__to_t_address_payable__fromStack_reversed",
=======
                          "src": "5402:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5402:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_GiverFactory_$1091_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5328:64:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5328:92:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5328:92:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_GiverFactory_$1091__to_t_address__fromStack_reversed",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4237:9:7",
=======
                "src": "5254:9:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4249:6:7",
=======
                "src": "5266:6:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4260:4:7",
                "type": ""
              }
            ],
            "src": "4142:272:7"
=======
                "src": "5277:4:6",
                "type": ""
              }
            ],
            "src": "5163:264:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "4542:148:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4552:26:7",
=======
              "src": "5555:148:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5565:26:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "4564:9:7"
=======
                        "src": "5577:9:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "4575:2:7",
=======
                        "src": "5588:2:6",
>>>>>>> main
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4560:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4560:18:7"
=======
                      "src": "5573:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5573:18:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4552:4:7"
=======
                      "src": "5565:4:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "4656:6:7"
=======
                        "src": "5669:6:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "4669:9:7"
=======
                            "src": "5682:9:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "4680:1:7",
=======
                            "src": "5693:1:6",
>>>>>>> main
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "4665:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4665:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_ReceiverFactory_$1276_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4588:67:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4588:95:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4588:95:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ReceiverFactory_$1276__to_t_address__fromStack_reversed",
=======
                          "src": "5678:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5678:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_ReceiverFactory_$1403_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5601:67:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5601:95:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5601:95:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ReceiverFactory_$1403__to_t_address__fromStack_reversed",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4514:9:7",
=======
                "src": "5527:9:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4526:6:7",
=======
                "src": "5539:6:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4537:4:7",
                "type": ""
              }
            ],
            "src": "4420:270:7"
=======
                "src": "5550:4:6",
                "type": ""
              }
            ],
            "src": "5433:270:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "4867:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4877:26:7",
=======
              "src": "5880:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5890:26:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "4889:9:7"
=======
                        "src": "5902:9:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "4900:2:7",
=======
                        "src": "5913:2:6",
>>>>>>> main
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4885:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4885:18:7"
=======
                      "src": "5898:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5898:18:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4877:4:7"
=======
                      "src": "5890:4:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "4924:9:7"
=======
                            "src": "5937:9:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "4935:1:7",
=======
                            "src": "5948:1:6",
>>>>>>> main
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "4920:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4920:17:7"
=======
                          "src": "5933:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5933:17:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "4943:4:7"
=======
                            "src": "5956:4:6"
>>>>>>> main
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "4949:9:7"
=======
                            "src": "5962:9:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "4939:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4939:20:7"
=======
                          "src": "5952:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5952:20:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4913:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4913:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4913:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4969:139:7",
=======
                      "src": "5926:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5926:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5926:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5982:139:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "5103:4:7"
=======
                        "src": "6116:4:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_18800ddaffb2bbe6f2bc5e467d1cfa9d8c92071f32e94da5dc318c27d42ebc51_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4977:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4977:131:7"
=======
                      "src": "5990:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5990:131:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4969:4:7"
=======
                      "src": "5982:4:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_18800ddaffb2bbe6f2bc5e467d1cfa9d8c92071f32e94da5dc318c27d42ebc51__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4847:9:7",
=======
                "src": "5860:9:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4862:4:7",
                "type": ""
              }
            ],
            "src": "4696:419:7"
=======
                "src": "5875:4:6",
                "type": ""
              }
            ],
            "src": "5709:419:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "5292:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5302:26:7",
=======
              "src": "6305:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6315:26:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "5314:9:7"
=======
                        "src": "6327:9:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "5325:2:7",
=======
                        "src": "6338:2:6",
>>>>>>> main
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5310:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5310:18:7"
=======
                      "src": "6323:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6323:18:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5302:4:7"
=======
                      "src": "6315:4:6"
>>>>>>> main
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "5349:9:7"
=======
                            "src": "6362:9:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "5360:1:7",
=======
                            "src": "6373:1:6",
>>>>>>> main
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "5345:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5345:17:7"
=======
                          "src": "6358:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6358:17:6"
>>>>>>> main
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "5368:4:7"
=======
                            "src": "6381:4:6"
>>>>>>> main
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "5374:9:7"
=======
                            "src": "6387:9:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "5364:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5364:20:7"
=======
                          "src": "6377:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6377:20:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5338:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5338:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5338:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5394:139:7",
=======
                      "src": "6351:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6351:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6351:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6407:139:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "5528:4:7"
=======
                        "src": "6541:4:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_31acbe3d12b813e111dc1cc4e8ae39d7f2f57f94edf623438aaea3c22cfeb1f7_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5402:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5402:131:7"
=======
                      "src": "6415:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6415:131:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5394:4:7"
=======
                      "src": "6407:4:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_31acbe3d12b813e111dc1cc4e8ae39d7f2f57f94edf623438aaea3c22cfeb1f7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "5272:9:7",
=======
                "src": "6285:9:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "5287:4:7",
                "type": ""
              }
            ],
            "src": "5121:419:7"
=======
                "src": "6300:4:6",
                "type": ""
              }
            ],
            "src": "6134:419:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "5586:35:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5596:19:7",
=======
              "src": "6599:35:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6609:19:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "5612:2:7",
=======
                        "src": "6625:2:6",
>>>>>>> main
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5606:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5606:9:7"
=======
                      "src": "6619:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6619:9:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5596:6:7"
=======
                      "src": "6609:6:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "5579:6:7",
                "type": ""
              }
            ],
            "src": "5546:75:7"
=======
                "src": "6592:6:6",
                "type": ""
              }
            ],
            "src": "6559:75:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "5723:73:7",
=======
              "src": "6736:73:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "5740:3:7"
=======
                        "src": "6753:3:6"
>>>>>>> main
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "5745:6:7"
=======
                        "src": "6758:6:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5733:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5733:19:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5733:19:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5761:29:7",
=======
                      "src": "6746:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6746:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6746:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6774:29:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "5780:3:7"
=======
                        "src": "6793:3:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "5785:4:7",
=======
                        "src": "6798:4:6",
>>>>>>> main
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5776:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5776:14:7"
=======
                      "src": "6789:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6789:14:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5761:11:7"
=======
                      "src": "6774:11:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "5695:3:7",
=======
                "src": "6708:3:6",
>>>>>>> main
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "5700:6:7",
=======
                "src": "6713:6:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "5711:11:7",
                "type": ""
              }
            ],
            "src": "5627:169:7"
=======
                "src": "6724:11:6",
                "type": ""
              }
            ],
            "src": "6640:169:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "5847:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5857:35:7",
=======
              "src": "6860:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6870:35:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "5886:5:7"
=======
                        "src": "6899:5:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5868:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5868:24:7"
=======
                      "src": "6881:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6881:24:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5857:7:7"
=======
                      "src": "6870:7:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "5829:5:7",
=======
                "src": "6842:5:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "5839:7:7",
                "type": ""
              }
            ],
            "src": "5802:96:7"
=======
                "src": "6852:7:6",
                "type": ""
              }
            ],
            "src": "6815:96:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "5957:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5967:35:7",
=======
              "src": "6970:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6980:35:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "5996:5:7"
=======
                        "src": "7009:5:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5978:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5978:24:7"
=======
                      "src": "6991:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6991:24:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5967:7:7"
=======
                      "src": "6980:7:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "5939:5:7",
=======
                "src": "6952:5:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "5949:7:7",
                "type": ""
              }
            ],
            "src": "5904:104:7"
=======
                "src": "6962:7:6",
                "type": ""
              }
            ],
            "src": "6917:104:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "6083:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6093:35:7",
=======
              "src": "7096:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7106:35:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "6122:5:7"
=======
                        "src": "7135:5:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6104:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6104:24:7"
=======
                      "src": "7117:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7117:24:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6093:7:7"
=======
                      "src": "7106:7:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
<<<<<<< HEAD
            "name": "cleanup_t_contract$_CorporateFactory_$286",
=======
            "name": "cleanup_t_contract$_CorporateFactory_$333",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6065:5:7",
=======
                "src": "7078:5:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6075:7:7",
                "type": ""
              }
            ],
            "src": "6014:120:7"
=======
                "src": "7088:7:6",
                "type": ""
              }
            ],
            "src": "7027:120:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "6202:59:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6212:43:7",
=======
              "src": "7215:59:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7225:43:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "6249:5:7"
=======
                        "src": "7262:5:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address_payable",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6223:25:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6223:32:7"
=======
                      "src": "7236:25:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7236:32:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7225:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_FundsPool_$897",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7197:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7207:7:6",
                "type": ""
              }
            ],
            "src": "7153:121:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7346:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7356:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7385:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "7367:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7367:24:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6212:7:7"
=======
                      "src": "7356:7:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
<<<<<<< HEAD
            "name": "cleanup_t_contract$_FundsPool_$829",
=======
            "name": "cleanup_t_contract$_GiverFactory_$1091",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6184:5:7",
=======
                "src": "7328:5:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6194:7:7",
                "type": ""
              }
            ],
            "src": "6140:121:7"
=======
                "src": "7338:7:6",
                "type": ""
              }
            ],
            "src": "7280:117:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "6336:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6346:35:7",
=======
              "src": "7472:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7482:35:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "6375:5:7"
=======
                        "src": "7511:5:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6357:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6357:24:7"
=======
                      "src": "7493:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7493:24:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6346:7:7"
=======
                      "src": "7482:7:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
<<<<<<< HEAD
            "name": "cleanup_t_contract$_ReceiverFactory_$1276",
=======
            "name": "cleanup_t_contract$_ReceiverFactory_$1403",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6318:5:7",
=======
                "src": "7454:5:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6328:7:7",
                "type": ""
              }
            ],
            "src": "6267:120:7"
=======
                "src": "7464:7:6",
                "type": ""
              }
            ],
            "src": "7403:120:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "6438:81:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6448:65:7",
=======
              "src": "7574:81:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7584:65:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "6463:5:7"
=======
                        "src": "7599:5:6"
>>>>>>> main
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "6470:42:7",
=======
                        "src": "7606:42:6",
>>>>>>> main
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6459:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6459:54:7"
=======
                      "src": "7595:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7595:54:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6448:7:7"
=======
                      "src": "7584:7:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6420:5:7",
=======
                "src": "7556:5:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6430:7:7",
                "type": ""
              }
            ],
            "src": "6393:126:7"
=======
                "src": "7566:7:6",
                "type": ""
              }
            ],
            "src": "7529:126:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "6609:90:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6619:74:7",
=======
              "src": "7745:90:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7755:74:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "6687:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_CorporateFactory_$286_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6632:54:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6632:61:7"
=======
                        "src": "7823:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_CorporateFactory_$333_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7768:54:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7768:61:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6619:9:7"
=======
                      "src": "7755:9:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
<<<<<<< HEAD
            "name": "convert_t_contract$_CorporateFactory_$286_to_t_address",
=======
            "name": "convert_t_contract$_CorporateFactory_$333_to_t_address",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6589:5:7",
=======
                "src": "7725:5:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6599:9:7",
                "type": ""
              }
            ],
            "src": "6525:174:7"
=======
                "src": "7735:9:6",
                "type": ""
              }
            ],
            "src": "7661:174:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "6789:53:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6799:37:7",
=======
              "src": "7925:53:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7935:37:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "6830:5:7"
=======
                        "src": "7966:5:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6812:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6812:24:7"
=======
                      "src": "7948:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7948:24:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6799:9:7"
=======
                      "src": "7935:9:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
<<<<<<< HEAD
            "name": "convert_t_contract$_CorporateFactory_$286_to_t_uint160",
=======
            "name": "convert_t_contract$_CorporateFactory_$333_to_t_uint160",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6769:5:7",
=======
                "src": "7905:5:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6779:9:7",
                "type": ""
              }
            ],
            "src": "6705:137:7"
=======
                "src": "7915:9:6",
                "type": ""
              }
            ],
            "src": "7841:137:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "6933:83:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6943:67:7",
=======
              "src": "8069:83:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8079:67:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7004:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_FundsPool_$829_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6956:47:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6956:54:7"
=======
                        "src": "8140:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_FundsPool_$897_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8092:47:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8092:54:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6943:9:7"
=======
                      "src": "8079:9:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
<<<<<<< HEAD
            "name": "convert_t_contract$_FundsPool_$829_to_t_address_payable",
=======
            "name": "convert_t_contract$_FundsPool_$897_to_t_address_payable",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6913:5:7",
=======
                "src": "8049:5:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6923:9:7",
                "type": ""
              }
            ],
            "src": "6848:168:7"
=======
                "src": "8059:9:6",
                "type": ""
              }
            ],
            "src": "7984:168:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "7099:53:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7109:37:7",
=======
              "src": "8235:53:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8245:37:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7140:5:7"
=======
                        "src": "8276:5:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7122:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7122:24:7"
=======
                      "src": "8258:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8258:24:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7109:9:7"
=======
                      "src": "8245:9:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
<<<<<<< HEAD
            "name": "convert_t_contract$_FundsPool_$829_to_t_uint160",
=======
            "name": "convert_t_contract$_FundsPool_$897_to_t_uint160",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7079:5:7",
=======
                "src": "8215:5:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7089:9:7",
                "type": ""
              }
            ],
            "src": "7022:130:7"
=======
                "src": "8225:9:6",
                "type": ""
              }
            ],
            "src": "8158:130:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "7242:90:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7252:74:7",
=======
              "src": "8375:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8385:71:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7320:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_ReceiverFactory_$1276_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7265:54:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7265:61:7"
=======
                        "src": "8450:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_GiverFactory_$1091_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8398:51:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8398:58:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7252:9:7"
=======
                      "src": "8385:9:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
<<<<<<< HEAD
            "name": "convert_t_contract$_ReceiverFactory_$1276_to_t_address",
=======
            "name": "convert_t_contract$_GiverFactory_$1091_to_t_address",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7222:5:7",
=======
                "src": "8355:5:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7232:9:7",
                "type": ""
              }
            ],
            "src": "7158:174:7"
=======
                "src": "8365:9:6",
                "type": ""
              }
            ],
            "src": "8294:168:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "7422:53:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7432:37:7",
=======
              "src": "8549:53:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8559:37:6",
>>>>>>> main
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7463:5:7"
=======
                        "src": "8590:5:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7445:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7445:24:7"
=======
                      "src": "8572:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8572:24:6"
>>>>>>> main
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7432:9:7"
=======
                      "src": "8559:9:6"
>>>>>>> main
                    }
                  ]
                }
              ]
            },
<<<<<<< HEAD
            "name": "convert_t_contract$_ReceiverFactory_$1276_to_t_uint160",
=======
            "name": "convert_t_contract$_GiverFactory_$1091_to_t_uint160",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7402:5:7",
=======
                "src": "8529:5:6",
>>>>>>> main
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7412:9:7",
                "type": ""
              }
            ],
            "src": "7338:137:7"
=======
                "src": "8539:9:6",
                "type": ""
              }
            ],
            "src": "8468:134:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "7570:28:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7587:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7590:1:7",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7580:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7580:12:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7580:12:7"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "7481:117:7"
=======
              "src": "8692:90:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8702:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8770:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_ReceiverFactory_$1403_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8715:54:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8715:61:6"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "8702:9:6"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ReceiverFactory_$1403_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8672:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "8682:9:6",
                "type": ""
              }
            ],
            "src": "8608:174:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "7693:28:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7710:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7713:1:7",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7703:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7703:12:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7703:12:7"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "7604:117:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7833:117:7",
              "statements": [
                {
                  "expression": {
=======
              "src": "8872:53:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8882:37:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8913:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8895:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8895:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "8882:9:6"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ReceiverFactory_$1403_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8852:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "8862:9:6",
                "type": ""
              }
            ],
            "src": "8788:137:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9020:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9037:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9040:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9030:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9030:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9030:12:6"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "8931:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9143:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9160:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9163:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9153:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9153:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9153:12:6"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "9054:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9283:117:6",
              "statements": [
                {
                  "expression": {
>>>>>>> main
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "7855:6:7"
=======
                            "src": "9305:6:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "7863:1:7",
=======
                            "src": "9313:1:6",
>>>>>>> main
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "7851:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7851:14:7"
=======
                          "src": "9301:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9301:14:6"
>>>>>>> main
                      },
                      {
                        "hexValue": "466163746f727920776173206e6f742063726561746564206279207468652061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "7867:34:7",
=======
                        "src": "9317:34:6",
>>>>>>> main
                        "type": "",
                        "value": "Factory was not created by the a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7844:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7844:58:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7844:58:7"
=======
                      "src": "9294:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9294:58:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9294:58:6"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "7923:6:7"
=======
                            "src": "9373:6:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "7931:2:7",
=======
                            "src": "9381:2:6",
>>>>>>> main
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "7919:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7919:15:7"
=======
                          "src": "9369:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9369:15:6"
>>>>>>> main
                      },
                      {
                        "hexValue": "646d696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "7936:6:7",
=======
                        "src": "9386:6:6",
>>>>>>> main
                        "type": "",
                        "value": "dmin"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7912:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7912:31:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7912:31:7"
=======
                      "src": "9362:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9362:31:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9362:31:6"
>>>>>>> main
                }
              ]
            },
            "name": "store_literal_in_memory_18800ddaffb2bbe6f2bc5e467d1cfa9d8c92071f32e94da5dc318c27d42ebc51",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7825:6:7",
                "type": ""
              }
            ],
            "src": "7727:223:7"
=======
                "src": "9275:6:6",
                "type": ""
              }
            ],
            "src": "9177:223:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "8062:114:7",
=======
              "src": "9512:114:6",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "8084:6:7"
=======
                            "src": "9534:6:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "8092:1:7",
=======
                            "src": "9542:1:6",
>>>>>>> main
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "8080:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8080:14:7"
=======
                          "src": "9530:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9530:14:6"
>>>>>>> main
                      },
                      {
                        "hexValue": "506f6f6c20776173206e6f742063726561746564206279207468652061646d69",
                        "kind": "string",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8096:34:7",
=======
                        "src": "9546:34:6",
>>>>>>> main
                        "type": "",
                        "value": "Pool was not created by the admi"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8073:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8073:58:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8073:58:7"
=======
                      "src": "9523:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9523:58:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9523:58:6"
>>>>>>> main
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "8152:6:7"
=======
                            "src": "9602:6:6"
>>>>>>> main
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "8160:2:7",
=======
                            "src": "9610:2:6",
>>>>>>> main
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "8148:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8148:15:7"
=======
                          "src": "9598:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9598:15:6"
>>>>>>> main
                      },
                      {
                        "hexValue": "6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8165:3:7",
=======
                        "src": "9615:3:6",
>>>>>>> main
                        "type": "",
                        "value": "n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8141:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8141:28:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8141:28:7"
=======
                      "src": "9591:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9591:28:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9591:28:6"
>>>>>>> main
                }
              ]
            },
            "name": "store_literal_in_memory_31acbe3d12b813e111dc1cc4e8ae39d7f2f57f94edf623438aaea3c22cfeb1f7",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "8054:6:7",
                "type": ""
              }
            ],
            "src": "7956:220:7"
=======
                "src": "9504:6:6",
                "type": ""
              }
            ],
            "src": "9406:220:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "8225:79:7",
=======
              "src": "9675:79:6",
>>>>>>> main
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "8282:16:7",
=======
                    "src": "9732:16:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
                              "src": "8291:1:7",
=======
                              "src": "9741:1:6",
>>>>>>> main
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
                              "src": "8294:1:7",
=======
                              "src": "9744:1:6",
>>>>>>> main
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "8284:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8284:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8284:12:7"
=======
                            "src": "9734:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9734:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9734:12:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "8248:5:7"
=======
                            "src": "9698:5:6"
>>>>>>> main
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "8273:5:7"
=======
                                "src": "9723:5:6"
>>>>>>> main
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
                              "src": "8255:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8255:24:7"
=======
                              "src": "9705:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9705:24:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "8245:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8245:35:7"
=======
                          "src": "9695:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9695:35:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8238:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8238:43:7"
                  },
                  "nodeType": "YulIf",
                  "src": "8235:2:7"
=======
                      "src": "9688:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9688:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "9685:2:6"
>>>>>>> main
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "8218:5:7",
                "type": ""
              }
            ],
            "src": "8182:122:7"
=======
                "src": "9668:5:6",
                "type": ""
              }
            ],
            "src": "9632:122:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "8377:103:7",
=======
              "src": "9827:103:6",
>>>>>>> main
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "8458:16:7",
=======
                    "src": "9908:16:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
                              "src": "8467:1:7",
=======
                              "src": "9917:1:6",
>>>>>>> main
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
                              "src": "8470:1:7",
=======
                              "src": "9920:1:6",
>>>>>>> main
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "8460:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8460:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8460:12:7"
=======
                            "src": "9910:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9910:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9910:12:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "8400:5:7"
=======
                            "src": "9850:5:6"
>>>>>>> main
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "8449:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_CorporateFactory_$286",
                              "nodeType": "YulIdentifier",
                              "src": "8407:41:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8407:48:7"
=======
                                "src": "9899:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_CorporateFactory_$333",
                              "nodeType": "YulIdentifier",
                              "src": "9857:41:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9857:48:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "8397:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8397:59:7"
=======
                          "src": "9847:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9847:59:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8390:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8390:67:7"
                  },
                  "nodeType": "YulIf",
                  "src": "8387:2:7"
                }
              ]
            },
            "name": "validator_revert_t_contract$_CorporateFactory_$286",
=======
                      "src": "9840:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9840:67:6"
                  },
                  "nodeType": "YulIf",
                  "src": "9837:2:6"
                }
              ]
            },
            "name": "validator_revert_t_contract$_CorporateFactory_$333",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "8370:5:7",
                "type": ""
              }
            ],
            "src": "8310:170:7"
=======
                "src": "9820:5:6",
                "type": ""
              }
            ],
            "src": "9760:170:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "8546:96:7",
=======
              "src": "9996:96:6",
>>>>>>> main
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "8620:16:7",
=======
                    "src": "10070:16:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
                              "src": "8629:1:7",
=======
                              "src": "10079:1:6",
>>>>>>> main
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
                              "src": "8632:1:7",
=======
                              "src": "10082:1:6",
>>>>>>> main
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "8622:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8622:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8622:12:7"
=======
                            "src": "10072:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10072:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10072:12:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "8569:5:7"
=======
                            "src": "10019:5:6"
>>>>>>> main
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "8611:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_FundsPool_$829",
                              "nodeType": "YulIdentifier",
                              "src": "8576:34:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8576:41:7"
=======
                                "src": "10061:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_FundsPool_$897",
                              "nodeType": "YulIdentifier",
                              "src": "10026:34:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10026:41:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "8566:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8566:52:7"
=======
                          "src": "10016:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10016:52:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8559:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8559:60:7"
                  },
                  "nodeType": "YulIf",
                  "src": "8556:2:7"
                }
              ]
            },
            "name": "validator_revert_t_contract$_FundsPool_$829",
=======
                      "src": "10009:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10009:60:6"
                  },
                  "nodeType": "YulIf",
                  "src": "10006:2:6"
                }
              ]
            },
            "name": "validator_revert_t_contract$_FundsPool_$897",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "8539:5:7",
                "type": ""
              }
            ],
            "src": "8486:156:7"
=======
                "src": "9989:5:6",
                "type": ""
              }
            ],
            "src": "9936:156:6"
>>>>>>> main
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "8715:103:7",
=======
              "src": "10162:100:6",
>>>>>>> main
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
                    "src": "8796:16:7",
=======
                    "src": "10240:16:6",
>>>>>>> main
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
                              "src": "8805:1:7",
=======
                              "src": "10249:1:6",
>>>>>>> main
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
                              "src": "8808:1:7",
=======
                              "src": "10252:1:6",
>>>>>>> main
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "8798:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8798:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8798:12:7"
=======
                            "src": "10242:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10242:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10242:12:6"
>>>>>>> main
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "8738:5:7"
=======
                            "src": "10185:5:6"
>>>>>>> main
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "8787:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_ReceiverFactory_$1276",
                              "nodeType": "YulIdentifier",
                              "src": "8745:41:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8745:48:7"
=======
                                "src": "10231:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_GiverFactory_$1091",
                              "nodeType": "YulIdentifier",
                              "src": "10192:38:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10192:45:6"
>>>>>>> main
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "8735:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8735:59:7"
=======
                          "src": "10182:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10182:56:6"
>>>>>>> main
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8728:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8728:67:7"
                  },
                  "nodeType": "YulIf",
                  "src": "8725:2:7"
                }
              ]
            },
            "name": "validator_revert_t_contract$_ReceiverFactory_$1276",
=======
                      "src": "10175:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10175:64:6"
                  },
                  "nodeType": "YulIf",
                  "src": "10172:2:6"
                }
              ]
            },
            "name": "validator_revert_t_contract$_GiverFactory_$1091",
>>>>>>> main
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "8708:5:7",
                "type": ""
              }
            ],
            "src": "8648:170:7"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_contract$_CorporateFactory_$286(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_CorporateFactory_$286(value)\n    }\n\n    function abi_decode_t_contract$_FundsPool_$829(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_FundsPool_$829(value)\n    }\n\n    function abi_decode_t_contract$_ReceiverFactory_$1276(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_ReceiverFactory_$1276(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_CorporateFactory_$286(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_CorporateFactory_$286(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_FundsPool_$829(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_FundsPool_$829(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_ReceiverFactory_$1276(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ReceiverFactory_$1276(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_CorporateFactory_$286_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_CorporateFactory_$286_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_FundsPool_$829_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_FundsPool_$829_to_t_address_payable(value))\n    }\n\n    function abi_encode_t_contract$_ReceiverFactory_$1276_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ReceiverFactory_$1276_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_18800ddaffb2bbe6f2bc5e467d1cfa9d8c92071f32e94da5dc318c27d42ebc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_18800ddaffb2bbe6f2bc5e467d1cfa9d8c92071f32e94da5dc318c27d42ebc51(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_31acbe3d12b813e111dc1cc4e8ae39d7f2f57f94edf623438aaea3c22cfeb1f7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_31acbe3d12b813e111dc1cc4e8ae39d7f2f57f94edf623438aaea3c22cfeb1f7(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_CorporateFactory_$286__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_CorporateFactory_$286_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_FundsPool_$829__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_FundsPool_$829_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_ReceiverFactory_$1276__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ReceiverFactory_$1276_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_18800ddaffb2bbe6f2bc5e467d1cfa9d8c92071f32e94da5dc318c27d42ebc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_18800ddaffb2bbe6f2bc5e467d1cfa9d8c92071f32e94da5dc318c27d42ebc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_31acbe3d12b813e111dc1cc4e8ae39d7f2f57f94edf623438aaea3c22cfeb1f7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_31acbe3d12b813e111dc1cc4e8ae39d7f2f57f94edf623438aaea3c22cfeb1f7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_CorporateFactory_$286(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_FundsPool_$829(value) -> cleaned {\n        cleaned := cleanup_t_address_payable(value)\n    }\n\n    function cleanup_t_contract$_ReceiverFactory_$1276(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function convert_t_contract$_CorporateFactory_$286_to_t_address(value) -> converted {\n        converted := convert_t_contract$_CorporateFactory_$286_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_CorporateFactory_$286_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_FundsPool_$829_to_t_address_payable(value) -> converted {\n        converted := convert_t_contract$_FundsPool_$829_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_FundsPool_$829_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_ReceiverFactory_$1276_to_t_address(value) -> converted {\n        converted := convert_t_contract$_ReceiverFactory_$1276_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ReceiverFactory_$1276_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_18800ddaffb2bbe6f2bc5e467d1cfa9d8c92071f32e94da5dc318c27d42ebc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Factory was not created by the a\")\n\n        mstore(add(memPtr, 32), \"dmin\")\n\n    }\n\n    function store_literal_in_memory_31acbe3d12b813e111dc1cc4e8ae39d7f2f57f94edf623438aaea3c22cfeb1f7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pool was not created by the admi\")\n\n        mstore(add(memPtr, 32), \"n\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_CorporateFactory_$286(value) {\n        if iszero(eq(value, cleanup_t_contract$_CorporateFactory_$286(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_FundsPool_$829(value) {\n        if iszero(eq(value, cleanup_t_contract$_FundsPool_$829(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_ReceiverFactory_$1276(value) {\n        if iszero(eq(value, cleanup_t_contract$_ReceiverFactory_$1276(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 7,
=======
                "src": "10155:5:6",
                "type": ""
              }
            ],
            "src": "10098:164:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10335:103:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10416:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10425:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10428:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10418:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10418:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10418:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10358:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10407:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_ReceiverFactory_$1403",
                              "nodeType": "YulIdentifier",
                              "src": "10365:41:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10365:48:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10355:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10355:59:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10348:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10348:67:6"
                  },
                  "nodeType": "YulIf",
                  "src": "10345:2:6"
                }
              ]
            },
            "name": "validator_revert_t_contract$_ReceiverFactory_$1403",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10328:5:6",
                "type": ""
              }
            ],
            "src": "10268:170:6"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_contract$_CorporateFactory_$333(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_CorporateFactory_$333(value)\n    }\n\n    function abi_decode_t_contract$_FundsPool_$897(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_FundsPool_$897(value)\n    }\n\n    function abi_decode_t_contract$_GiverFactory_$1091(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_GiverFactory_$1091(value)\n    }\n\n    function abi_decode_t_contract$_ReceiverFactory_$1403(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_ReceiverFactory_$1403(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_CorporateFactory_$333(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_CorporateFactory_$333(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_FundsPool_$897(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_FundsPool_$897(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_GiverFactory_$1091(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_GiverFactory_$1091(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_ReceiverFactory_$1403(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ReceiverFactory_$1403(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_CorporateFactory_$333_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_CorporateFactory_$333_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_FundsPool_$897_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_FundsPool_$897_to_t_address_payable(value))\n    }\n\n    function abi_encode_t_contract$_GiverFactory_$1091_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_GiverFactory_$1091_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_ReceiverFactory_$1403_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ReceiverFactory_$1403_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_18800ddaffb2bbe6f2bc5e467d1cfa9d8c92071f32e94da5dc318c27d42ebc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_18800ddaffb2bbe6f2bc5e467d1cfa9d8c92071f32e94da5dc318c27d42ebc51(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_31acbe3d12b813e111dc1cc4e8ae39d7f2f57f94edf623438aaea3c22cfeb1f7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_31acbe3d12b813e111dc1cc4e8ae39d7f2f57f94edf623438aaea3c22cfeb1f7(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_CorporateFactory_$333__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_CorporateFactory_$333_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_FundsPool_$897__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_FundsPool_$897_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_GiverFactory_$1091__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_GiverFactory_$1091_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_ReceiverFactory_$1403__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ReceiverFactory_$1403_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_18800ddaffb2bbe6f2bc5e467d1cfa9d8c92071f32e94da5dc318c27d42ebc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_18800ddaffb2bbe6f2bc5e467d1cfa9d8c92071f32e94da5dc318c27d42ebc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_31acbe3d12b813e111dc1cc4e8ae39d7f2f57f94edf623438aaea3c22cfeb1f7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_31acbe3d12b813e111dc1cc4e8ae39d7f2f57f94edf623438aaea3c22cfeb1f7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_CorporateFactory_$333(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_FundsPool_$897(value) -> cleaned {\n        cleaned := cleanup_t_address_payable(value)\n    }\n\n    function cleanup_t_contract$_GiverFactory_$1091(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_ReceiverFactory_$1403(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function convert_t_contract$_CorporateFactory_$333_to_t_address(value) -> converted {\n        converted := convert_t_contract$_CorporateFactory_$333_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_CorporateFactory_$333_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_FundsPool_$897_to_t_address_payable(value) -> converted {\n        converted := convert_t_contract$_FundsPool_$897_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_FundsPool_$897_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_GiverFactory_$1091_to_t_address(value) -> converted {\n        converted := convert_t_contract$_GiverFactory_$1091_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_GiverFactory_$1091_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_ReceiverFactory_$1403_to_t_address(value) -> converted {\n        converted := convert_t_contract$_ReceiverFactory_$1403_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ReceiverFactory_$1403_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_18800ddaffb2bbe6f2bc5e467d1cfa9d8c92071f32e94da5dc318c27d42ebc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Factory was not created by the a\")\n\n        mstore(add(memPtr, 32), \"dmin\")\n\n    }\n\n    function store_literal_in_memory_31acbe3d12b813e111dc1cc4e8ae39d7f2f57f94edf623438aaea3c22cfeb1f7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pool was not created by the admi\")\n\n        mstore(add(memPtr, 32), \"n\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_CorporateFactory_$333(value) {\n        if iszero(eq(value, cleanup_t_contract$_CorporateFactory_$333(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_FundsPool_$897(value) {\n        if iszero(eq(value, cleanup_t_contract$_FundsPool_$897(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_GiverFactory_$1091(value) {\n        if iszero(eq(value, cleanup_t_contract$_GiverFactory_$1091(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_ReceiverFactory_$1403(value) {\n        if iszero(eq(value, cleanup_t_contract$_ReceiverFactory_$1403(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 6,
>>>>>>> main
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
<<<<<<< HEAD
  "sourceMap": "199:1157:0:-:0;;;372:49;;;;;;;;;;404:10;396:5;;:18;;;;;;;;;;;;;;;;;;199:1157;;;;;;",
  "deployedSourceMap": "199:1157:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;298:40;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;221:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;265:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;344:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;427:229;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;662:250;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;918:247;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;298:40;;;;;;;;;;;;;:::o;221:38::-;;;;;;;;;;;;:::o;265:26::-;;;;;;;;;;;;;:::o;344:20::-;;;;;;;;;;;;;:::o;427:229::-;573:4;:10;;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;564:21;;:5;;;;;;;;;;;:21;;;556:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;645:4;633:9;;:16;;;;;;;;;;;;;;;;;;427:229;:::o;662:250::-;821:3;:9;;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;812:20;;:5;;;;;;;;;;;:20;;;804:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;902:3;883:16;;:22;;;;;;;;;;;;;;;;;;662:250;:::o;918:247::-;1075:3;:9;;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1066:20;;:5;;;;;;;;;;;:20;;;1058:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1155:3;1137:15;;:21;;;;;;;;;;;;;;;;;;918:247;:::o;7:143:7:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:187::-;226:5;264:6;251:20;242:29;;280:57;331:5;280:57;:::i;:::-;232:111;;;;:::o;349:173::-;412:5;450:6;437:20;428:29;;466:50;510:5;466:50;:::i;:::-;418:104;;;;:::o;528:187::-;598:5;636:6;623:20;614:29;;652:57;703:5;652:57;:::i;:::-;604:111;;;;:::o;721:351::-;791:6;840:2;828:9;819:7;815:23;811:32;808:2;;;846:79;;:::i;:::-;808:2;966:1;991:64;1047:7;1038:6;1027:9;1023:22;991:64;:::i;:::-;981:74;;937:128;798:274;;;;:::o;1078:377::-;1161:6;1210:2;1198:9;1189:7;1185:23;1181:32;1178:2;;;1216:79;;:::i;:::-;1178:2;1336:1;1361:77;1430:7;1421:6;1410:9;1406:22;1361:77;:::i;:::-;1351:87;;1307:141;1168:287;;;;:::o;1461:363::-;1537:6;1586:2;1574:9;1565:7;1561:23;1557:32;1554:2;;;1592:79;;:::i;:::-;1554:2;1712:1;1737:70;1799:7;1790:6;1779:9;1775:22;1737:70;:::i;:::-;1727:80;;1683:134;1544:280;;;;:::o;1830:377::-;1913:6;1962:2;1950:9;1941:7;1937:23;1933:32;1930:2;;;1968:79;;:::i;:::-;1930:2;2088:1;2113:77;2182:7;2173:6;2162:9;2158:22;2113:77;:::i;:::-;2103:87;;2059:141;1920:287;;;;:::o;2213:118::-;2300:24;2318:5;2300:24;:::i;:::-;2295:3;2288:37;2278:53;;:::o;2337:179::-;2448:61;2503:5;2448:61;:::i;:::-;2443:3;2436:74;2426:90;;:::o;2522:181::-;2634:62;2690:5;2634:62;:::i;:::-;2629:3;2622:75;2612:91;;:::o;2709:179::-;2820:61;2875:5;2820:61;:::i;:::-;2815:3;2808:74;2798:90;;:::o;2894:366::-;3036:3;3057:67;3121:2;3116:3;3057:67;:::i;:::-;3050:74;;3133:93;3222:3;3133:93;:::i;:::-;3251:2;3246:3;3242:12;3235:19;;3040:220;;;:::o;3266:366::-;3408:3;3429:67;3493:2;3488:3;3429:67;:::i;:::-;3422:74;;3505:93;3594:3;3505:93;:::i;:::-;3623:2;3618:3;3614:12;3607:19;;3412:220;;;:::o;3638:222::-;3731:4;3769:2;3758:9;3754:18;3746:26;;3782:71;3850:1;3839:9;3835:17;3826:6;3782:71;:::i;:::-;3736:124;;;;:::o;3866:270::-;3983:4;4021:2;4010:9;4006:18;3998:26;;4034:95;4126:1;4115:9;4111:17;4102:6;4034:95;:::i;:::-;3988:148;;;;:::o;4142:272::-;4260:4;4298:2;4287:9;4283:18;4275:26;;4311:96;4404:1;4393:9;4389:17;4380:6;4311:96;:::i;:::-;4265:149;;;;:::o;4420:270::-;4537:4;4575:2;4564:9;4560:18;4552:26;;4588:95;4680:1;4669:9;4665:17;4656:6;4588:95;:::i;:::-;4542:148;;;;:::o;4696:419::-;4862:4;4900:2;4889:9;4885:18;4877:26;;4949:9;4943:4;4939:20;4935:1;4924:9;4920:17;4913:47;4977:131;5103:4;4977:131;:::i;:::-;4969:139;;4867:248;;;:::o;5121:419::-;5287:4;5325:2;5314:9;5310:18;5302:26;;5374:9;5368:4;5364:20;5360:1;5349:9;5345:17;5338:47;5402:131;5528:4;5402:131;:::i;:::-;5394:139;;5292:248;;;:::o;5627:169::-;5711:11;5745:6;5740:3;5733:19;5785:4;5780:3;5776:14;5761:29;;5723:73;;;;:::o;5802:96::-;5839:7;5868:24;5886:5;5868:24;:::i;:::-;5857:35;;5847:51;;;:::o;5904:104::-;5949:7;5978:24;5996:5;5978:24;:::i;:::-;5967:35;;5957:51;;;:::o;6014:120::-;6075:7;6104:24;6122:5;6104:24;:::i;:::-;6093:35;;6083:51;;;:::o;6140:121::-;6194:7;6223:32;6249:5;6223:32;:::i;:::-;6212:43;;6202:59;;;:::o;6267:120::-;6328:7;6357:24;6375:5;6357:24;:::i;:::-;6346:35;;6336:51;;;:::o;6393:126::-;6430:7;6470:42;6463:5;6459:54;6448:65;;6438:81;;;:::o;6525:174::-;6599:9;6632:61;6687:5;6632:61;:::i;:::-;6619:74;;6609:90;;;:::o;6705:137::-;6779:9;6812:24;6830:5;6812:24;:::i;:::-;6799:37;;6789:53;;;:::o;6848:168::-;6923:9;6956:54;7004:5;6956:54;:::i;:::-;6943:67;;6933:83;;;:::o;7022:130::-;7089:9;7122:24;7140:5;7122:24;:::i;:::-;7109:37;;7099:53;;;:::o;7158:174::-;7232:9;7265:61;7320:5;7265:61;:::i;:::-;7252:74;;7242:90;;;:::o;7338:137::-;7412:9;7445:24;7463:5;7445:24;:::i;:::-;7432:37;;7422:53;;;:::o;7604:117::-;7713:1;7710;7703:12;7727:223;7867:34;7863:1;7855:6;7851:14;7844:58;7936:6;7931:2;7923:6;7919:15;7912:31;7833:117;:::o;7956:220::-;8096:34;8092:1;8084:6;8080:14;8073:58;8165:3;8160:2;8152:6;8148:15;8141:28;8062:114;:::o;8182:122::-;8255:24;8273:5;8255:24;:::i;:::-;8248:5;8245:35;8235:2;;8294:1;8291;8284:12;8235:2;8225:79;:::o;8310:170::-;8407:48;8449:5;8407:48;:::i;:::-;8400:5;8397:59;8387:2;;8470:1;8467;8460:12;8387:2;8377:103;:::o;8486:156::-;8576:41;8611:5;8576:41;:::i;:::-;8569:5;8566:52;8556:2;;8632:1;8629;8622:12;8556:2;8546:96;:::o;8648:170::-;8745:48;8787:5;8745:48;:::i;:::-;8738:5;8735:59;8725:2;;8808:1;8805;8798:12;8725:2;8715:103;:::o",
  "source": "pragma solidity >=0.7.0 <0.9.0;\nimport \"./ReceiverFactory.sol\";\nimport \"./CorporateFactory.sol\";\nimport \"./FundsPool.sol\";\n\n\n// Contract that funds are received at\n// needs to contain an idenitifier\ncontract Admin {\n\n    ReceiverFactory public receiverFactory;\n    FundsPool public fundsPool; \n    CorporateFactory public corporateFactory;\n    address public owner;\n\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    function updateFundsPool(FundsPool pool) public {\n        // make sure that this pool was created by the admin contract \n        require(owner == pool.admin(), \"Pool was not created by the admin\");\n        fundsPool = pool;\n    }\n\n    function updateCorporateFactory(CorporateFactory fac) public {\n        // make sure that this pool was created by the admin contract \n        require(owner == fac.owner(), \"Factory was not created by the admin\");\n        corporateFactory = fac;\n    }\n\n    function updateReceiverFactory(ReceiverFactory fac) public {\n        // make sure that this pool was created by the admin contract \n        require(owner == fac.owner(), \"Factory was not created by the admin\");\n        receiverFactory = fac;\n    }\n    \n    modifier onlyFundsPool() {\n        require(msg.sender == address(fundsPool));\n        _;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n\n}\n\n\n",
  "sourcePath": "/Users/Will/Documents/University /Final Year/T2/P2/COMP6452-HelpChain/contracts/Admin.sol",
=======
  "sourceMap": "228:1439:0:-:0;;;439:49;;;;;;;;;;471:10;463:5;;:18;;;;;;;;;;;;;;;;;;228:1439;;;;;;",
  "deployedSourceMap": "228:1439:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;327:40;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1238:238;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;250:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;294:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;411:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;494:229;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;729:250;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;373:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;985:247;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;327:40;;;;;;;;;;;;;:::o;1238:238::-;1389:3;:9;;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1380:20;;:5;;;;;;;;;;;:20;;;1372:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1466:3;1451:12;;:18;;;;;;;;;;;;;;;;;;1238:238;:::o;250:38::-;;;;;;;;;;;;:::o;294:26::-;;;;;;;;;;;;;:::o;411:20::-;;;;;;;;;;;;;:::o;494:229::-;640:4;:10;;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;631:21;;:5;;;;;;;;;;;:21;;;623:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;712:4;700:9;;:16;;;;;;;;;;;;;;;;;;494:229;:::o;729:250::-;888:3;:9;;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;879:20;;:5;;;;;;;;;;;:20;;;871:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;969:3;950:16;;:22;;;;;;;;;;;;;;;;;;729:250;:::o;373:32::-;;;;;;;;;;;;;:::o;985:247::-;1142:3;:9;;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1133:20;;:5;;;;;;;;;;;:20;;;1125:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1222:3;1204:15;;:21;;;;;;;;;;;;;;;;;;985:247;:::o;7:143:6:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:187::-;226:5;264:6;251:20;242:29;;280:57;331:5;280:57;:::i;:::-;232:111;;;;:::o;349:173::-;412:5;450:6;437:20;428:29;;466:50;510:5;466:50;:::i;:::-;418:104;;;;:::o;528:181::-;595:5;633:6;620:20;611:29;;649:54;697:5;649:54;:::i;:::-;601:108;;;;:::o;715:187::-;785:5;823:6;810:20;801:29;;839:57;890:5;839:57;:::i;:::-;791:111;;;;:::o;908:351::-;978:6;1027:2;1015:9;1006:7;1002:23;998:32;995:2;;;1033:79;;:::i;:::-;995:2;1153:1;1178:64;1234:7;1225:6;1214:9;1210:22;1178:64;:::i;:::-;1168:74;;1124:128;985:274;;;;:::o;1265:377::-;1348:6;1397:2;1385:9;1376:7;1372:23;1368:32;1365:2;;;1403:79;;:::i;:::-;1365:2;1523:1;1548:77;1617:7;1608:6;1597:9;1593:22;1548:77;:::i;:::-;1538:87;;1494:141;1355:287;;;;:::o;1648:363::-;1724:6;1773:2;1761:9;1752:7;1748:23;1744:32;1741:2;;;1779:79;;:::i;:::-;1741:2;1899:1;1924:70;1986:7;1977:6;1966:9;1962:22;1924:70;:::i;:::-;1914:80;;1870:134;1731:280;;;;:::o;2017:371::-;2097:6;2146:2;2134:9;2125:7;2121:23;2117:32;2114:2;;;2152:79;;:::i;:::-;2114:2;2272:1;2297:74;2363:7;2354:6;2343:9;2339:22;2297:74;:::i;:::-;2287:84;;2243:138;2104:284;;;;:::o;2394:377::-;2477:6;2526:2;2514:9;2505:7;2501:23;2497:32;2494:2;;;2532:79;;:::i;:::-;2494:2;2652:1;2677:77;2746:7;2737:6;2726:9;2722:22;2677:77;:::i;:::-;2667:87;;2623:141;2484:287;;;;:::o;2777:118::-;2864:24;2882:5;2864:24;:::i;:::-;2859:3;2852:37;2842:53;;:::o;2901:179::-;3012:61;3067:5;3012:61;:::i;:::-;3007:3;3000:74;2990:90;;:::o;3086:181::-;3198:62;3254:5;3198:62;:::i;:::-;3193:3;3186:75;3176:91;;:::o;3273:173::-;3381:58;3433:5;3381:58;:::i;:::-;3376:3;3369:71;3359:87;;:::o;3452:179::-;3563:61;3618:5;3563:61;:::i;:::-;3558:3;3551:74;3541:90;;:::o;3637:366::-;3779:3;3800:67;3864:2;3859:3;3800:67;:::i;:::-;3793:74;;3876:93;3965:3;3876:93;:::i;:::-;3994:2;3989:3;3985:12;3978:19;;3783:220;;;:::o;4009:366::-;4151:3;4172:67;4236:2;4231:3;4172:67;:::i;:::-;4165:74;;4248:93;4337:3;4248:93;:::i;:::-;4366:2;4361:3;4357:12;4350:19;;4155:220;;;:::o;4381:222::-;4474:4;4512:2;4501:9;4497:18;4489:26;;4525:71;4593:1;4582:9;4578:17;4569:6;4525:71;:::i;:::-;4479:124;;;;:::o;4609:270::-;4726:4;4764:2;4753:9;4749:18;4741:26;;4777:95;4869:1;4858:9;4854:17;4845:6;4777:95;:::i;:::-;4731:148;;;;:::o;4885:272::-;5003:4;5041:2;5030:9;5026:18;5018:26;;5054:96;5147:1;5136:9;5132:17;5123:6;5054:96;:::i;:::-;5008:149;;;;:::o;5163:264::-;5277:4;5315:2;5304:9;5300:18;5292:26;;5328:92;5417:1;5406:9;5402:17;5393:6;5328:92;:::i;:::-;5282:145;;;;:::o;5433:270::-;5550:4;5588:2;5577:9;5573:18;5565:26;;5601:95;5693:1;5682:9;5678:17;5669:6;5601:95;:::i;:::-;5555:148;;;;:::o;5709:419::-;5875:4;5913:2;5902:9;5898:18;5890:26;;5962:9;5956:4;5952:20;5948:1;5937:9;5933:17;5926:47;5990:131;6116:4;5990:131;:::i;:::-;5982:139;;5880:248;;;:::o;6134:419::-;6300:4;6338:2;6327:9;6323:18;6315:26;;6387:9;6381:4;6377:20;6373:1;6362:9;6358:17;6351:47;6415:131;6541:4;6415:131;:::i;:::-;6407:139;;6305:248;;;:::o;6640:169::-;6724:11;6758:6;6753:3;6746:19;6798:4;6793:3;6789:14;6774:29;;6736:73;;;;:::o;6815:96::-;6852:7;6881:24;6899:5;6881:24;:::i;:::-;6870:35;;6860:51;;;:::o;6917:104::-;6962:7;6991:24;7009:5;6991:24;:::i;:::-;6980:35;;6970:51;;;:::o;7027:120::-;7088:7;7117:24;7135:5;7117:24;:::i;:::-;7106:35;;7096:51;;;:::o;7153:121::-;7207:7;7236:32;7262:5;7236:32;:::i;:::-;7225:43;;7215:59;;;:::o;7280:117::-;7338:7;7367:24;7385:5;7367:24;:::i;:::-;7356:35;;7346:51;;;:::o;7403:120::-;7464:7;7493:24;7511:5;7493:24;:::i;:::-;7482:35;;7472:51;;;:::o;7529:126::-;7566:7;7606:42;7599:5;7595:54;7584:65;;7574:81;;;:::o;7661:174::-;7735:9;7768:61;7823:5;7768:61;:::i;:::-;7755:74;;7745:90;;;:::o;7841:137::-;7915:9;7948:24;7966:5;7948:24;:::i;:::-;7935:37;;7925:53;;;:::o;7984:168::-;8059:9;8092:54;8140:5;8092:54;:::i;:::-;8079:67;;8069:83;;;:::o;8158:130::-;8225:9;8258:24;8276:5;8258:24;:::i;:::-;8245:37;;8235:53;;;:::o;8294:168::-;8365:9;8398:58;8450:5;8398:58;:::i;:::-;8385:71;;8375:87;;;:::o;8468:134::-;8539:9;8572:24;8590:5;8572:24;:::i;:::-;8559:37;;8549:53;;;:::o;8608:174::-;8682:9;8715:61;8770:5;8715:61;:::i;:::-;8702:74;;8692:90;;;:::o;8788:137::-;8862:9;8895:24;8913:5;8895:24;:::i;:::-;8882:37;;8872:53;;;:::o;9054:117::-;9163:1;9160;9153:12;9177:223;9317:34;9313:1;9305:6;9301:14;9294:58;9386:6;9381:2;9373:6;9369:15;9362:31;9283:117;:::o;9406:220::-;9546:34;9542:1;9534:6;9530:14;9523:58;9615:3;9610:2;9602:6;9598:15;9591:28;9512:114;:::o;9632:122::-;9705:24;9723:5;9705:24;:::i;:::-;9698:5;9695:35;9685:2;;9744:1;9741;9734:12;9685:2;9675:79;:::o;9760:170::-;9857:48;9899:5;9857:48;:::i;:::-;9850:5;9847:59;9837:2;;9920:1;9917;9910:12;9837:2;9827:103;:::o;9936:156::-;10026:41;10061:5;10026:41;:::i;:::-;10019:5;10016:52;10006:2;;10082:1;10079;10072:12;10006:2;9996:96;:::o;10098:164::-;10192:45;10231:5;10192:45;:::i;:::-;10185:5;10182:56;10172:2;;10252:1;10249;10242:12;10172:2;10162:100;:::o;10268:170::-;10365:48;10407:5;10365:48;:::i;:::-;10358:5;10355:59;10345:2;;10428:1;10425;10418:12;10345:2;10335:103;:::o",
  "source": "pragma solidity >=0.7.0 <0.9.0;\nimport \"./ReceiverFactory.sol\";\nimport \"./CorporateFactory.sol\";\nimport \"./GiverFactory.sol\";\nimport \"./FundsPool.sol\";\n\n\n// Contract that funds are received at\n// needs to contain an idenitifier\ncontract Admin {\n\n    ReceiverFactory public receiverFactory;\n    FundsPool public fundsPool; \n    CorporateFactory public corporateFactory;\n    GiverFactory public giverFactory;\n    address public owner;\n\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    function updateFundsPool(FundsPool pool) public {\n        // make sure that this pool was created by the admin contract \n        require(owner == pool.admin(), \"Pool was not created by the admin\");\n        fundsPool = pool;\n    }\n\n    function updateCorporateFactory(CorporateFactory fac) public {\n        // make sure that this pool was created by the admin contract \n        require(owner == fac.owner(), \"Factory was not created by the admin\");\n        corporateFactory = fac;\n    }\n\n    function updateReceiverFactory(ReceiverFactory fac) public {\n        // make sure that this pool was created by the admin contract \n        require(owner == fac.owner(), \"Factory was not created by the admin\");\n        receiverFactory = fac;\n    }\n\n    function updateGiverFactory(GiverFactory fac) public {\n        // make sure that this pool was created by the admin contract \n        require(owner == fac.owner(), \"Factory was not created by the admin\");\n        giverFactory = fac;\n    }\n    \n    modifier onlyFundsPool() {\n        require(msg.sender == address(fundsPool));\n        _;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n\n}\n\n\n",
  "sourcePath": "/Users/dylan/Library/Mobile Documents/com~apple~CloudDocs/Developer/UNSW/COMP6452_Blockchain_Architecture/COMP6452-HelpChain/contracts/Admin.sol",
>>>>>>> main
  "ast": {
    "absolutePath": "project:/contracts/Admin.sol",
    "exportedSymbols": {
      "Admin": [
<<<<<<< HEAD
        110
      ],
      "Corporate": [
        516
      ],
      "CorporateFactory": [
        286
      ],
      "FundsPool": [
        829
      ],
      "Receiver": [
        1136
      ],
      "ReceiverFactory": [
        1276
      ],
      "Subsidiary": [
        657
      ],
      "Whitelist": [
        1298
      ]
    },
    "id": 111,
=======
        134
      ],
      "Corporate": [
        573
      ],
      "CorporateFactory": [
        333
      ],
      "FundsPool": [
        897
      ],
      "Giver": [
        1010
      ],
      "GiverFactory": [
        1091
      ],
      "Receiver": [
        1260
      ],
      "ReceiverFactory": [
        1403
      ],
      "Subsidiary": [
        725
      ],
      "Whitelist": [
        1425
      ]
    },
    "id": 135,
>>>>>>> main
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:0"
      },
      {
        "absolutePath": "project:/contracts/ReceiverFactory.sol",
        "file": "./ReceiverFactory.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
<<<<<<< HEAD
        "scope": 111,
        "sourceUnit": 1277,
=======
        "scope": 135,
        "sourceUnit": 1404,
>>>>>>> main
        "src": "32:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/CorporateFactory.sol",
        "file": "./CorporateFactory.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
<<<<<<< HEAD
        "scope": 111,
        "sourceUnit": 658,
=======
        "scope": 135,
        "sourceUnit": 726,
>>>>>>> main
        "src": "64:32:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
<<<<<<< HEAD
        "absolutePath": "project:/contracts/FundsPool.sol",
        "file": "./FundsPool.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 111,
        "sourceUnit": 830,
        "src": "97:25:0",
=======
        "absolutePath": "project:/contracts/GiverFactory.sol",
        "file": "./GiverFactory.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 135,
        "sourceUnit": 1092,
        "src": "97:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/FundsPool.sol",
        "file": "./FundsPool.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 135,
        "sourceUnit": 898,
        "src": "126:25:0",
>>>>>>> main
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
<<<<<<< HEAD
        "id": 110,
        "linearizedBaseContracts": [
          110
        ],
        "name": "Admin",
        "nameLocation": "208:5:0",
=======
        "id": 134,
        "linearizedBaseContracts": [
          134
        ],
        "name": "Admin",
        "nameLocation": "237:5:0",
>>>>>>> main
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "7011329f",
<<<<<<< HEAD
            "id": 7,
            "mutability": "mutable",
            "name": "receiverFactory",
            "nameLocation": "244:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 110,
            "src": "221:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ReceiverFactory_$1276",
              "typeString": "contract ReceiverFactory"
            },
            "typeName": {
              "id": 6,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5,
                "name": "ReceiverFactory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1276,
                "src": "221:15:0"
              },
              "referencedDeclaration": 1276,
              "src": "221:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ReceiverFactory_$1276",
=======
            "id": 8,
            "mutability": "mutable",
            "name": "receiverFactory",
            "nameLocation": "273:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 134,
            "src": "250:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ReceiverFactory_$1403",
              "typeString": "contract ReceiverFactory"
            },
            "typeName": {
              "id": 7,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6,
                "name": "ReceiverFactory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1403,
                "src": "250:15:0"
              },
              "referencedDeclaration": 1403,
              "src": "250:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ReceiverFactory_$1403",
>>>>>>> main
                "typeString": "contract ReceiverFactory"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8a90d601",
<<<<<<< HEAD
            "id": 10,
            "mutability": "mutable",
            "name": "fundsPool",
            "nameLocation": "282:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 110,
            "src": "265:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FundsPool_$829",
              "typeString": "contract FundsPool"
            },
            "typeName": {
              "id": 9,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8,
                "name": "FundsPool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 829,
                "src": "265:9:0"
              },
              "referencedDeclaration": 829,
              "src": "265:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FundsPool_$829",
=======
            "id": 11,
            "mutability": "mutable",
            "name": "fundsPool",
            "nameLocation": "311:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 134,
            "src": "294:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FundsPool_$897",
              "typeString": "contract FundsPool"
            },
            "typeName": {
              "id": 10,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9,
                "name": "FundsPool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 897,
                "src": "294:9:0"
              },
              "referencedDeclaration": 897,
              "src": "294:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FundsPool_$897",
>>>>>>> main
                "typeString": "contract FundsPool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4979716d",
<<<<<<< HEAD
            "id": 13,
            "mutability": "mutable",
            "name": "corporateFactory",
            "nameLocation": "322:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 110,
            "src": "298:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CorporateFactory_$286",
              "typeString": "contract CorporateFactory"
            },
            "typeName": {
              "id": 12,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11,
                "name": "CorporateFactory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 286,
                "src": "298:16:0"
              },
              "referencedDeclaration": 286,
              "src": "298:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CorporateFactory_$286",
=======
            "id": 14,
            "mutability": "mutable",
            "name": "corporateFactory",
            "nameLocation": "351:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 134,
            "src": "327:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CorporateFactory_$333",
              "typeString": "contract CorporateFactory"
            },
            "typeName": {
              "id": 13,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12,
                "name": "CorporateFactory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 333,
                "src": "327:16:0"
              },
              "referencedDeclaration": 333,
              "src": "327:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CorporateFactory_$333",
>>>>>>> main
                "typeString": "contract CorporateFactory"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "functionSelector": "8da5cb5b",
            "id": 15,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "359:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 110,
            "src": "344:20:0",
=======
            "functionSelector": "cab9e706",
            "id": 17,
            "mutability": "mutable",
            "name": "giverFactory",
            "nameLocation": "393:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 134,
            "src": "373:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GiverFactory_$1091",
              "typeString": "contract GiverFactory"
            },
            "typeName": {
              "id": 16,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15,
                "name": "GiverFactory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1091,
                "src": "373:12:0"
              },
              "referencedDeclaration": 1091,
              "src": "373:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GiverFactory_$1091",
                "typeString": "contract GiverFactory"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 19,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "426:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 134,
            "src": "411:20:0",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 14,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "344:7:0",
=======
              "id": 18,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "411:7:0",
>>>>>>> main
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 23,
              "nodeType": "Block",
              "src": "386:35:0",
              "statements": [
                {
                  "expression": {
                    "id": 21,
=======
              "id": 27,
              "nodeType": "Block",
              "src": "453:35:0",
              "statements": [
                {
                  "expression": {
                    "id": 25,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 18,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "396:5:0",
=======
                      "id": 22,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "463:5:0",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
<<<<<<< HEAD
                        "id": 19,
=======
                        "id": 23,
>>>>>>> main
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                        "src": "404:3:0",
=======
                        "src": "471:3:0",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
<<<<<<< HEAD
                      "id": 20,
=======
                      "id": 24,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "src": "404:10:0",
=======
                      "src": "471:10:0",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "src": "396:18:0",
=======
                    "src": "463:18:0",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 22,
                  "nodeType": "ExpressionStatement",
                  "src": "396:18:0"
                }
              ]
            },
            "id": 24,
=======
                  "id": 26,
                  "nodeType": "ExpressionStatement",
                  "src": "463:18:0"
                }
              ]
            },
            "id": 28,
>>>>>>> main
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "383:2:0"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "386:0:0"
            },
            "scope": 110,
            "src": "372:49:0",
=======
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "450:2:0"
            },
            "returnParameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "453:0:0"
            },
            "scope": 134,
            "src": "439:49:0",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 43,
              "nodeType": "Block",
              "src": "475:181:0",
=======
              "id": 47,
              "nodeType": "Block",
              "src": "542:181:0",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 35,
=======
                        "id": 39,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 31,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "564:5:0",
=======
                          "id": 35,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "631:5:0",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
<<<<<<< HEAD
                              "id": 32,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "573:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FundsPool_$829",
                                "typeString": "contract FundsPool"
                              }
                            },
                            "id": 33,
=======
                              "id": 36,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "640:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FundsPool_$897",
                                "typeString": "contract FundsPool"
                              }
                            },
                            "id": 37,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "admin",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 662,
                            "src": "573:10:0",
=======
                            "referencedDeclaration": 730,
                            "src": "640:10:0",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
<<<<<<< HEAD
                          "id": 34,
=======
                          "id": 38,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "573:12:0",
=======
                          "src": "640:12:0",
>>>>>>> main
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "564:21:0",
=======
                        "src": "631:21:0",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c20776173206e6f742063726561746564206279207468652061646d696e",
<<<<<<< HEAD
                        "id": 36,
=======
                        "id": 40,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "587:35:0",
=======
                        "src": "654:35:0",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31acbe3d12b813e111dc1cc4e8ae39d7f2f57f94edf623438aaea3c22cfeb1f7",
                          "typeString": "literal_string \"Pool was not created by the admin\""
                        },
                        "value": "Pool was not created by the admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31acbe3d12b813e111dc1cc4e8ae39d7f2f57f94edf623438aaea3c22cfeb1f7",
                          "typeString": "literal_string \"Pool was not created by the admin\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 30,
=======
                      "id": 34,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "556:7:0",
=======
                      "src": "623:7:0",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 37,
=======
                    "id": 41,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "556:67:0",
=======
                    "src": "623:67:0",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "556:67:0"
                },
                {
                  "expression": {
                    "id": 41,
=======
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "623:67:0"
                },
                {
                  "expression": {
                    "id": 45,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 39,
                      "name": "fundsPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "633:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FundsPool_$829",
=======
                      "id": 43,
                      "name": "fundsPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "700:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FundsPool_$897",
>>>>>>> main
                        "typeString": "contract FundsPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 40,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "645:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FundsPool_$829",
                        "typeString": "contract FundsPool"
                      }
                    },
                    "src": "633:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FundsPool_$829",
                      "typeString": "contract FundsPool"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "633:16:0"
=======
                      "id": 44,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "712:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FundsPool_$897",
                        "typeString": "contract FundsPool"
                      }
                    },
                    "src": "700:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FundsPool_$897",
                      "typeString": "contract FundsPool"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "700:16:0"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "a635a0a8",
<<<<<<< HEAD
            "id": 44,
=======
            "id": 48,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateFundsPool",
<<<<<<< HEAD
            "nameLocation": "436:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28,
=======
            "nameLocation": "503:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 32,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 27,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "462:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "452:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_FundsPool_$829",
                    "typeString": "contract FundsPool"
                  },
                  "typeName": {
                    "id": 26,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25,
                      "name": "FundsPool",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 829,
                      "src": "452:9:0"
                    },
                    "referencedDeclaration": 829,
                    "src": "452:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FundsPool_$829",
=======
                  "id": 31,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "529:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "519:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_FundsPool_$897",
                    "typeString": "contract FundsPool"
                  },
                  "typeName": {
                    "id": 30,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29,
                      "name": "FundsPool",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 897,
                      "src": "519:9:0"
                    },
                    "referencedDeclaration": 897,
                    "src": "519:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FundsPool_$897",
>>>>>>> main
                      "typeString": "contract FundsPool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "451:16:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "475:0:0"
            },
            "scope": 110,
            "src": "427:229:0",
=======
              "src": "518:16:0"
            },
            "returnParameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "542:0:0"
            },
            "scope": 134,
            "src": "494:229:0",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 63,
              "nodeType": "Block",
              "src": "723:189:0",
=======
              "id": 67,
              "nodeType": "Block",
              "src": "790:189:0",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 55,
=======
                        "id": 59,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 51,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "812:5:0",
=======
                          "id": 55,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "879:5:0",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
<<<<<<< HEAD
                              "id": 52,
                              "name": "fac",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "821:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CorporateFactory_$286",
                                "typeString": "contract CorporateFactory"
                              }
                            },
                            "id": 53,
=======
                              "id": 56,
                              "name": "fac",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51,
                              "src": "888:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CorporateFactory_$333",
                                "typeString": "contract CorporateFactory"
                              }
                            },
                            "id": 57,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 115,
                            "src": "821:9:0",
=======
                            "referencedDeclaration": 140,
                            "src": "888:9:0",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
<<<<<<< HEAD
                          "id": 54,
=======
                          "id": 58,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "821:11:0",
=======
                          "src": "888:11:0",
>>>>>>> main
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "812:20:0",
=======
                        "src": "879:20:0",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466163746f727920776173206e6f742063726561746564206279207468652061646d696e",
<<<<<<< HEAD
                        "id": 56,
=======
                        "id": 60,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "834:38:0",
=======
                        "src": "901:38:0",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_18800ddaffb2bbe6f2bc5e467d1cfa9d8c92071f32e94da5dc318c27d42ebc51",
                          "typeString": "literal_string \"Factory was not created by the admin\""
                        },
                        "value": "Factory was not created by the admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_18800ddaffb2bbe6f2bc5e467d1cfa9d8c92071f32e94da5dc318c27d42ebc51",
                          "typeString": "literal_string \"Factory was not created by the admin\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 50,
=======
                      "id": 54,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "804:7:0",
=======
                      "src": "871:7:0",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 57,
=======
                    "id": 61,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "804:69:0",
=======
                    "src": "871:69:0",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "804:69:0"
                },
                {
                  "expression": {
                    "id": 61,
=======
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "871:69:0"
                },
                {
                  "expression": {
                    "id": 65,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 59,
                      "name": "corporateFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "883:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CorporateFactory_$286",
=======
                      "id": 63,
                      "name": "corporateFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "950:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CorporateFactory_$333",
>>>>>>> main
                        "typeString": "contract CorporateFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 60,
                      "name": "fac",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "902:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CorporateFactory_$286",
                        "typeString": "contract CorporateFactory"
                      }
                    },
                    "src": "883:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CorporateFactory_$286",
                      "typeString": "contract CorporateFactory"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "883:22:0"
                }
              ]
            },
            "functionSelector": "b34485ce",
            "id": 64,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateCorporateFactory",
            "nameLocation": "671:22:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 48,
=======
                      "id": 64,
                      "name": "fac",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "969:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CorporateFactory_$333",
                        "typeString": "contract CorporateFactory"
                      }
                    },
                    "src": "950:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CorporateFactory_$333",
                      "typeString": "contract CorporateFactory"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "950:22:0"
                }
              ]
            },
            "functionSelector": "b34485ce",
            "id": 68,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateCorporateFactory",
            "nameLocation": "738:22:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51,
                  "mutability": "mutable",
                  "name": "fac",
                  "nameLocation": "778:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 68,
                  "src": "761:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CorporateFactory_$333",
                    "typeString": "contract CorporateFactory"
                  },
                  "typeName": {
                    "id": 50,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49,
                      "name": "CorporateFactory",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 333,
                      "src": "761:16:0"
                    },
                    "referencedDeclaration": 333,
                    "src": "761:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CorporateFactory_$333",
                      "typeString": "contract CorporateFactory"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "760:22:0"
            },
            "returnParameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "790:0:0"
            },
            "scope": 134,
            "src": "729:250:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 87,
              "nodeType": "Block",
              "src": "1044:188:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 75,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "1133:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 76,
                              "name": "fac",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71,
                              "src": "1142:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ReceiverFactory_$1403",
                                "typeString": "contract ReceiverFactory"
                              }
                            },
                            "id": 77,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1262,
                            "src": "1142:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1142:11:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1133:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466163746f727920776173206e6f742063726561746564206279207468652061646d696e",
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1155:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_18800ddaffb2bbe6f2bc5e467d1cfa9d8c92071f32e94da5dc318c27d42ebc51",
                          "typeString": "literal_string \"Factory was not created by the admin\""
                        },
                        "value": "Factory was not created by the admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_18800ddaffb2bbe6f2bc5e467d1cfa9d8c92071f32e94da5dc318c27d42ebc51",
                          "typeString": "literal_string \"Factory was not created by the admin\""
                        }
                      ],
                      "id": 74,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1125:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1125:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "1125:69:0"
                },
                {
                  "expression": {
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 83,
                      "name": "receiverFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "1204:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ReceiverFactory_$1403",
                        "typeString": "contract ReceiverFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 84,
                      "name": "fac",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "1222:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ReceiverFactory_$1403",
                        "typeString": "contract ReceiverFactory"
                      }
                    },
                    "src": "1204:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ReceiverFactory_$1403",
                      "typeString": "contract ReceiverFactory"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "1204:21:0"
                }
              ]
            },
            "functionSelector": "cfb17d61",
            "id": 88,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateReceiverFactory",
            "nameLocation": "994:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 72,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 47,
                  "mutability": "mutable",
                  "name": "fac",
                  "nameLocation": "711:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "694:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CorporateFactory_$286",
                    "typeString": "contract CorporateFactory"
                  },
                  "typeName": {
                    "id": 46,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 45,
                      "name": "CorporateFactory",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 286,
                      "src": "694:16:0"
                    },
                    "referencedDeclaration": 286,
                    "src": "694:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CorporateFactory_$286",
                      "typeString": "contract CorporateFactory"
=======
                  "id": 71,
                  "mutability": "mutable",
                  "name": "fac",
                  "nameLocation": "1032:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "1016:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ReceiverFactory_$1403",
                    "typeString": "contract ReceiverFactory"
                  },
                  "typeName": {
                    "id": 70,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 69,
                      "name": "ReceiverFactory",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1403,
                      "src": "1016:15:0"
                    },
                    "referencedDeclaration": 1403,
                    "src": "1016:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ReceiverFactory_$1403",
                      "typeString": "contract ReceiverFactory"
>>>>>>> main
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "693:22:0"
            },
            "returnParameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "723:0:0"
            },
            "scope": 110,
            "src": "662:250:0",
=======
              "src": "1015:21:0"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1044:0:0"
            },
            "scope": 134,
            "src": "985:247:0",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 83,
              "nodeType": "Block",
              "src": "977:188:0",
=======
              "id": 107,
              "nodeType": "Block",
              "src": "1291:185:0",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 75,
=======
                        "id": 99,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 71,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "1066:5:0",
=======
                          "id": 95,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "1380:5:0",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
<<<<<<< HEAD
                              "id": 72,
                              "name": "fac",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "1075:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ReceiverFactory_$1276",
                                "typeString": "contract ReceiverFactory"
                              }
                            },
                            "id": 73,
=======
                              "id": 96,
                              "name": "fac",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91,
                              "src": "1389:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GiverFactory_$1091",
                                "typeString": "contract GiverFactory"
                              }
                            },
                            "id": 97,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 1140,
                            "src": "1075:9:0",
=======
                            "referencedDeclaration": 1012,
                            "src": "1389:9:0",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
<<<<<<< HEAD
                          "id": 74,
=======
                          "id": 98,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "1075:11:0",
=======
                          "src": "1389:11:0",
>>>>>>> main
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "1066:20:0",
=======
                        "src": "1380:20:0",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466163746f727920776173206e6f742063726561746564206279207468652061646d696e",
<<<<<<< HEAD
                        "id": 76,
=======
                        "id": 100,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "1088:38:0",
=======
                        "src": "1402:38:0",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_18800ddaffb2bbe6f2bc5e467d1cfa9d8c92071f32e94da5dc318c27d42ebc51",
                          "typeString": "literal_string \"Factory was not created by the admin\""
                        },
                        "value": "Factory was not created by the admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_18800ddaffb2bbe6f2bc5e467d1cfa9d8c92071f32e94da5dc318c27d42ebc51",
                          "typeString": "literal_string \"Factory was not created by the admin\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 70,
=======
                      "id": 94,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "1058:7:0",
=======
                      "src": "1372:7:0",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 77,
=======
                    "id": 101,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1058:69:0",
=======
                    "src": "1372:69:0",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1058:69:0"
                },
                {
                  "expression": {
                    "id": 81,
=======
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "1372:69:0"
                },
                {
                  "expression": {
                    "id": 105,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 79,
                      "name": "receiverFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "1137:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ReceiverFactory_$1276",
                        "typeString": "contract ReceiverFactory"
=======
                      "id": 103,
                      "name": "giverFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1451:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GiverFactory_$1091",
                        "typeString": "contract GiverFactory"
>>>>>>> main
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 80,
                      "name": "fac",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "1155:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ReceiverFactory_$1276",
                        "typeString": "contract ReceiverFactory"
                      }
                    },
                    "src": "1137:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ReceiverFactory_$1276",
                      "typeString": "contract ReceiverFactory"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "1137:21:0"
                }
              ]
            },
            "functionSelector": "cfb17d61",
            "id": 84,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateReceiverFactory",
            "nameLocation": "927:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 68,
=======
                      "id": 104,
                      "name": "fac",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "1466:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GiverFactory_$1091",
                        "typeString": "contract GiverFactory"
                      }
                    },
                    "src": "1451:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GiverFactory_$1091",
                      "typeString": "contract GiverFactory"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "1451:18:0"
                }
              ]
            },
            "functionSelector": "5d9f790b",
            "id": 108,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateGiverFactory",
            "nameLocation": "1247:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 92,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 67,
                  "mutability": "mutable",
                  "name": "fac",
                  "nameLocation": "965:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "949:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ReceiverFactory_$1276",
                    "typeString": "contract ReceiverFactory"
                  },
                  "typeName": {
                    "id": 66,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 65,
                      "name": "ReceiverFactory",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1276,
                      "src": "949:15:0"
                    },
                    "referencedDeclaration": 1276,
                    "src": "949:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ReceiverFactory_$1276",
                      "typeString": "contract ReceiverFactory"
=======
                  "id": 91,
                  "mutability": "mutable",
                  "name": "fac",
                  "nameLocation": "1279:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 108,
                  "src": "1266:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GiverFactory_$1091",
                    "typeString": "contract GiverFactory"
                  },
                  "typeName": {
                    "id": 90,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 89,
                      "name": "GiverFactory",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1091,
                      "src": "1266:12:0"
                    },
                    "referencedDeclaration": 1091,
                    "src": "1266:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GiverFactory_$1091",
                      "typeString": "contract GiverFactory"
>>>>>>> main
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "948:21:0"
            },
            "returnParameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "977:0:0"
            },
            "scope": 110,
            "src": "918:247:0",
=======
              "src": "1265:18:0"
            },
            "returnParameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1291:0:0"
            },
            "scope": 134,
            "src": "1238:238:0",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 97,
              "nodeType": "Block",
              "src": "1200:69:0",
=======
              "id": 121,
              "nodeType": "Block",
              "src": "1511:69:0",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 93,
=======
                        "id": 117,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
<<<<<<< HEAD
                            "id": 87,
=======
                            "id": 111,
>>>>>>> main
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                            "src": "1218:3:0",
=======
                            "src": "1529:3:0",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
<<<<<<< HEAD
                          "id": 88,
=======
                          "id": 112,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "src": "1218:10:0",
=======
                          "src": "1529:10:0",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 91,
                              "name": "fundsPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "1240:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FundsPool_$829",
=======
                              "id": 115,
                              "name": "fundsPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "1551:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FundsPool_$897",
>>>>>>> main
                                "typeString": "contract FundsPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
<<<<<<< HEAD
                                "typeIdentifier": "t_contract$_FundsPool_$829",
                                "typeString": "contract FundsPool"
                              }
                            ],
                            "id": 90,
=======
                                "typeIdentifier": "t_contract$_FundsPool_$897",
                                "typeString": "contract FundsPool"
                              }
                            ],
                            "id": 114,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "1232:7:0",
=======
                            "src": "1543:7:0",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 89,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1232:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 92,
=======
                              "id": 113,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1543:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 116,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "1232:18:0",
=======
                          "src": "1543:18:0",
>>>>>>> main
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "1218:32:0",
=======
                        "src": "1529:32:0",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "id": 86,
=======
                      "id": 110,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "1210:7:0",
=======
                      "src": "1521:7:0",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 94,
=======
                    "id": 118,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1210:41:0",
=======
                    "src": "1521:41:0",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "1210:41:0"
                },
                {
                  "id": 96,
                  "nodeType": "PlaceholderStatement",
                  "src": "1261:1:0"
                }
              ]
            },
            "id": 98,
            "name": "onlyFundsPool",
            "nameLocation": "1184:13:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1197:2:0"
            },
            "src": "1175:94:0",
=======
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "1521:41:0"
                },
                {
                  "id": 120,
                  "nodeType": "PlaceholderStatement",
                  "src": "1572:1:0"
                }
              ]
            },
            "id": 122,
            "name": "onlyFundsPool",
            "nameLocation": "1495:13:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1508:2:0"
            },
            "src": "1486:94:0",
>>>>>>> main
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 108,
              "nodeType": "Block",
              "src": "1296:56:0",
=======
              "id": 132,
              "nodeType": "Block",
              "src": "1607:56:0",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 104,
=======
                        "id": 128,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
<<<<<<< HEAD
                            "id": 101,
=======
                            "id": 125,
>>>>>>> main
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                            "src": "1314:3:0",
=======
                            "src": "1625:3:0",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
<<<<<<< HEAD
                          "id": 102,
=======
                          "id": 126,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "src": "1314:10:0",
=======
                          "src": "1625:10:0",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
<<<<<<< HEAD
                          "id": 103,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "1328:5:0",
=======
                          "id": 127,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "1639:5:0",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "1314:19:0",
=======
                        "src": "1625:19:0",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "id": 100,
=======
                      "id": 124,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "1306:7:0",
=======
                      "src": "1617:7:0",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 105,
=======
                    "id": 129,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1306:28:0",
=======
                    "src": "1617:28:0",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "1306:28:0"
                },
                {
                  "id": 107,
                  "nodeType": "PlaceholderStatement",
                  "src": "1344:1:0"
                }
              ]
            },
            "id": 109,
            "name": "onlyOwner",
            "nameLocation": "1284:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1293:2:0"
            },
            "src": "1275:77:0",
=======
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "1617:28:0"
                },
                {
                  "id": 131,
                  "nodeType": "PlaceholderStatement",
                  "src": "1655:1:0"
                }
              ]
            },
            "id": 133,
            "name": "onlyOwner",
            "nameLocation": "1595:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1604:2:0"
            },
            "src": "1586:77:0",
>>>>>>> main
            "virtual": false,
            "visibility": "internal"
          }
        ],
<<<<<<< HEAD
        "scope": 111,
        "src": "199:1157:0",
        "usedErrors": []
      }
    ],
    "src": "0:1359:0"
=======
        "scope": 135,
        "src": "228:1439:0",
        "usedErrors": []
      }
    ],
    "src": "0:1670:0"
>>>>>>> main
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Admin.sol",
    "exportedSymbols": {
      "Admin": [
<<<<<<< HEAD
        110
      ],
      "Corporate": [
        516
      ],
      "CorporateFactory": [
        286
      ],
      "FundsPool": [
        829
      ],
      "Receiver": [
        1136
      ],
      "ReceiverFactory": [
        1276
      ],
      "Subsidiary": [
        657
      ],
      "Whitelist": [
        1298
      ]
    },
    "id": 111,
=======
        134
      ],
      "Corporate": [
        573
      ],
      "CorporateFactory": [
        333
      ],
      "FundsPool": [
        897
      ],
      "Giver": [
        1010
      ],
      "GiverFactory": [
        1091
      ],
      "Receiver": [
        1260
      ],
      "ReceiverFactory": [
        1403
      ],
      "Subsidiary": [
        725
      ],
      "Whitelist": [
        1425
      ]
    },
    "id": 135,
>>>>>>> main
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:0"
      },
      {
        "absolutePath": "project:/contracts/ReceiverFactory.sol",
        "file": "./ReceiverFactory.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
<<<<<<< HEAD
        "scope": 111,
        "sourceUnit": 1277,
=======
        "scope": 135,
        "sourceUnit": 1404,
>>>>>>> main
        "src": "32:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/CorporateFactory.sol",
        "file": "./CorporateFactory.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
<<<<<<< HEAD
        "scope": 111,
        "sourceUnit": 658,
=======
        "scope": 135,
        "sourceUnit": 726,
>>>>>>> main
        "src": "64:32:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
<<<<<<< HEAD
        "absolutePath": "project:/contracts/FundsPool.sol",
        "file": "./FundsPool.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 111,
        "sourceUnit": 830,
        "src": "97:25:0",
=======
        "absolutePath": "project:/contracts/GiverFactory.sol",
        "file": "./GiverFactory.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 135,
        "sourceUnit": 1092,
        "src": "97:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/FundsPool.sol",
        "file": "./FundsPool.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 135,
        "sourceUnit": 898,
        "src": "126:25:0",
>>>>>>> main
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
<<<<<<< HEAD
        "id": 110,
        "linearizedBaseContracts": [
          110
        ],
        "name": "Admin",
        "nameLocation": "208:5:0",
=======
        "id": 134,
        "linearizedBaseContracts": [
          134
        ],
        "name": "Admin",
        "nameLocation": "237:5:0",
>>>>>>> main
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "7011329f",
<<<<<<< HEAD
            "id": 7,
            "mutability": "mutable",
            "name": "receiverFactory",
            "nameLocation": "244:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 110,
            "src": "221:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ReceiverFactory_$1276",
              "typeString": "contract ReceiverFactory"
            },
            "typeName": {
              "id": 6,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5,
                "name": "ReceiverFactory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1276,
                "src": "221:15:0"
              },
              "referencedDeclaration": 1276,
              "src": "221:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ReceiverFactory_$1276",
=======
            "id": 8,
            "mutability": "mutable",
            "name": "receiverFactory",
            "nameLocation": "273:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 134,
            "src": "250:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ReceiverFactory_$1403",
              "typeString": "contract ReceiverFactory"
            },
            "typeName": {
              "id": 7,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6,
                "name": "ReceiverFactory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1403,
                "src": "250:15:0"
              },
              "referencedDeclaration": 1403,
              "src": "250:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ReceiverFactory_$1403",
>>>>>>> main
                "typeString": "contract ReceiverFactory"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8a90d601",
<<<<<<< HEAD
            "id": 10,
            "mutability": "mutable",
            "name": "fundsPool",
            "nameLocation": "282:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 110,
            "src": "265:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FundsPool_$829",
              "typeString": "contract FundsPool"
            },
            "typeName": {
              "id": 9,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8,
                "name": "FundsPool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 829,
                "src": "265:9:0"
              },
              "referencedDeclaration": 829,
              "src": "265:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FundsPool_$829",
=======
            "id": 11,
            "mutability": "mutable",
            "name": "fundsPool",
            "nameLocation": "311:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 134,
            "src": "294:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FundsPool_$897",
              "typeString": "contract FundsPool"
            },
            "typeName": {
              "id": 10,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9,
                "name": "FundsPool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 897,
                "src": "294:9:0"
              },
              "referencedDeclaration": 897,
              "src": "294:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FundsPool_$897",
>>>>>>> main
                "typeString": "contract FundsPool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4979716d",
<<<<<<< HEAD
            "id": 13,
            "mutability": "mutable",
            "name": "corporateFactory",
            "nameLocation": "322:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 110,
            "src": "298:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CorporateFactory_$286",
              "typeString": "contract CorporateFactory"
            },
            "typeName": {
              "id": 12,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11,
                "name": "CorporateFactory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 286,
                "src": "298:16:0"
              },
              "referencedDeclaration": 286,
              "src": "298:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CorporateFactory_$286",
=======
            "id": 14,
            "mutability": "mutable",
            "name": "corporateFactory",
            "nameLocation": "351:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 134,
            "src": "327:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CorporateFactory_$333",
              "typeString": "contract CorporateFactory"
            },
            "typeName": {
              "id": 13,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12,
                "name": "CorporateFactory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 333,
                "src": "327:16:0"
              },
              "referencedDeclaration": 333,
              "src": "327:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CorporateFactory_$333",
>>>>>>> main
                "typeString": "contract CorporateFactory"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "functionSelector": "8da5cb5b",
            "id": 15,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "359:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 110,
            "src": "344:20:0",
=======
            "functionSelector": "cab9e706",
            "id": 17,
            "mutability": "mutable",
            "name": "giverFactory",
            "nameLocation": "393:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 134,
            "src": "373:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GiverFactory_$1091",
              "typeString": "contract GiverFactory"
            },
            "typeName": {
              "id": 16,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15,
                "name": "GiverFactory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1091,
                "src": "373:12:0"
              },
              "referencedDeclaration": 1091,
              "src": "373:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GiverFactory_$1091",
                "typeString": "contract GiverFactory"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 19,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "426:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 134,
            "src": "411:20:0",
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 14,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "344:7:0",
=======
              "id": 18,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "411:7:0",
>>>>>>> main
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 23,
              "nodeType": "Block",
              "src": "386:35:0",
              "statements": [
                {
                  "expression": {
                    "id": 21,
=======
              "id": 27,
              "nodeType": "Block",
              "src": "453:35:0",
              "statements": [
                {
                  "expression": {
                    "id": 25,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 18,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "396:5:0",
=======
                      "id": 22,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "463:5:0",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
<<<<<<< HEAD
                        "id": 19,
=======
                        "id": 23,
>>>>>>> main
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                        "src": "404:3:0",
=======
                        "src": "471:3:0",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
<<<<<<< HEAD
                      "id": 20,
=======
                      "id": 24,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "src": "404:10:0",
=======
                      "src": "471:10:0",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "src": "396:18:0",
=======
                    "src": "463:18:0",
>>>>>>> main
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 22,
                  "nodeType": "ExpressionStatement",
                  "src": "396:18:0"
                }
              ]
            },
            "id": 24,
=======
                  "id": 26,
                  "nodeType": "ExpressionStatement",
                  "src": "463:18:0"
                }
              ]
            },
            "id": 28,
>>>>>>> main
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "383:2:0"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "386:0:0"
            },
            "scope": 110,
            "src": "372:49:0",
=======
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "450:2:0"
            },
            "returnParameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "453:0:0"
            },
            "scope": 134,
            "src": "439:49:0",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 43,
              "nodeType": "Block",
              "src": "475:181:0",
=======
              "id": 47,
              "nodeType": "Block",
              "src": "542:181:0",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 35,
=======
                        "id": 39,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 31,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "564:5:0",
=======
                          "id": 35,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "631:5:0",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
<<<<<<< HEAD
                              "id": 32,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "573:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FundsPool_$829",
                                "typeString": "contract FundsPool"
                              }
                            },
                            "id": 33,
=======
                              "id": 36,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "640:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FundsPool_$897",
                                "typeString": "contract FundsPool"
                              }
                            },
                            "id": 37,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "admin",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 662,
                            "src": "573:10:0",
=======
                            "referencedDeclaration": 730,
                            "src": "640:10:0",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
<<<<<<< HEAD
                          "id": 34,
=======
                          "id": 38,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "573:12:0",
=======
                          "src": "640:12:0",
>>>>>>> main
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "564:21:0",
=======
                        "src": "631:21:0",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c20776173206e6f742063726561746564206279207468652061646d696e",
<<<<<<< HEAD
                        "id": 36,
=======
                        "id": 40,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "587:35:0",
=======
                        "src": "654:35:0",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31acbe3d12b813e111dc1cc4e8ae39d7f2f57f94edf623438aaea3c22cfeb1f7",
                          "typeString": "literal_string \"Pool was not created by the admin\""
                        },
                        "value": "Pool was not created by the admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31acbe3d12b813e111dc1cc4e8ae39d7f2f57f94edf623438aaea3c22cfeb1f7",
                          "typeString": "literal_string \"Pool was not created by the admin\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 30,
=======
                      "id": 34,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "556:7:0",
=======
                      "src": "623:7:0",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 37,
=======
                    "id": 41,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "556:67:0",
=======
                    "src": "623:67:0",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "556:67:0"
                },
                {
                  "expression": {
                    "id": 41,
=======
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "623:67:0"
                },
                {
                  "expression": {
                    "id": 45,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 39,
                      "name": "fundsPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "633:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FundsPool_$829",
=======
                      "id": 43,
                      "name": "fundsPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "700:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FundsPool_$897",
>>>>>>> main
                        "typeString": "contract FundsPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 40,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "645:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FundsPool_$829",
                        "typeString": "contract FundsPool"
                      }
                    },
                    "src": "633:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FundsPool_$829",
                      "typeString": "contract FundsPool"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "633:16:0"
=======
                      "id": 44,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "712:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FundsPool_$897",
                        "typeString": "contract FundsPool"
                      }
                    },
                    "src": "700:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FundsPool_$897",
                      "typeString": "contract FundsPool"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "700:16:0"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "a635a0a8",
<<<<<<< HEAD
            "id": 44,
=======
            "id": 48,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateFundsPool",
<<<<<<< HEAD
            "nameLocation": "436:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28,
=======
            "nameLocation": "503:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 32,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 27,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "462:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "452:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_FundsPool_$829",
                    "typeString": "contract FundsPool"
                  },
                  "typeName": {
                    "id": 26,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25,
                      "name": "FundsPool",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 829,
                      "src": "452:9:0"
                    },
                    "referencedDeclaration": 829,
                    "src": "452:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FundsPool_$829",
=======
                  "id": 31,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "529:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "519:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_FundsPool_$897",
                    "typeString": "contract FundsPool"
                  },
                  "typeName": {
                    "id": 30,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29,
                      "name": "FundsPool",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 897,
                      "src": "519:9:0"
                    },
                    "referencedDeclaration": 897,
                    "src": "519:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FundsPool_$897",
>>>>>>> main
                      "typeString": "contract FundsPool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "451:16:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "475:0:0"
            },
            "scope": 110,
            "src": "427:229:0",
=======
              "src": "518:16:0"
            },
            "returnParameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "542:0:0"
            },
            "scope": 134,
            "src": "494:229:0",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 63,
              "nodeType": "Block",
              "src": "723:189:0",
=======
              "id": 67,
              "nodeType": "Block",
              "src": "790:189:0",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 55,
=======
                        "id": 59,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 51,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "812:5:0",
=======
                          "id": 55,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "879:5:0",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
<<<<<<< HEAD
                              "id": 52,
                              "name": "fac",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "821:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CorporateFactory_$286",
                                "typeString": "contract CorporateFactory"
                              }
                            },
                            "id": 53,
=======
                              "id": 56,
                              "name": "fac",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51,
                              "src": "888:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CorporateFactory_$333",
                                "typeString": "contract CorporateFactory"
                              }
                            },
                            "id": 57,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 115,
                            "src": "821:9:0",
=======
                            "referencedDeclaration": 140,
                            "src": "888:9:0",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
<<<<<<< HEAD
                          "id": 54,
=======
                          "id": 58,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "821:11:0",
=======
                          "src": "888:11:0",
>>>>>>> main
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "812:20:0",
=======
                        "src": "879:20:0",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466163746f727920776173206e6f742063726561746564206279207468652061646d696e",
<<<<<<< HEAD
                        "id": 56,
=======
                        "id": 60,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "834:38:0",
=======
                        "src": "901:38:0",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_18800ddaffb2bbe6f2bc5e467d1cfa9d8c92071f32e94da5dc318c27d42ebc51",
                          "typeString": "literal_string \"Factory was not created by the admin\""
                        },
                        "value": "Factory was not created by the admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_18800ddaffb2bbe6f2bc5e467d1cfa9d8c92071f32e94da5dc318c27d42ebc51",
                          "typeString": "literal_string \"Factory was not created by the admin\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 50,
=======
                      "id": 54,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "804:7:0",
=======
                      "src": "871:7:0",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 57,
=======
                    "id": 61,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "804:69:0",
=======
                    "src": "871:69:0",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "804:69:0"
                },
                {
                  "expression": {
                    "id": 61,
=======
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "871:69:0"
                },
                {
                  "expression": {
                    "id": 65,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 59,
                      "name": "corporateFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "883:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CorporateFactory_$286",
=======
                      "id": 63,
                      "name": "corporateFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "950:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CorporateFactory_$333",
>>>>>>> main
                        "typeString": "contract CorporateFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 60,
                      "name": "fac",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "902:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CorporateFactory_$286",
                        "typeString": "contract CorporateFactory"
                      }
                    },
                    "src": "883:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CorporateFactory_$286",
                      "typeString": "contract CorporateFactory"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "883:22:0"
=======
                      "id": 64,
                      "name": "fac",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "969:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CorporateFactory_$333",
                        "typeString": "contract CorporateFactory"
                      }
                    },
                    "src": "950:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CorporateFactory_$333",
                      "typeString": "contract CorporateFactory"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "950:22:0"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "b34485ce",
<<<<<<< HEAD
            "id": 64,
=======
            "id": 68,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateCorporateFactory",
<<<<<<< HEAD
            "nameLocation": "671:22:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 48,
=======
            "nameLocation": "738:22:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 52,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 47,
                  "mutability": "mutable",
                  "name": "fac",
                  "nameLocation": "711:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "694:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CorporateFactory_$286",
                    "typeString": "contract CorporateFactory"
                  },
                  "typeName": {
                    "id": 46,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 45,
                      "name": "CorporateFactory",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 286,
                      "src": "694:16:0"
                    },
                    "referencedDeclaration": 286,
                    "src": "694:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CorporateFactory_$286",
=======
                  "id": 51,
                  "mutability": "mutable",
                  "name": "fac",
                  "nameLocation": "778:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 68,
                  "src": "761:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CorporateFactory_$333",
                    "typeString": "contract CorporateFactory"
                  },
                  "typeName": {
                    "id": 50,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49,
                      "name": "CorporateFactory",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 333,
                      "src": "761:16:0"
                    },
                    "referencedDeclaration": 333,
                    "src": "761:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CorporateFactory_$333",
>>>>>>> main
                      "typeString": "contract CorporateFactory"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "693:22:0"
            },
            "returnParameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "723:0:0"
            },
            "scope": 110,
            "src": "662:250:0",
=======
              "src": "760:22:0"
            },
            "returnParameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "790:0:0"
            },
            "scope": 134,
            "src": "729:250:0",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 83,
              "nodeType": "Block",
              "src": "977:188:0",
=======
              "id": 87,
              "nodeType": "Block",
              "src": "1044:188:0",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 75,
=======
                        "id": 79,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
<<<<<<< HEAD
                          "id": 71,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "1066:5:0",
=======
                          "id": 75,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "1133:5:0",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
<<<<<<< HEAD
                              "id": 72,
                              "name": "fac",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "1075:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ReceiverFactory_$1276",
                                "typeString": "contract ReceiverFactory"
                              }
                            },
                            "id": 73,
=======
                              "id": 76,
                              "name": "fac",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71,
                              "src": "1142:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ReceiverFactory_$1403",
                                "typeString": "contract ReceiverFactory"
                              }
                            },
                            "id": 77,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 1140,
                            "src": "1075:9:0",
=======
                            "referencedDeclaration": 1262,
                            "src": "1142:9:0",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
<<<<<<< HEAD
                          "id": 74,
=======
                          "id": 78,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "1075:11:0",
=======
                          "src": "1142:11:0",
>>>>>>> main
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "1066:20:0",
=======
                        "src": "1133:20:0",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466163746f727920776173206e6f742063726561746564206279207468652061646d696e",
<<<<<<< HEAD
                        "id": 76,
=======
                        "id": 80,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "1088:38:0",
=======
                        "src": "1155:38:0",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_18800ddaffb2bbe6f2bc5e467d1cfa9d8c92071f32e94da5dc318c27d42ebc51",
                          "typeString": "literal_string \"Factory was not created by the admin\""
                        },
                        "value": "Factory was not created by the admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_18800ddaffb2bbe6f2bc5e467d1cfa9d8c92071f32e94da5dc318c27d42ebc51",
                          "typeString": "literal_string \"Factory was not created by the admin\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 70,
=======
                      "id": 74,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "1058:7:0",
=======
                      "src": "1125:7:0",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 77,
=======
                    "id": 81,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1058:69:0",
=======
                    "src": "1125:69:0",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1058:69:0"
                },
                {
                  "expression": {
                    "id": 81,
=======
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "1125:69:0"
                },
                {
                  "expression": {
                    "id": 85,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 79,
                      "name": "receiverFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "1137:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ReceiverFactory_$1276",
=======
                      "id": 83,
                      "name": "receiverFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "1204:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ReceiverFactory_$1403",
>>>>>>> main
                        "typeString": "contract ReceiverFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 80,
                      "name": "fac",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "1155:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ReceiverFactory_$1276",
                        "typeString": "contract ReceiverFactory"
                      }
                    },
                    "src": "1137:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ReceiverFactory_$1276",
                      "typeString": "contract ReceiverFactory"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "1137:21:0"
=======
                      "id": 84,
                      "name": "fac",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "1222:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ReceiverFactory_$1403",
                        "typeString": "contract ReceiverFactory"
                      }
                    },
                    "src": "1204:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ReceiverFactory_$1403",
                      "typeString": "contract ReceiverFactory"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "1204:21:0"
>>>>>>> main
                }
              ]
            },
            "functionSelector": "cfb17d61",
<<<<<<< HEAD
            "id": 84,
=======
            "id": 88,
>>>>>>> main
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateReceiverFactory",
<<<<<<< HEAD
            "nameLocation": "927:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 68,
=======
            "nameLocation": "994:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 72,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 67,
                  "mutability": "mutable",
                  "name": "fac",
                  "nameLocation": "965:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "949:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ReceiverFactory_$1276",
                    "typeString": "contract ReceiverFactory"
                  },
                  "typeName": {
                    "id": 66,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 65,
                      "name": "ReceiverFactory",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1276,
                      "src": "949:15:0"
                    },
                    "referencedDeclaration": 1276,
                    "src": "949:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ReceiverFactory_$1276",
=======
                  "id": 71,
                  "mutability": "mutable",
                  "name": "fac",
                  "nameLocation": "1032:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "1016:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ReceiverFactory_$1403",
                    "typeString": "contract ReceiverFactory"
                  },
                  "typeName": {
                    "id": 70,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 69,
                      "name": "ReceiverFactory",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1403,
                      "src": "1016:15:0"
                    },
                    "referencedDeclaration": 1403,
                    "src": "1016:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ReceiverFactory_$1403",
>>>>>>> main
                      "typeString": "contract ReceiverFactory"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "948:21:0"
            },
            "returnParameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "977:0:0"
            },
            "scope": 110,
            "src": "918:247:0",
=======
              "src": "1015:21:0"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1044:0:0"
            },
            "scope": 134,
            "src": "985:247:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 107,
              "nodeType": "Block",
              "src": "1291:185:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 95,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "1380:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 96,
                              "name": "fac",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91,
                              "src": "1389:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GiverFactory_$1091",
                                "typeString": "contract GiverFactory"
                              }
                            },
                            "id": 97,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1012,
                            "src": "1389:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1389:11:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1380:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466163746f727920776173206e6f742063726561746564206279207468652061646d696e",
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1402:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_18800ddaffb2bbe6f2bc5e467d1cfa9d8c92071f32e94da5dc318c27d42ebc51",
                          "typeString": "literal_string \"Factory was not created by the admin\""
                        },
                        "value": "Factory was not created by the admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_18800ddaffb2bbe6f2bc5e467d1cfa9d8c92071f32e94da5dc318c27d42ebc51",
                          "typeString": "literal_string \"Factory was not created by the admin\""
                        }
                      ],
                      "id": 94,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1372:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1372:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "1372:69:0"
                },
                {
                  "expression": {
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 103,
                      "name": "giverFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1451:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GiverFactory_$1091",
                        "typeString": "contract GiverFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 104,
                      "name": "fac",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "1466:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GiverFactory_$1091",
                        "typeString": "contract GiverFactory"
                      }
                    },
                    "src": "1451:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GiverFactory_$1091",
                      "typeString": "contract GiverFactory"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "1451:18:0"
                }
              ]
            },
            "functionSelector": "5d9f790b",
            "id": 108,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateGiverFactory",
            "nameLocation": "1247:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "fac",
                  "nameLocation": "1279:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 108,
                  "src": "1266:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GiverFactory_$1091",
                    "typeString": "contract GiverFactory"
                  },
                  "typeName": {
                    "id": 90,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 89,
                      "name": "GiverFactory",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1091,
                      "src": "1266:12:0"
                    },
                    "referencedDeclaration": 1091,
                    "src": "1266:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GiverFactory_$1091",
                      "typeString": "contract GiverFactory"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1265:18:0"
            },
            "returnParameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1291:0:0"
            },
            "scope": 134,
            "src": "1238:238:0",
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 97,
              "nodeType": "Block",
              "src": "1200:69:0",
=======
              "id": 121,
              "nodeType": "Block",
              "src": "1511:69:0",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 93,
=======
                        "id": 117,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
<<<<<<< HEAD
                            "id": 87,
=======
                            "id": 111,
>>>>>>> main
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                            "src": "1218:3:0",
=======
                            "src": "1529:3:0",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
<<<<<<< HEAD
                          "id": 88,
=======
                          "id": 112,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "src": "1218:10:0",
=======
                          "src": "1529:10:0",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 91,
                              "name": "fundsPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "1240:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FundsPool_$829",
=======
                              "id": 115,
                              "name": "fundsPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "1551:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FundsPool_$897",
>>>>>>> main
                                "typeString": "contract FundsPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
<<<<<<< HEAD
                                "typeIdentifier": "t_contract$_FundsPool_$829",
                                "typeString": "contract FundsPool"
                              }
                            ],
                            "id": 90,
=======
                                "typeIdentifier": "t_contract$_FundsPool_$897",
                                "typeString": "contract FundsPool"
                              }
                            ],
                            "id": 114,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "1232:7:0",
=======
                            "src": "1543:7:0",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 89,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1232:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 92,
=======
                              "id": 113,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1543:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 116,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "1232:18:0",
=======
                          "src": "1543:18:0",
>>>>>>> main
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "1218:32:0",
=======
                        "src": "1529:32:0",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "id": 86,
=======
                      "id": 110,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "1210:7:0",
=======
                      "src": "1521:7:0",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 94,
=======
                    "id": 118,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1210:41:0",
=======
                    "src": "1521:41:0",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "1210:41:0"
                },
                {
                  "id": 96,
                  "nodeType": "PlaceholderStatement",
                  "src": "1261:1:0"
                }
              ]
            },
            "id": 98,
            "name": "onlyFundsPool",
            "nameLocation": "1184:13:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1197:2:0"
            },
            "src": "1175:94:0",
=======
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "1521:41:0"
                },
                {
                  "id": 120,
                  "nodeType": "PlaceholderStatement",
                  "src": "1572:1:0"
                }
              ]
            },
            "id": 122,
            "name": "onlyFundsPool",
            "nameLocation": "1495:13:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1508:2:0"
            },
            "src": "1486:94:0",
>>>>>>> main
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 108,
              "nodeType": "Block",
              "src": "1296:56:0",
=======
              "id": 132,
              "nodeType": "Block",
              "src": "1607:56:0",
>>>>>>> main
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 104,
=======
                        "id": 128,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
<<<<<<< HEAD
                            "id": 101,
=======
                            "id": 125,
>>>>>>> main
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
<<<<<<< HEAD
                            "src": "1314:3:0",
=======
                            "src": "1625:3:0",
>>>>>>> main
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
<<<<<<< HEAD
                          "id": 102,
=======
                          "id": 126,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "src": "1314:10:0",
=======
                          "src": "1625:10:0",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
<<<<<<< HEAD
                          "id": 103,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "1328:5:0",
=======
                          "id": 127,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "1639:5:0",
>>>>>>> main
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "1314:19:0",
=======
                        "src": "1625:19:0",
>>>>>>> main
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
<<<<<<< HEAD
                      "id": 100,
=======
                      "id": 124,
>>>>>>> main
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
<<<<<<< HEAD
                      "src": "1306:7:0",
=======
                      "src": "1617:7:0",
>>>>>>> main
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 105,
=======
                    "id": 129,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1306:28:0",
=======
                    "src": "1617:28:0",
>>>>>>> main
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "1306:28:0"
                },
                {
                  "id": 107,
                  "nodeType": "PlaceholderStatement",
                  "src": "1344:1:0"
                }
              ]
            },
            "id": 109,
            "name": "onlyOwner",
            "nameLocation": "1284:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1293:2:0"
            },
            "src": "1275:77:0",
=======
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "1617:28:0"
                },
                {
                  "id": 131,
                  "nodeType": "PlaceholderStatement",
                  "src": "1655:1:0"
                }
              ]
            },
            "id": 133,
            "name": "onlyOwner",
            "nameLocation": "1595:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1604:2:0"
            },
            "src": "1586:77:0",
>>>>>>> main
            "virtual": false,
            "visibility": "internal"
          }
        ],
<<<<<<< HEAD
        "scope": 111,
        "src": "199:1157:0",
        "usedErrors": []
      }
    ],
    "src": "0:1359:0"
=======
        "scope": 135,
        "src": "228:1439:0",
        "usedErrors": []
      }
    ],
    "src": "0:1670:0"
>>>>>>> main
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
<<<<<<< HEAD
      "address": "0xab2A041Baf5EA213ECe187FB97Bd55e1F6404DB1",
      "transactionHash": "0x3f7a801f946d90750379e21f1fcd5f87d4c982767d3491d67025d483b3e951d3"
    }
  },
  "schemaVersion": "3.4.2",
  "updatedAt": "2021-07-29T03:31:43.263Z",
  "networkType": "ethereum",
=======
      "address": "0x590570012E061e363c8d1e169498dD9D887cfcfb",
      "transactionHash": "0x8e37d875804d3a1d9bd9a33372ed815c9cdfe9780d9738a6fa95a7c2d1ce6c18"
    }
  },
  "schemaVersion": "3.4.2",
  "updatedAt": "2021-07-29T06:07:25.411Z",
>>>>>>> main
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}